{"ast":null,"code":"\"use strict\"; // Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar FullJitterBackoffFactory_1 = require(\"../backoff/FullJitterBackoffFactory\");\n\nvar DefaultDOMWebSocketFactory_1 = require(\"../domwebsocket/DefaultDOMWebSocketFactory\");\n\nvar Maybe_1 = require(\"../maybe/Maybe\");\n\nvar WebMMediaRecordingFactory_1 = require(\"../mediarecording/WebMMediaRecordingFactory\");\n\nvar DefaultPromisedWebSocketFactory_1 = require(\"../promisedwebsocket/DefaultPromisedWebSocketFactory\");\n\nvar ReconnectingPromisedWebSocketFactory_1 = require(\"../promisedwebsocket/ReconnectingPromisedWebSocketFactory\");\n\nvar ProtocolScreenMessageDetailSerialization_1 = require(\"../screenmessagedetailserialization/ProtocolScreenMessageDetailSerialization\");\n\nvar ScreenShareStreamFactory_1 = require(\"../screensharestreaming/ScreenShareStreamFactory\");\n\nvar ScreenSharingMessageFlagSerializer_1 = require(\"../screensharingmessageserialization/ScreenSharingMessageFlagSerializer\");\n\nvar ScreenSharingMessageSerializer_1 = require(\"../screensharingmessageserialization/ScreenSharingMessageSerializer\");\n\nvar ScreenSharingMessageTypeSerializer_1 = require(\"../screensharingmessageserialization/ScreenSharingMessageTypeSerializer\");\n\nvar DefaultScreenSharingSessionFactory_1 = require(\"./DefaultScreenSharingSessionFactory\");\n\nvar ScreenSharingSessionContainer =\n/** @class */\nfunction () {\n  function ScreenSharingSessionContainer(mediaStreamBroker, logger, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.mediaStreamBroker = mediaStreamBroker;\n    this.logger = logger;\n    this.options = options;\n    this.screenSharingSessionFactoryMemo = null;\n    this.backoffFactoryMemo = null;\n  }\n\n  ScreenSharingSessionContainer.prototype.screenSharingSessionFactory = function () {\n    this.screenSharingSessionFactoryMemo = this.screenSharingSessionFactoryMemo || new DefaultScreenSharingSessionFactory_1.default(this.displayMediaConstraints, this.reconnectingPromisedWebSocketFactory(), this.messageSerialization(), this.mediaStreamBroker, this.screenSharingStreamFactory(), this.mediaRecordingFactory(), this.logger);\n    return this.screenSharingSessionFactoryMemo;\n  };\n\n  ScreenSharingSessionContainer.prototype.displayMediaConstraints = function (sourceId) {\n    return {\n      audio: false,\n      video: __assign(__assign({}, !sourceId && {\n        frameRate: {\n          max: 3\n        }\n      }), sourceId && {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sourceId,\n          maxFrameRate: 3\n        }\n      })\n    };\n  };\n\n  ScreenSharingSessionContainer.prototype.screenSharingStreamFactory = function () {\n    return new ScreenShareStreamFactory_1.default();\n  };\n\n  ScreenSharingSessionContainer.prototype.mediaRecordingFactory = function () {\n    var options = {};\n    Maybe_1.default.of(this.options.bitRate).map(function (f) {\n      return options.videoBitsPerSecond = f;\n    });\n    return new WebMMediaRecordingFactory_1.default(options);\n  };\n\n  ScreenSharingSessionContainer.prototype.reconnectingPromisedWebSocketFactory = function () {\n    return new ReconnectingPromisedWebSocketFactory_1.default(this.promisedWebSocketFactory(), this.backOffFactory(), Maybe_1.default.of(this.options.reconnectRetryLimit).getOrElse(5));\n  };\n\n  ScreenSharingSessionContainer.prototype.backOffFactory = function () {\n    this.backoffFactoryMemo = this.backoffFactoryMemo || new FullJitterBackoffFactory_1.default(1000, 100, 300);\n    return this.backoffFactoryMemo;\n  };\n\n  ScreenSharingSessionContainer.prototype.promisedWebSocketFactory = function () {\n    return new DefaultPromisedWebSocketFactory_1.default(this.domWebSocketFactory());\n  };\n\n  ScreenSharingSessionContainer.prototype.domWebSocketFactory = function () {\n    return new DefaultDOMWebSocketFactory_1.default();\n  };\n\n  ScreenSharingSessionContainer.prototype.messageSerialization = function () {\n    return new ScreenSharingMessageSerializer_1.default(this.typeSerialization(), this.flagSerialization(), this.screenSignalingSerialization());\n  };\n\n  ScreenSharingSessionContainer.prototype.typeSerialization = function () {\n    return new ScreenSharingMessageTypeSerializer_1.default();\n  };\n\n  ScreenSharingSessionContainer.prototype.flagSerialization = function () {\n    return new ScreenSharingMessageFlagSerializer_1.default();\n  };\n\n  ScreenSharingSessionContainer.prototype.screenSignalingSerialization = function () {\n    return new ProtocolScreenMessageDetailSerialization_1.default();\n  };\n\n  return ScreenSharingSessionContainer;\n}();\n\nexports.default = ScreenSharingSessionContainer;","map":{"version":3,"sources":["../../src/screensharingsession/ScreenSharingSessionContainer.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,0BAAA,GAAA,OAAA,CAAA,qCAAA,CAAA;;AACA,IAAA,4BAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AAGA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAGA,IAAA,2BAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AAEA,IAAA,iCAAA,GAAA,OAAA,CAAA,sDAAA,CAAA;;AAEA,IAAA,sCAAA,GAAA,OAAA,CAAA,2DAAA,CAAA;;AACA,IAAA,0CAAA,GAAA,OAAA,CAAA,8EAAA,CAAA;;AAEA,IAAA,0BAAA,GAAA,OAAA,CAAA,kDAAA,CAAA;;AAGA,IAAA,oCAAA,GAAA,OAAA,CAAA,yEAAA,CAAA;;AAEA,IAAA,gCAAA,GAAA,OAAA,CAAA,qEAAA,CAAA;;AAEA,IAAA,oCAAA,GAAA,OAAA,CAAA,yEAAA,CAAA;;AACA,IAAA,oCAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;;AAIA,IAAA,6BAAA;AAAA;AAAA,YAAA;AAIE,WAAA,6BAAA,CACU,iBADV,EAEU,MAFV,EAGU,OAHV,EAGmD;AAAzC,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAyC;;AAFzC,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,OAAA,GAAA,OAAA;AANF,SAAA,+BAAA,GAAsE,IAAtE;AACA,SAAA,kBAAA,GAA4C,IAA5C;AAMJ;;AAEJ,EAAA,6BAAA,CAAA,SAAA,CAAA,2BAAA,GAAA,YAAA;AACE,SAAK,+BAAL,GACE,KAAK,+BAAL,IACA,IAAI,oCAAA,CAAA,OAAJ,CACE,KAAK,uBADP,EAEE,KAAK,oCAAL,EAFF,EAGE,KAAK,oBAAL,EAHF,EAIE,KAAK,iBAJP,EAKE,KAAK,0BAAL,EALF,EAME,KAAK,qBAAL,EANF,EAOE,KAAK,MAPP,CAFF;AAWA,WAAO,KAAK,+BAAZ;AACD,GAbD;;AAeA,EAAA,6BAAA,CAAA,SAAA,CAAA,uBAAA,GAAA,UAAwB,QAAxB,EAAyC;AACvC,WAAO;AACL,MAAA,KAAK,EAAE,KADF;AAEL,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACC,CAAC,QAAD,IAAa;AACf,QAAA,SAAS,EAAE;AACT,UAAA,GAAG,EAAE;AADI;AADI,OADd,CAAA,EAMC,QAAQ,IAAI;AACd,QAAA,SAAS,EAAE;AACT,UAAA,iBAAiB,EAAE,SADV;AAET,UAAA,mBAAmB,EAAE,QAFZ;AAGT,UAAA,YAAY,EAAE;AAHL;AADG,OANb;AAFA,KAAP;AAiBD,GAlBD;;AAoBQ,EAAA,6BAAA,CAAA,SAAA,CAAA,0BAAA,GAAR,YAAA;AACE,WAAO,IAAI,0BAAA,CAAA,OAAJ,EAAP;AACD,GAFO;;AAIA,EAAA,6BAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,YAAA;AACE,QAAM,OAAO,GAA0B,EAAvC;AACA,IAAA,OAAA,CAAA,OAAA,CAAM,EAAN,CAAS,KAAK,OAAL,CAAa,OAAtB,EAA+B,GAA/B,CAAmC,UAAA,CAAA,EAAC;AAAI,aAAC,OAAO,CAAC,kBAAR,GAAD,CAAA;AAAgC,KAAxE;AACA,WAAO,IAAI,2BAAA,CAAA,OAAJ,CAA8B,OAA9B,CAAP;AACD,GAJO;;AAMA,EAAA,6BAAA,CAAA,SAAA,CAAA,oCAAA,GAAR,YAAA;AACE,WAAO,IAAI,sCAAA,CAAA,OAAJ,CACL,KAAK,wBAAL,EADK,EAEL,KAAK,cAAL,EAFK,EAGL,OAAA,CAAA,OAAA,CAAM,EAAN,CAAS,KAAK,OAAL,CAAa,mBAAtB,EAA2C,SAA3C,CAAqD,CAArD,CAHK,CAAP;AAKD,GANO;;AAQA,EAAA,6BAAA,CAAA,SAAA,CAAA,cAAA,GAAR,YAAA;AACE,SAAK,kBAAL,GACE,KAAK,kBAAL,IAA2B,IAAI,0BAAA,CAAA,OAAJ,CAA6B,IAA7B,EAAmC,GAAnC,EAAwC,GAAxC,CAD7B;AAEA,WAAO,KAAK,kBAAZ;AACD,GAJO;;AAMA,EAAA,6BAAA,CAAA,SAAA,CAAA,wBAAA,GAAR,YAAA;AACE,WAAO,IAAI,iCAAA,CAAA,OAAJ,CAAoC,KAAK,mBAAL,EAApC,CAAP;AACD,GAFO;;AAIA,EAAA,6BAAA,CAAA,SAAA,CAAA,mBAAA,GAAR,YAAA;AACE,WAAO,IAAI,4BAAA,CAAA,OAAJ,EAAP;AACD,GAFO;;AAIA,EAAA,6BAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,YAAA;AACE,WAAO,IAAI,gCAAA,CAAA,OAAJ,CACL,KAAK,iBAAL,EADK,EAEL,KAAK,iBAAL,EAFK,EAGL,KAAK,4BAAL,EAHK,CAAP;AAKD,GANO;;AAQA,EAAA,6BAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,YAAA;AACE,WAAO,IAAI,oCAAA,CAAA,OAAJ,EAAP;AACD,GAFO;;AAIA,EAAA,6BAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,YAAA;AACE,WAAO,IAAI,oCAAA,CAAA,OAAJ,EAAP;AACD,GAFO;;AAIA,EAAA,6BAAA,CAAA,SAAA,CAAA,4BAAA,GAAR,YAAA;AACE,WAAO,IAAI,0CAAA,CAAA,OAAJ,EAAP;AACD,GAFO;;AAGV,SAAA,6BAAA;AAAC,CAhGD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FullJitterBackoffFactory_1 = require(\"../backoff/FullJitterBackoffFactory\");\nvar DefaultDOMWebSocketFactory_1 = require(\"../domwebsocket/DefaultDOMWebSocketFactory\");\nvar Maybe_1 = require(\"../maybe/Maybe\");\nvar WebMMediaRecordingFactory_1 = require(\"../mediarecording/WebMMediaRecordingFactory\");\nvar DefaultPromisedWebSocketFactory_1 = require(\"../promisedwebsocket/DefaultPromisedWebSocketFactory\");\nvar ReconnectingPromisedWebSocketFactory_1 = require(\"../promisedwebsocket/ReconnectingPromisedWebSocketFactory\");\nvar ProtocolScreenMessageDetailSerialization_1 = require(\"../screenmessagedetailserialization/ProtocolScreenMessageDetailSerialization\");\nvar ScreenShareStreamFactory_1 = require(\"../screensharestreaming/ScreenShareStreamFactory\");\nvar ScreenSharingMessageFlagSerializer_1 = require(\"../screensharingmessageserialization/ScreenSharingMessageFlagSerializer\");\nvar ScreenSharingMessageSerializer_1 = require(\"../screensharingmessageserialization/ScreenSharingMessageSerializer\");\nvar ScreenSharingMessageTypeSerializer_1 = require(\"../screensharingmessageserialization/ScreenSharingMessageTypeSerializer\");\nvar DefaultScreenSharingSessionFactory_1 = require(\"./DefaultScreenSharingSessionFactory\");\nvar ScreenSharingSessionContainer = /** @class */ (function () {\n    function ScreenSharingSessionContainer(mediaStreamBroker, logger, options) {\n        if (options === void 0) { options = {}; }\n        this.mediaStreamBroker = mediaStreamBroker;\n        this.logger = logger;\n        this.options = options;\n        this.screenSharingSessionFactoryMemo = null;\n        this.backoffFactoryMemo = null;\n    }\n    ScreenSharingSessionContainer.prototype.screenSharingSessionFactory = function () {\n        this.screenSharingSessionFactoryMemo =\n            this.screenSharingSessionFactoryMemo ||\n                new DefaultScreenSharingSessionFactory_1.default(this.displayMediaConstraints, this.reconnectingPromisedWebSocketFactory(), this.messageSerialization(), this.mediaStreamBroker, this.screenSharingStreamFactory(), this.mediaRecordingFactory(), this.logger);\n        return this.screenSharingSessionFactoryMemo;\n    };\n    ScreenSharingSessionContainer.prototype.displayMediaConstraints = function (sourceId) {\n        return {\n            audio: false,\n            video: __assign(__assign({}, (!sourceId && {\n                frameRate: {\n                    max: 3,\n                },\n            })), (sourceId && {\n                mandatory: {\n                    chromeMediaSource: 'desktop',\n                    chromeMediaSourceId: sourceId,\n                    maxFrameRate: 3,\n                },\n            })),\n        };\n    };\n    ScreenSharingSessionContainer.prototype.screenSharingStreamFactory = function () {\n        return new ScreenShareStreamFactory_1.default();\n    };\n    ScreenSharingSessionContainer.prototype.mediaRecordingFactory = function () {\n        var options = {};\n        Maybe_1.default.of(this.options.bitRate).map(function (f) { return (options.videoBitsPerSecond = f); });\n        return new WebMMediaRecordingFactory_1.default(options);\n    };\n    ScreenSharingSessionContainer.prototype.reconnectingPromisedWebSocketFactory = function () {\n        return new ReconnectingPromisedWebSocketFactory_1.default(this.promisedWebSocketFactory(), this.backOffFactory(), Maybe_1.default.of(this.options.reconnectRetryLimit).getOrElse(5));\n    };\n    ScreenSharingSessionContainer.prototype.backOffFactory = function () {\n        this.backoffFactoryMemo =\n            this.backoffFactoryMemo || new FullJitterBackoffFactory_1.default(1000, 100, 300);\n        return this.backoffFactoryMemo;\n    };\n    ScreenSharingSessionContainer.prototype.promisedWebSocketFactory = function () {\n        return new DefaultPromisedWebSocketFactory_1.default(this.domWebSocketFactory());\n    };\n    ScreenSharingSessionContainer.prototype.domWebSocketFactory = function () {\n        return new DefaultDOMWebSocketFactory_1.default();\n    };\n    ScreenSharingSessionContainer.prototype.messageSerialization = function () {\n        return new ScreenSharingMessageSerializer_1.default(this.typeSerialization(), this.flagSerialization(), this.screenSignalingSerialization());\n    };\n    ScreenSharingSessionContainer.prototype.typeSerialization = function () {\n        return new ScreenSharingMessageTypeSerializer_1.default();\n    };\n    ScreenSharingSessionContainer.prototype.flagSerialization = function () {\n        return new ScreenSharingMessageFlagSerializer_1.default();\n    };\n    ScreenSharingSessionContainer.prototype.screenSignalingSerialization = function () {\n        return new ProtocolScreenMessageDetailSerialization_1.default();\n    };\n    return ScreenSharingSessionContainer;\n}());\nexports.default = ScreenSharingSessionContainer;\n//# sourceMappingURL=ScreenSharingSessionContainer.js.map"]},"metadata":{},"sourceType":"script"}