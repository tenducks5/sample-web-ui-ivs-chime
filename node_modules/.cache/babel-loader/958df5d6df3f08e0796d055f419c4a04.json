{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\n\nvar MeetingSessionURLs =\n/** @class */\nfunction () {\n  function MeetingSessionURLs() {\n    /**\n     * The audio host URL of the session\n     */\n    this._audioHostURL = null;\n    /**\n     * The screen data URL of the session\n     */\n\n    this._screenDataURL = null;\n    /**\n     * The screen sharing URL of the session\n     */\n\n    this._screenSharingURL = null;\n    /**\n     * The screen viewing URL of the session\n     */\n\n    this._screenViewingURL = null;\n    /**\n     * The signaling URL of the session\n     */\n\n    this._signalingURL = null;\n    /**\n     * The TURN control URL of the session\n     */\n\n    this._turnControlURL = null;\n    /**\n     * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n     * The default implementation returns the original URL unchanged.\n     */\n\n    this.urlRewriter = function (url) {\n      return url;\n    };\n  }\n\n  Object.defineProperty(MeetingSessionURLs.prototype, \"audioHostURL\", {\n    /**\n     * Gets the audio host URL after applying the urlRewriter function.\n     */\n    get: function () {\n      return this.urlRewriter(this._audioHostURL);\n    },\n\n    /**\n     * Sets the raw audio host URL.\n     */\n    set: function (value) {\n      this._audioHostURL = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MeetingSessionURLs.prototype, \"screenDataURL\", {\n    /**\n     * Gets the screen data URL after applying the urlRewriter function.\n     */\n    get: function () {\n      return this.urlRewriter(this._screenDataURL);\n    },\n\n    /**\n     * Sets the raw screen data URL.\n     */\n    set: function (value) {\n      this._screenDataURL = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MeetingSessionURLs.prototype, \"screenSharingURL\", {\n    /**\n     * Gets the screen sharing URL after applying the urlRewriter function.\n     */\n    get: function () {\n      return this.urlRewriter(this._screenSharingURL);\n    },\n\n    /**\n     * Sets the raw screen sharing URL.\n     */\n    set: function (value) {\n      this._screenSharingURL = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MeetingSessionURLs.prototype, \"screenViewingURL\", {\n    /**\n     * Gets the screen viewing URL after applying the urlRewriter function.\n     */\n    get: function () {\n      return this.urlRewriter(this._screenViewingURL);\n    },\n\n    /**\n     * Sets the raw screen viewing URL.\n     */\n    set: function (value) {\n      this._screenViewingURL = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MeetingSessionURLs.prototype, \"signalingURL\", {\n    /**\n     * Gets the signaling URL after applying the urlRewriter function.\n     */\n    get: function () {\n      return this.urlRewriter(this._signalingURL);\n    },\n\n    /**\n     * Sets the raw signaling URL.\n     */\n    set: function (value) {\n      this._signalingURL = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MeetingSessionURLs.prototype, \"turnControlURL\", {\n    /**\n     * Gets the TURN control URL after applying the urlRewriter function.\n     */\n    get: function () {\n      return this.urlRewriter(this._turnControlURL);\n    },\n\n    /**\n     * Sets the raw TURN control URL.\n     */\n    set: function (value) {\n      this._turnControlURL = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return MeetingSessionURLs;\n}();\n\nexports.default = MeetingSessionURLs;","map":{"version":3,"sources":["../../src/meetingsession/MeetingSessionURLs.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AAEA;;;AAGG;;AACH,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA;AACE;;AAEG;AACK,SAAA,aAAA,GAA+B,IAA/B;AAER;;AAEG;;AACK,SAAA,cAAA,GAAgC,IAAhC;AAER;;AAEG;;AACK,SAAA,iBAAA,GAAmC,IAAnC;AAER;;AAEG;;AACK,SAAA,iBAAA,GAAmC,IAAnC;AAER;;AAEG;;AACK,SAAA,aAAA,GAA+B,IAA/B;AAER;;AAEG;;AACK,SAAA,eAAA,GAAiC,IAAjC;AAsFR;;;AAGG;;AACH,SAAA,WAAA,GAAqD,UAAC,GAAD,EAAmB;AACtE,aAAO,GAAP;AACD,KAFD;AAGD;;AAxFC,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AAHhB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,WAAL,CAAiB,KAAK,aAAtB,CAAP;AACD,KAFe;;AAIhB;;AAEG;SACH,UAAiB,KAAjB,EAAqC;AACnC,WAAK,aAAL,GAAqB,KAArB;AACD,KATe;qBAAA;;AAAA,GAAhB;AAcA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;AAHjB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,WAAL,CAAiB,KAAK,cAAtB,CAAP;AACD,KAFgB;;AAIjB;;AAEG;SACH,UAAkB,KAAlB,EAAsC;AACpC,WAAK,cAAL,GAAsB,KAAtB;AACD,KATgB;qBAAA;;AAAA,GAAjB;AAcA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,kBAAJ,EAAoB;AAHpB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,WAAL,CAAiB,KAAK,iBAAtB,CAAP;AACD,KAFmB;;AAIpB;;AAEG;SACH,UAAqB,KAArB,EAAyC;AACvC,WAAK,iBAAL,GAAyB,KAAzB;AACD,KATmB;qBAAA;;AAAA,GAApB;AAcA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,kBAAJ,EAAoB;AAHpB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,WAAL,CAAiB,KAAK,iBAAtB,CAAP;AACD,KAFmB;;AAIpB;;AAEG;SACH,UAAqB,KAArB,EAAyC;AACvC,WAAK,iBAAL,GAAyB,KAAzB;AACD,KATmB;qBAAA;;AAAA,GAApB;AAcA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AAHhB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,WAAL,CAAiB,KAAK,aAAtB,CAAP;AACD,KAFe;;AAIhB;;AAEG;SACH,UAAiB,KAAjB,EAAqC;AACnC,WAAK,aAAL,GAAqB,KAArB;AACD,KATe;qBAAA;;AAAA,GAAhB;AAcA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,gBAAJ,EAAkB;AAHlB;;AAEG;SACH,YAAA;AACE,aAAO,KAAK,WAAL,CAAiB,KAAK,eAAtB,CAAP;AACD,KAFiB;;AAIlB;;AAEG;SACH,UAAmB,KAAnB,EAAuC;AACrC,WAAK,eAAL,GAAuB,KAAvB;AACD,KATiB;qBAAA;;AAAA,GAAlB;AAkBF,SAAA,kBAAA;AAAC,CA1HD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\nvar MeetingSessionURLs = /** @class */ (function () {\n    function MeetingSessionURLs() {\n        /**\n         * The audio host URL of the session\n         */\n        this._audioHostURL = null;\n        /**\n         * The screen data URL of the session\n         */\n        this._screenDataURL = null;\n        /**\n         * The screen sharing URL of the session\n         */\n        this._screenSharingURL = null;\n        /**\n         * The screen viewing URL of the session\n         */\n        this._screenViewingURL = null;\n        /**\n         * The signaling URL of the session\n         */\n        this._signalingURL = null;\n        /**\n         * The TURN control URL of the session\n         */\n        this._turnControlURL = null;\n        /**\n         * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n         * The default implementation returns the original URL unchanged.\n         */\n        this.urlRewriter = function (url) {\n            return url;\n        };\n    }\n    Object.defineProperty(MeetingSessionURLs.prototype, \"audioHostURL\", {\n        /**\n         * Gets the audio host URL after applying the urlRewriter function.\n         */\n        get: function () {\n            return this.urlRewriter(this._audioHostURL);\n        },\n        /**\n         * Sets the raw audio host URL.\n         */\n        set: function (value) {\n            this._audioHostURL = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MeetingSessionURLs.prototype, \"screenDataURL\", {\n        /**\n         * Gets the screen data URL after applying the urlRewriter function.\n         */\n        get: function () {\n            return this.urlRewriter(this._screenDataURL);\n        },\n        /**\n         * Sets the raw screen data URL.\n         */\n        set: function (value) {\n            this._screenDataURL = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MeetingSessionURLs.prototype, \"screenSharingURL\", {\n        /**\n         * Gets the screen sharing URL after applying the urlRewriter function.\n         */\n        get: function () {\n            return this.urlRewriter(this._screenSharingURL);\n        },\n        /**\n         * Sets the raw screen sharing URL.\n         */\n        set: function (value) {\n            this._screenSharingURL = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MeetingSessionURLs.prototype, \"screenViewingURL\", {\n        /**\n         * Gets the screen viewing URL after applying the urlRewriter function.\n         */\n        get: function () {\n            return this.urlRewriter(this._screenViewingURL);\n        },\n        /**\n         * Sets the raw screen viewing URL.\n         */\n        set: function (value) {\n            this._screenViewingURL = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MeetingSessionURLs.prototype, \"signalingURL\", {\n        /**\n         * Gets the signaling URL after applying the urlRewriter function.\n         */\n        get: function () {\n            return this.urlRewriter(this._signalingURL);\n        },\n        /**\n         * Sets the raw signaling URL.\n         */\n        set: function (value) {\n            this._signalingURL = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MeetingSessionURLs.prototype, \"turnControlURL\", {\n        /**\n         * Gets the TURN control URL after applying the urlRewriter function.\n         */\n        get: function () {\n            return this.urlRewriter(this._turnControlURL);\n        },\n        /**\n         * Sets the raw TURN control URL.\n         */\n        set: function (value) {\n            this._turnControlURL = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MeetingSessionURLs;\n}());\nexports.default = MeetingSessionURLs;\n//# sourceMappingURL=MeetingSessionURLs.js.map"]},"metadata":{},"sourceType":"script"}