{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkScreenSignalingMessage = function () {\n  /**\n   * Properties of a SdkScreenSignalingMessage.\n   * @exports ISdkScreenSignalingMessage\n   * @interface ISdkScreenSignalingMessage\n   * @property {string|null} [attendeeId] SdkScreenSignalingMessage attendeeId\n   */\n\n  /**\n   * Constructs a new SdkScreenSignalingMessage.\n   * @exports SdkScreenSignalingMessage\n   * @classdesc Represents a SdkScreenSignalingMessage.\n   * @implements ISdkScreenSignalingMessage\n   * @constructor\n   * @param {ISdkScreenSignalingMessage=} [properties] Properties to set\n   */\n  function SdkScreenSignalingMessage(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * SdkScreenSignalingMessage attendeeId.\n   * @member {string} attendeeId\n   * @memberof SdkScreenSignalingMessage\n   * @instance\n   */\n\n\n  SdkScreenSignalingMessage.prototype.attendeeId = \"\";\n  /**\n   * Creates a new SdkScreenSignalingMessage instance using the specified properties.\n   * @function create\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {ISdkScreenSignalingMessage=} [properties] Properties to set\n   * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage instance\n   */\n\n  SdkScreenSignalingMessage.create = function create(properties) {\n    return new SdkScreenSignalingMessage(properties);\n  };\n  /**\n   * Encodes the specified SdkScreenSignalingMessage message. Does not implicitly {@link SdkScreenSignalingMessage.verify|verify} messages.\n   * @function encode\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {ISdkScreenSignalingMessage} message SdkScreenSignalingMessage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkScreenSignalingMessage.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).string(message.attendeeId);\n    return writer;\n  };\n  /**\n   * Encodes the specified SdkScreenSignalingMessage message, length delimited. Does not implicitly {@link SdkScreenSignalingMessage.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {ISdkScreenSignalingMessage} message SdkScreenSignalingMessage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SdkScreenSignalingMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SdkScreenSignalingMessage message from the specified reader or buffer.\n   * @function decode\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkScreenSignalingMessage.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SdkScreenSignalingMessage();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.attendeeId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SdkScreenSignalingMessage message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SdkScreenSignalingMessage.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SdkScreenSignalingMessage message.\n   * @function verify\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SdkScreenSignalingMessage.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) if (!$util.isString(message.attendeeId)) return \"attendeeId: string expected\";\n    return null;\n  };\n  /**\n   * Creates a SdkScreenSignalingMessage message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage\n   */\n\n\n  SdkScreenSignalingMessage.fromObject = function fromObject(object) {\n    if (object instanceof $root.SdkScreenSignalingMessage) return object;\n    var message = new $root.SdkScreenSignalingMessage();\n    if (object.attendeeId != null) message.attendeeId = String(object.attendeeId);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SdkScreenSignalingMessage message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SdkScreenSignalingMessage\n   * @static\n   * @param {SdkScreenSignalingMessage} message SdkScreenSignalingMessage\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SdkScreenSignalingMessage.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.attendeeId = \"\";\n    if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\")) object.attendeeId = message.attendeeId;\n    return object;\n  };\n  /**\n   * Converts this SdkScreenSignalingMessage to JSON.\n   * @function toJSON\n   * @memberof SdkScreenSignalingMessage\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SdkScreenSignalingMessage.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SdkScreenSignalingMessage;\n}();\n\nmodule.exports = $root;","map":{"version":3,"sources":["/Users/sykang/Documents/Git/amazon-ivs-chime-web-demo/web-ui/node_modules/amazon-chime-sdk-js/build/screensignalingprotocol/ScreenSignalingProtocol.js"],"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","SdkScreenSignalingMessage","properties","keys","Object","i","length","prototype","attendeeId","create","encode","message","writer","hasOwnProperty","uint32","string","encodeDelimited","ldelim","decode","reader","end","undefined","len","pos","tag","skipType","decodeDelimited","verify","isString","fromObject","object","String","toObject","options","defaults","toJSON","constructor","toJSONOptions","module","exports"],"mappings":"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","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkScreenSignalingMessage = (function() {\n\n    /**\n     * Properties of a SdkScreenSignalingMessage.\n     * @exports ISdkScreenSignalingMessage\n     * @interface ISdkScreenSignalingMessage\n     * @property {string|null} [attendeeId] SdkScreenSignalingMessage attendeeId\n     */\n\n    /**\n     * Constructs a new SdkScreenSignalingMessage.\n     * @exports SdkScreenSignalingMessage\n     * @classdesc Represents a SdkScreenSignalingMessage.\n     * @implements ISdkScreenSignalingMessage\n     * @constructor\n     * @param {ISdkScreenSignalingMessage=} [properties] Properties to set\n     */\n    function SdkScreenSignalingMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkScreenSignalingMessage attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkScreenSignalingMessage\n     * @instance\n     */\n    SdkScreenSignalingMessage.prototype.attendeeId = \"\";\n\n    /**\n     * Creates a new SdkScreenSignalingMessage instance using the specified properties.\n     * @function create\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {ISdkScreenSignalingMessage=} [properties] Properties to set\n     * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage instance\n     */\n    SdkScreenSignalingMessage.create = function create(properties) {\n        return new SdkScreenSignalingMessage(properties);\n    };\n\n    /**\n     * Encodes the specified SdkScreenSignalingMessage message. Does not implicitly {@link SdkScreenSignalingMessage.verify|verify} messages.\n     * @function encode\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {ISdkScreenSignalingMessage} message SdkScreenSignalingMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkScreenSignalingMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.attendeeId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkScreenSignalingMessage message, length delimited. Does not implicitly {@link SdkScreenSignalingMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {ISdkScreenSignalingMessage} message SdkScreenSignalingMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkScreenSignalingMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkScreenSignalingMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkScreenSignalingMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkScreenSignalingMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.attendeeId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkScreenSignalingMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkScreenSignalingMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkScreenSignalingMessage message.\n     * @function verify\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkScreenSignalingMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkScreenSignalingMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkScreenSignalingMessage} SdkScreenSignalingMessage\n     */\n    SdkScreenSignalingMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkScreenSignalingMessage)\n            return object;\n        var message = new $root.SdkScreenSignalingMessage();\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkScreenSignalingMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkScreenSignalingMessage\n     * @static\n     * @param {SdkScreenSignalingMessage} message SdkScreenSignalingMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkScreenSignalingMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.attendeeId = \"\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkScreenSignalingMessage to JSON.\n     * @function toJSON\n     * @memberof SdkScreenSignalingMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkScreenSignalingMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkScreenSignalingMessage;\n})();\n\nmodule.exports = $root;\n"]},"metadata":{},"sourceType":"script"}