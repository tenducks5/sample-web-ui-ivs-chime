{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Maybe_1 = require(\"../maybe/Maybe\");\n\nvar AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\n\nvar IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\n\nvar SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\n\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n/**\n * [[DefaultPingPong]] implements the PingPong and SignalingClientObserver interface.\n */\n\n\nvar DefaultPingPong =\n/** @class */\nfunction () {\n  function DefaultPingPong(signalingClient, intervalMs, logger) {\n    this.signalingClient = signalingClient;\n    this.intervalMs = intervalMs;\n    this.logger = logger;\n    this.observerQueue = new Set();\n    this.consecutivePongsUnaccountedFor = 0;\n    this.intervalScheduler = new IntervalScheduler_1.default(this.intervalMs);\n    this.pingId = 0;\n  }\n\n  DefaultPingPong.prototype.addObserver = function (observer) {\n    this.logger.info('adding a ping-pong observer');\n    this.observerQueue.add(observer);\n  };\n\n  DefaultPingPong.prototype.removeObserver = function (observer) {\n    this.logger.info('removing a ping-pong observer');\n    this.observerQueue.delete(observer);\n  };\n\n  DefaultPingPong.prototype.forEachObserver = function (observerFunc) {\n    var e_1, _a;\n\n    var _this = this;\n\n    var _loop_1 = function _loop_1(observer) {\n      new AsyncScheduler_1.default().start(function () {\n        if (_this.observerQueue.has(observer)) {\n          observerFunc(observer);\n        }\n      });\n    };\n\n    try {\n      for (var _b = __values(this.observerQueue), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var observer = _c.value;\n\n        _loop_1(observer);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  DefaultPingPong.prototype.start = function () {\n    this.stop();\n    this.signalingClient.registerObserver(this);\n\n    if (this.signalingClient.ready()) {\n      this.startPingInterval();\n    }\n  };\n\n  DefaultPingPong.prototype.stop = function () {\n    this.stopPingInterval();\n    this.signalingClient.removeObserver(this);\n  };\n\n  DefaultPingPong.prototype.startPingInterval = function () {\n    var _this = this;\n\n    this.intervalScheduler.start(function () {\n      _this.ping();\n    });\n    this.ping();\n  };\n\n  DefaultPingPong.prototype.stopPingInterval = function () {\n    this.intervalScheduler.stop();\n    this.pingId = 0;\n    this.consecutivePongsUnaccountedFor = 0;\n  };\n\n  DefaultPingPong.prototype.ping = function () {\n    var _this = this;\n\n    if (this.consecutivePongsUnaccountedFor > 0) {\n      this.logger.warn(\"missed pong \" + this.consecutivePongsUnaccountedFor + \" time(s)\");\n      this.forEachObserver(function (observer) {\n        Maybe_1.default.of(observer.didMissPongs).map(function (f) {\n          return f.bind(observer)(_this.consecutivePongsUnaccountedFor);\n        });\n      });\n    }\n\n    this.consecutivePongsUnaccountedFor += 1;\n    this.pingId = this.pingId + 1 & 0xffffffff;\n    var ping = SignalingProtocol_js_1.SdkPingPongFrame.create();\n    ping.pingId = this.pingId;\n    ping.type = SignalingProtocol_js_1.SdkPingPongType.PING;\n    this.pingTimestampLocalMs = this.signalingClient.pingPong(ping);\n    this.logger.debug(function () {\n      return \"sent ping \" + _this.pingId;\n    });\n  };\n\n  DefaultPingPong.prototype.pong = function (pingId) {\n    var pong = SignalingProtocol_js_1.SdkPingPongFrame.create();\n    pong.pingId = pingId;\n    pong.type = SignalingProtocol_js_1.SdkPingPongType.PONG;\n    this.signalingClient.pingPong(pong);\n  };\n\n  DefaultPingPong.prototype.handleSignalingClientEvent = function (event) {\n    switch (event.type) {\n      case SignalingClientEventType_1.default.WebSocketOpen:\n        this.startPingInterval();\n        break;\n\n      case SignalingClientEventType_1.default.WebSocketFailed:\n      case SignalingClientEventType_1.default.WebSocketError:\n        this.logger.warn(\"stopped pinging (\" + SignalingClientEventType_1.default[event.type] + \")\");\n        this.stopPingInterval();\n        break;\n\n      case SignalingClientEventType_1.default.WebSocketClosing:\n      case SignalingClientEventType_1.default.WebSocketClosed:\n        this.logger.info(\"stopped pinging (\" + SignalingClientEventType_1.default[event.type] + \")\");\n        this.stopPingInterval();\n        break;\n\n      case SignalingClientEventType_1.default.ReceivedSignalFrame:\n        if (event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG) {\n          break;\n        }\n\n        if (event.message.pingPong.type === SignalingProtocol_js_1.SdkPingPongType.PONG) {\n          var pingId_1 = event.message.pingPong.pingId;\n\n          if (pingId_1 !== this.pingId) {\n            this.logger.warn(\"unexpected ping id \" + pingId_1 + \" (expected \" + this.pingId + \")\");\n            break;\n          }\n\n          this.consecutivePongsUnaccountedFor = 0;\n          var pongTimestampRemoteMs_1;\n\n          if (typeof event.message.timestampMs === 'number') {\n            pongTimestampRemoteMs_1 = event.message.timestampMs;\n          } else {\n            break;\n          }\n\n          this.logger.debug(function () {\n            return \"received pong \" + pingId_1 + \" with timestamp \" + pongTimestampRemoteMs_1;\n          });\n          var pongTimestampLocalMs = event.timestampMs;\n          var pingPongLocalIntervalMs_1 = pongTimestampLocalMs - this.pingTimestampLocalMs;\n          var estimatedPingTimestampRemoteMs = Math.round(pongTimestampRemoteMs_1 - pingPongLocalIntervalMs_1 / 2);\n          var estimatedClockSkewMs_1 = this.pingTimestampLocalMs - estimatedPingTimestampRemoteMs;\n          this.logger.info(\"local clock skew estimate=\" + estimatedClockSkewMs_1 + \"ms from ping-pong time=\" + pingPongLocalIntervalMs_1 + \"ms\");\n          this.forEachObserver(function (observer) {\n            Maybe_1.default.of(observer.didReceivePong).map(function (f) {\n              return f.bind(observer)(pingId_1, estimatedClockSkewMs_1, pingPongLocalIntervalMs_1);\n            });\n          });\n        } else {\n          this.pong(event.message.pingPong.pingId);\n        }\n\n        break;\n    }\n  };\n\n  return DefaultPingPong;\n}();\n\nexports.default = DefaultPingPong;","map":{"version":3,"sources":["../../src/pingpong/DefaultPingPong.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Maybe_1 = require(\"../maybe/Maybe\");\nvar AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nvar IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nvar SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n/**\n * [[DefaultPingPong]] implements the PingPong and SignalingClientObserver interface.\n */\nvar DefaultPingPong = /** @class */ (function () {\n    function DefaultPingPong(signalingClient, intervalMs, logger) {\n        this.signalingClient = signalingClient;\n        this.intervalMs = intervalMs;\n        this.logger = logger;\n        this.observerQueue = new Set();\n        this.consecutivePongsUnaccountedFor = 0;\n        this.intervalScheduler = new IntervalScheduler_1.default(this.intervalMs);\n        this.pingId = 0;\n    }\n    DefaultPingPong.prototype.addObserver = function (observer) {\n        this.logger.info('adding a ping-pong observer');\n        this.observerQueue.add(observer);\n    };\n    DefaultPingPong.prototype.removeObserver = function (observer) {\n        this.logger.info('removing a ping-pong observer');\n        this.observerQueue.delete(observer);\n    };\n    DefaultPingPong.prototype.forEachObserver = function (observerFunc) {\n        var e_1, _a;\n        var _this = this;\n        var _loop_1 = function (observer) {\n            new AsyncScheduler_1.default().start(function () {\n                if (_this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        };\n        try {\n            for (var _b = __values(this.observerQueue), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var observer = _c.value;\n                _loop_1(observer);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    DefaultPingPong.prototype.start = function () {\n        this.stop();\n        this.signalingClient.registerObserver(this);\n        if (this.signalingClient.ready()) {\n            this.startPingInterval();\n        }\n    };\n    DefaultPingPong.prototype.stop = function () {\n        this.stopPingInterval();\n        this.signalingClient.removeObserver(this);\n    };\n    DefaultPingPong.prototype.startPingInterval = function () {\n        var _this = this;\n        this.intervalScheduler.start(function () {\n            _this.ping();\n        });\n        this.ping();\n    };\n    DefaultPingPong.prototype.stopPingInterval = function () {\n        this.intervalScheduler.stop();\n        this.pingId = 0;\n        this.consecutivePongsUnaccountedFor = 0;\n    };\n    DefaultPingPong.prototype.ping = function () {\n        var _this = this;\n        if (this.consecutivePongsUnaccountedFor > 0) {\n            this.logger.warn(\"missed pong \" + this.consecutivePongsUnaccountedFor + \" time(s)\");\n            this.forEachObserver(function (observer) {\n                Maybe_1.default.of(observer.didMissPongs).map(function (f) {\n                    return f.bind(observer)(_this.consecutivePongsUnaccountedFor);\n                });\n            });\n        }\n        this.consecutivePongsUnaccountedFor += 1;\n        this.pingId = (this.pingId + 1) & 0xffffffff;\n        var ping = SignalingProtocol_js_1.SdkPingPongFrame.create();\n        ping.pingId = this.pingId;\n        ping.type = SignalingProtocol_js_1.SdkPingPongType.PING;\n        this.pingTimestampLocalMs = this.signalingClient.pingPong(ping);\n        this.logger.debug(function () {\n            return \"sent ping \" + _this.pingId;\n        });\n    };\n    DefaultPingPong.prototype.pong = function (pingId) {\n        var pong = SignalingProtocol_js_1.SdkPingPongFrame.create();\n        pong.pingId = pingId;\n        pong.type = SignalingProtocol_js_1.SdkPingPongType.PONG;\n        this.signalingClient.pingPong(pong);\n    };\n    DefaultPingPong.prototype.handleSignalingClientEvent = function (event) {\n        switch (event.type) {\n            case SignalingClientEventType_1.default.WebSocketOpen:\n                this.startPingInterval();\n                break;\n            case SignalingClientEventType_1.default.WebSocketFailed:\n            case SignalingClientEventType_1.default.WebSocketError:\n                this.logger.warn(\"stopped pinging (\" + SignalingClientEventType_1.default[event.type] + \")\");\n                this.stopPingInterval();\n                break;\n            case SignalingClientEventType_1.default.WebSocketClosing:\n            case SignalingClientEventType_1.default.WebSocketClosed:\n                this.logger.info(\"stopped pinging (\" + SignalingClientEventType_1.default[event.type] + \")\");\n                this.stopPingInterval();\n                break;\n            case SignalingClientEventType_1.default.ReceivedSignalFrame:\n                if (event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG) {\n                    break;\n                }\n                if (event.message.pingPong.type === SignalingProtocol_js_1.SdkPingPongType.PONG) {\n                    var pingId_1 = event.message.pingPong.pingId;\n                    if (pingId_1 !== this.pingId) {\n                        this.logger.warn(\"unexpected ping id \" + pingId_1 + \" (expected \" + this.pingId + \")\");\n                        break;\n                    }\n                    this.consecutivePongsUnaccountedFor = 0;\n                    var pongTimestampRemoteMs_1;\n                    if (typeof event.message.timestampMs === 'number') {\n                        pongTimestampRemoteMs_1 = event.message.timestampMs;\n                    }\n                    else {\n                        break;\n                    }\n                    this.logger.debug(function () {\n                        return \"received pong \" + pingId_1 + \" with timestamp \" + pongTimestampRemoteMs_1;\n                    });\n                    var pongTimestampLocalMs = event.timestampMs;\n                    var pingPongLocalIntervalMs_1 = pongTimestampLocalMs - this.pingTimestampLocalMs;\n                    var estimatedPingTimestampRemoteMs = Math.round(pongTimestampRemoteMs_1 - pingPongLocalIntervalMs_1 / 2);\n                    var estimatedClockSkewMs_1 = this.pingTimestampLocalMs - estimatedPingTimestampRemoteMs;\n                    this.logger.info(\"local clock skew estimate=\" + estimatedClockSkewMs_1 + \"ms from ping-pong time=\" + pingPongLocalIntervalMs_1 + \"ms\");\n                    this.forEachObserver(function (observer) {\n                        Maybe_1.default.of(observer.didReceivePong).map(function (f) {\n                            return f.bind(observer)(pingId_1, estimatedClockSkewMs_1, pingPongLocalIntervalMs_1);\n                        });\n                    });\n                }\n                else {\n                    this.pong(event.message.pingPong.pingId);\n                }\n                break;\n        }\n    };\n    return DefaultPingPong;\n}());\nexports.default = DefaultPingPong;\n//# sourceMappingURL=DefaultPingPong.js.map"]},"metadata":{},"sourceType":"script"}