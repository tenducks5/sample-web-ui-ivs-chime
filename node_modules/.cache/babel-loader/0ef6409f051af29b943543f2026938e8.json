{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nvar DefaultModality_1 = require(\"../modality/DefaultModality\");\n\nvar AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\n\nvar VideoTileState_1 = require(\"./VideoTileState\");\n\nvar DefaultVideoTile =\n/** @class */\nfunction () {\n  function DefaultVideoTile(tileId, localTile, tileController, devicePixelRatioMonitor) {\n    this.tileController = tileController;\n    this.devicePixelRatioMonitor = devicePixelRatioMonitor;\n    this.tileState = new VideoTileState_1.default();\n    this.tileState.tileId = tileId;\n    this.tileState.localTile = localTile;\n    this.devicePixelRatioMonitor.registerObserver(this);\n  }\n\n  DefaultVideoTile.connectVideoStreamToVideoElement = function (videoStream, videoElement, localTile) {\n    var transform = localTile && videoStream.getVideoTracks()[0].getSettings().facingMode !== 'environment' ? 'rotateY(180deg)' : '';\n    DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', localTile);\n    DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', localTile);\n\n    if (videoElement.style.transform !== transform) {\n      videoElement.style.transform = transform;\n    }\n\n    if (videoElement.hasAttribute('controls')) {\n      videoElement.removeAttribute('controls');\n    }\n\n    if (!videoElement.hasAttribute('autoplay')) {\n      videoElement.setAttribute('autoplay', 'true');\n    } // playsinline is needed for video to play in Iphone in non-fullscreen mode.\n    // See https://developer.apple.com/documentation/webkit/safari_tools_and_features/delivering_video_content_for_safari#3030250\n\n\n    if (!videoElement.hasAttribute('playsinline')) {\n      videoElement.setAttribute('playsinline', 'true');\n    }\n\n    if (!videoElement.hasAttribute('muted')) {\n      videoElement.setAttribute('muted', 'true');\n    }\n\n    if (videoElement.srcObject !== videoStream) {\n      videoElement.srcObject = videoStream;\n    }\n  };\n\n  DefaultVideoTile.disconnectVideoStreamFromVideoElement = function (videoElement, dueToPause) {\n    var e_1, _a;\n\n    if (!videoElement) {\n      return;\n    }\n\n    if (dueToPause) {\n      videoElement.srcObject = null;\n      videoElement.style.transform = '';\n    } else {\n      if (!videoElement.srcObject) {\n        return;\n      }\n\n      videoElement.pause();\n      videoElement.style.transform = '';\n      DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', false);\n      DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', false); // We must remove all the tracks from the MediaStream before\n      // clearing the `srcObject` to prevent Safari from crashing.\n\n      var mediaStream = videoElement.srcObject;\n      var tracks = mediaStream.getTracks();\n\n      try {\n        for (var tracks_1 = __values(tracks), tracks_1_1 = tracks_1.next(); !tracks_1_1.done; tracks_1_1 = tracks_1.next()) {\n          var track = tracks_1_1.value;\n          track.stop();\n          mediaStream.removeTrack(track);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (tracks_1_1 && !tracks_1_1.done && (_a = tracks_1.return)) _a.call(tracks_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      } // Need to yield the message loop before clearing `srcObject` to\n      // prevent Safari from crashing.\n\n\n      if (new DefaultBrowserBehavior_1.default().requiresVideoElementWorkaround()) {\n        new AsyncScheduler_1.default().start(function () {\n          videoElement.srcObject = null;\n        });\n      } else {\n        videoElement.srcObject = null;\n      }\n    }\n  };\n\n  DefaultVideoTile.prototype.destroy = function () {\n    this.devicePixelRatioMonitor.removeObserver(this);\n\n    if (this.tileState.boundVideoElement && this.tileState.boundVideoElement.srcObject === this.tileState.boundVideoStream) {\n      DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, false);\n    }\n\n    this.tileState = new VideoTileState_1.default();\n  };\n\n  DefaultVideoTile.prototype.devicePixelRatioChanged = function (newDevicePixelRatio) {\n    this.tileState.devicePixelRatio = newDevicePixelRatio;\n    this.sendTileStateUpdate();\n  };\n\n  DefaultVideoTile.prototype.id = function () {\n    return this.tileState.tileId;\n  };\n\n  DefaultVideoTile.prototype.state = function () {\n    return this.tileState.clone();\n  };\n\n  DefaultVideoTile.prototype.stateRef = function () {\n    return this.tileState;\n  };\n\n  DefaultVideoTile.prototype.bindVideoStream = function (attendeeId, localTile, mediaStream, contentWidth, contentHeight, streamId, externalUserId) {\n    var tileUpdated = false;\n\n    if (this.tileState.boundAttendeeId !== attendeeId) {\n      this.tileState.boundAttendeeId = attendeeId;\n\n      if (new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT)) {\n        this.tileState.isContent = true;\n      }\n\n      tileUpdated = true;\n    }\n\n    if (this.tileState.boundExternalUserId !== externalUserId) {\n      this.tileState.boundExternalUserId = externalUserId;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.localTile !== localTile) {\n      this.tileState.localTile = localTile;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.boundVideoStream !== mediaStream) {\n      this.tileState.boundVideoStream = mediaStream;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.videoStreamContentWidth !== contentWidth) {\n      this.tileState.videoStreamContentWidth = contentWidth;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.videoStreamContentHeight !== contentHeight) {\n      this.tileState.videoStreamContentHeight = contentHeight;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.streamId !== streamId) {\n      this.tileState.streamId = streamId;\n      tileUpdated = true;\n    }\n\n    if (tileUpdated) {\n      this.sendTileStateUpdate();\n    }\n  };\n\n  DefaultVideoTile.prototype.bindVideoElement = function (videoElement) {\n    var tileUpdated = false;\n\n    if (this.tileState.boundVideoElement !== videoElement) {\n      this.tileState.boundVideoElement = videoElement;\n      tileUpdated = true;\n    }\n\n    if (this.tileState.boundVideoElement !== null) {\n      if (this.tileState.videoElementCSSWidthPixels !== videoElement.clientWidth) {\n        this.tileState.videoElementCSSWidthPixels = videoElement.clientWidth;\n        tileUpdated = true;\n      }\n\n      if (this.tileState.videoElementCSSHeightPixels !== videoElement.clientHeight) {\n        this.tileState.videoElementCSSHeightPixels = videoElement.clientHeight;\n        tileUpdated = true;\n      }\n    } else {\n      this.tileState.videoElementCSSWidthPixels = null;\n      this.tileState.videoElementCSSHeightPixels = null;\n    }\n\n    if (tileUpdated) {\n      this.sendTileStateUpdate();\n    }\n  };\n\n  DefaultVideoTile.prototype.pause = function () {\n    if (!this.tileState.paused) {\n      this.tileState.paused = true;\n      this.sendTileStateUpdate();\n    }\n  };\n\n  DefaultVideoTile.prototype.unpause = function () {\n    if (this.tileState.paused) {\n      this.tileState.paused = false;\n      this.sendTileStateUpdate();\n    }\n  };\n\n  DefaultVideoTile.prototype.markPoorConnection = function () {\n    if (this.tileState.poorConnection) {\n      return false;\n    }\n\n    this.tileState.poorConnection = true;\n    this.sendTileStateUpdate();\n    return true;\n  };\n\n  DefaultVideoTile.prototype.unmarkPoorConnection = function () {\n    if (!this.tileState.poorConnection) {\n      return false;\n    }\n\n    this.tileState.poorConnection = false;\n    this.sendTileStateUpdate();\n    return true;\n  };\n\n  DefaultVideoTile.prototype.capture = function () {\n    if (!this.tileState.active) {\n      return null;\n    }\n\n    var canvas = document.createElement('canvas');\n    var video = this.tileState.boundVideoElement;\n    canvas.width = video.videoWidth || video.width;\n    canvas.height = video.videoHeight || video.height;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    return ctx.getImageData(0, 0, canvas.width, canvas.height);\n  };\n\n  DefaultVideoTile.prototype.sendTileStateUpdate = function () {\n    this.updateActiveState();\n    this.updateVideoStreamOnVideoElement();\n    this.updateVideoElementPhysicalPixels();\n    this.tileController.sendTileStateUpdate(this.state());\n  };\n\n  DefaultVideoTile.prototype.updateActiveState = function () {\n    this.tileState.active = !!(!this.tileState.paused && !this.tileState.poorConnection && this.tileState.boundAttendeeId && this.tileState.boundVideoElement && this.tileState.boundVideoStream);\n  };\n\n  DefaultVideoTile.prototype.updateVideoElementPhysicalPixels = function () {\n    if (typeof this.tileState.videoElementCSSWidthPixels === 'number' && typeof this.tileState.videoElementCSSHeightPixels === 'number') {\n      this.tileState.videoElementPhysicalWidthPixels = this.tileState.devicePixelRatio * this.tileState.videoElementCSSWidthPixels;\n      this.tileState.videoElementPhysicalHeightPixels = this.tileState.devicePixelRatio * this.tileState.videoElementCSSHeightPixels;\n    } else {\n      this.tileState.videoElementPhysicalWidthPixels = null;\n      this.tileState.videoElementPhysicalHeightPixels = null;\n    }\n  };\n\n  DefaultVideoTile.prototype.updateVideoStreamOnVideoElement = function () {\n    if (this.tileState.active) {\n      DefaultVideoTile.connectVideoStreamToVideoElement(this.tileState.boundVideoStream, this.tileState.boundVideoElement, this.tileState.localTile);\n    } else {\n      DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, this.tileState.paused);\n    }\n  };\n\n  DefaultVideoTile.setVideoElementFlag = function (videoElement, flag, value) {\n    if (flag in videoElement) {\n      // @ts-ignore\n      videoElement[flag] = value;\n    }\n  };\n\n  return DefaultVideoTile;\n}();\n\nexports.default = DefaultVideoTile;","map":{"version":3,"sources":["../../src/videotile/DefaultVideoTile.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nvar DefaultModality_1 = require(\"../modality/DefaultModality\");\nvar AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nvar VideoTileState_1 = require(\"./VideoTileState\");\nvar DefaultVideoTile = /** @class */ (function () {\n    function DefaultVideoTile(tileId, localTile, tileController, devicePixelRatioMonitor) {\n        this.tileController = tileController;\n        this.devicePixelRatioMonitor = devicePixelRatioMonitor;\n        this.tileState = new VideoTileState_1.default();\n        this.tileState.tileId = tileId;\n        this.tileState.localTile = localTile;\n        this.devicePixelRatioMonitor.registerObserver(this);\n    }\n    DefaultVideoTile.connectVideoStreamToVideoElement = function (videoStream, videoElement, localTile) {\n        var transform = localTile && videoStream.getVideoTracks()[0].getSettings().facingMode !== 'environment'\n            ? 'rotateY(180deg)'\n            : '';\n        DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', localTile);\n        DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', localTile);\n        if (videoElement.style.transform !== transform) {\n            videoElement.style.transform = transform;\n        }\n        if (videoElement.hasAttribute('controls')) {\n            videoElement.removeAttribute('controls');\n        }\n        if (!videoElement.hasAttribute('autoplay')) {\n            videoElement.setAttribute('autoplay', 'true');\n        }\n        // playsinline is needed for video to play in Iphone in non-fullscreen mode.\n        // See https://developer.apple.com/documentation/webkit/safari_tools_and_features/delivering_video_content_for_safari#3030250\n        if (!videoElement.hasAttribute('playsinline')) {\n            videoElement.setAttribute('playsinline', 'true');\n        }\n        if (!videoElement.hasAttribute('muted')) {\n            videoElement.setAttribute('muted', 'true');\n        }\n        if (videoElement.srcObject !== videoStream) {\n            videoElement.srcObject = videoStream;\n        }\n    };\n    DefaultVideoTile.disconnectVideoStreamFromVideoElement = function (videoElement, dueToPause) {\n        var e_1, _a;\n        if (!videoElement) {\n            return;\n        }\n        if (dueToPause) {\n            videoElement.srcObject = null;\n            videoElement.style.transform = '';\n        }\n        else {\n            if (!videoElement.srcObject) {\n                return;\n            }\n            videoElement.pause();\n            videoElement.style.transform = '';\n            DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', false);\n            DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', false);\n            // We must remove all the tracks from the MediaStream before\n            // clearing the `srcObject` to prevent Safari from crashing.\n            var mediaStream = videoElement.srcObject;\n            var tracks = mediaStream.getTracks();\n            try {\n                for (var tracks_1 = __values(tracks), tracks_1_1 = tracks_1.next(); !tracks_1_1.done; tracks_1_1 = tracks_1.next()) {\n                    var track = tracks_1_1.value;\n                    track.stop();\n                    mediaStream.removeTrack(track);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (tracks_1_1 && !tracks_1_1.done && (_a = tracks_1.return)) _a.call(tracks_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            // Need to yield the message loop before clearing `srcObject` to\n            // prevent Safari from crashing.\n            if (new DefaultBrowserBehavior_1.default().requiresVideoElementWorkaround()) {\n                new AsyncScheduler_1.default().start(function () {\n                    videoElement.srcObject = null;\n                });\n            }\n            else {\n                videoElement.srcObject = null;\n            }\n        }\n    };\n    DefaultVideoTile.prototype.destroy = function () {\n        this.devicePixelRatioMonitor.removeObserver(this);\n        if (this.tileState.boundVideoElement &&\n            this.tileState.boundVideoElement.srcObject === this.tileState.boundVideoStream) {\n            DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, false);\n        }\n        this.tileState = new VideoTileState_1.default();\n    };\n    DefaultVideoTile.prototype.devicePixelRatioChanged = function (newDevicePixelRatio) {\n        this.tileState.devicePixelRatio = newDevicePixelRatio;\n        this.sendTileStateUpdate();\n    };\n    DefaultVideoTile.prototype.id = function () {\n        return this.tileState.tileId;\n    };\n    DefaultVideoTile.prototype.state = function () {\n        return this.tileState.clone();\n    };\n    DefaultVideoTile.prototype.stateRef = function () {\n        return this.tileState;\n    };\n    DefaultVideoTile.prototype.bindVideoStream = function (attendeeId, localTile, mediaStream, contentWidth, contentHeight, streamId, externalUserId) {\n        var tileUpdated = false;\n        if (this.tileState.boundAttendeeId !== attendeeId) {\n            this.tileState.boundAttendeeId = attendeeId;\n            if (new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT)) {\n                this.tileState.isContent = true;\n            }\n            tileUpdated = true;\n        }\n        if (this.tileState.boundExternalUserId !== externalUserId) {\n            this.tileState.boundExternalUserId = externalUserId;\n            tileUpdated = true;\n        }\n        if (this.tileState.localTile !== localTile) {\n            this.tileState.localTile = localTile;\n            tileUpdated = true;\n        }\n        if (this.tileState.boundVideoStream !== mediaStream) {\n            this.tileState.boundVideoStream = mediaStream;\n            tileUpdated = true;\n        }\n        if (this.tileState.videoStreamContentWidth !== contentWidth) {\n            this.tileState.videoStreamContentWidth = contentWidth;\n            tileUpdated = true;\n        }\n        if (this.tileState.videoStreamContentHeight !== contentHeight) {\n            this.tileState.videoStreamContentHeight = contentHeight;\n            tileUpdated = true;\n        }\n        if (this.tileState.streamId !== streamId) {\n            this.tileState.streamId = streamId;\n            tileUpdated = true;\n        }\n        if (tileUpdated) {\n            this.sendTileStateUpdate();\n        }\n    };\n    DefaultVideoTile.prototype.bindVideoElement = function (videoElement) {\n        var tileUpdated = false;\n        if (this.tileState.boundVideoElement !== videoElement) {\n            this.tileState.boundVideoElement = videoElement;\n            tileUpdated = true;\n        }\n        if (this.tileState.boundVideoElement !== null) {\n            if (this.tileState.videoElementCSSWidthPixels !== videoElement.clientWidth) {\n                this.tileState.videoElementCSSWidthPixels = videoElement.clientWidth;\n                tileUpdated = true;\n            }\n            if (this.tileState.videoElementCSSHeightPixels !== videoElement.clientHeight) {\n                this.tileState.videoElementCSSHeightPixels = videoElement.clientHeight;\n                tileUpdated = true;\n            }\n        }\n        else {\n            this.tileState.videoElementCSSWidthPixels = null;\n            this.tileState.videoElementCSSHeightPixels = null;\n        }\n        if (tileUpdated) {\n            this.sendTileStateUpdate();\n        }\n    };\n    DefaultVideoTile.prototype.pause = function () {\n        if (!this.tileState.paused) {\n            this.tileState.paused = true;\n            this.sendTileStateUpdate();\n        }\n    };\n    DefaultVideoTile.prototype.unpause = function () {\n        if (this.tileState.paused) {\n            this.tileState.paused = false;\n            this.sendTileStateUpdate();\n        }\n    };\n    DefaultVideoTile.prototype.markPoorConnection = function () {\n        if (this.tileState.poorConnection) {\n            return false;\n        }\n        this.tileState.poorConnection = true;\n        this.sendTileStateUpdate();\n        return true;\n    };\n    DefaultVideoTile.prototype.unmarkPoorConnection = function () {\n        if (!this.tileState.poorConnection) {\n            return false;\n        }\n        this.tileState.poorConnection = false;\n        this.sendTileStateUpdate();\n        return true;\n    };\n    DefaultVideoTile.prototype.capture = function () {\n        if (!this.tileState.active) {\n            return null;\n        }\n        var canvas = document.createElement('canvas');\n        var video = this.tileState.boundVideoElement;\n        canvas.width = video.videoWidth || video.width;\n        canvas.height = video.videoHeight || video.height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        return ctx.getImageData(0, 0, canvas.width, canvas.height);\n    };\n    DefaultVideoTile.prototype.sendTileStateUpdate = function () {\n        this.updateActiveState();\n        this.updateVideoStreamOnVideoElement();\n        this.updateVideoElementPhysicalPixels();\n        this.tileController.sendTileStateUpdate(this.state());\n    };\n    DefaultVideoTile.prototype.updateActiveState = function () {\n        this.tileState.active = !!(!this.tileState.paused &&\n            !this.tileState.poorConnection &&\n            this.tileState.boundAttendeeId &&\n            this.tileState.boundVideoElement &&\n            this.tileState.boundVideoStream);\n    };\n    DefaultVideoTile.prototype.updateVideoElementPhysicalPixels = function () {\n        if (typeof this.tileState.videoElementCSSWidthPixels === 'number' &&\n            typeof this.tileState.videoElementCSSHeightPixels === 'number') {\n            this.tileState.videoElementPhysicalWidthPixels =\n                this.tileState.devicePixelRatio * this.tileState.videoElementCSSWidthPixels;\n            this.tileState.videoElementPhysicalHeightPixels =\n                this.tileState.devicePixelRatio * this.tileState.videoElementCSSHeightPixels;\n        }\n        else {\n            this.tileState.videoElementPhysicalWidthPixels = null;\n            this.tileState.videoElementPhysicalHeightPixels = null;\n        }\n    };\n    DefaultVideoTile.prototype.updateVideoStreamOnVideoElement = function () {\n        if (this.tileState.active) {\n            DefaultVideoTile.connectVideoStreamToVideoElement(this.tileState.boundVideoStream, this.tileState.boundVideoElement, this.tileState.localTile);\n        }\n        else {\n            DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, this.tileState.paused);\n        }\n    };\n    DefaultVideoTile.setVideoElementFlag = function (videoElement, flag, value) {\n        if (flag in videoElement) {\n            // @ts-ignore\n            videoElement[flag] = value;\n        }\n    };\n    return DefaultVideoTile;\n}());\nexports.default = DefaultVideoTile;\n//# sourceMappingURL=DefaultVideoTile.js.map"]},"metadata":{},"sourceType":"script"}