{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n\nvar Versioning_1 = require(\"../versioning/Versioning\");\n\nvar WebSocketReadyState_1 = require(\"../websocketadapter/WebSocketReadyState\");\n\nvar SignalingClientEvent_1 = require(\"./SignalingClientEvent\");\n\nvar SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/**\n * [[DefaultSignalingClient]] implements the SignalingClient interface.\n */\n\n\nvar DefaultSignalingClient =\n/** @class */\nfunction () {\n  function DefaultSignalingClient(webSocket, logger) {\n    this.webSocket = webSocket;\n    this.logger = logger;\n    this.unloadHandler = null;\n    this.observerQueue = new Set();\n    this.connectionRequestQueue = [];\n    this.resetConnection();\n    this.logger.debug(function () {\n      return 'signaling client init';\n    });\n    this.audioSessionId = this.generateNewAudioSessionId();\n  }\n\n  DefaultSignalingClient.prototype.registerObserver = function (observer) {\n    this.logger.debug(function () {\n      return 'registering signaling client observer';\n    });\n    this.observerQueue.add(observer);\n  };\n\n  DefaultSignalingClient.prototype.removeObserver = function (observer) {\n    this.logger.debug(function () {\n      return 'removing signaling client observer';\n    });\n    this.observerQueue.delete(observer);\n  };\n\n  DefaultSignalingClient.prototype.openConnection = function (request) {\n    this.logger.info('adding connection request to queue: ' + request.url());\n    this.connectionRequestQueue.push(request);\n    this.closeConnection();\n  };\n\n  DefaultSignalingClient.prototype.pingPong = function (pingPongFrame) {\n    this.logger.debug(function () {\n      return 'sending ping';\n    });\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG;\n    message.pingPong = pingPongFrame;\n    this.sendMessage(message);\n    return message.timestampMs;\n  };\n\n  DefaultSignalingClient.prototype.join = function (settings) {\n    this.logger.info('sending join');\n    var joinFrame = SignalingProtocol_js_1.SdkJoinFrame.create();\n    joinFrame.protocolVersion = 2;\n    joinFrame.maxNumOfVideos = settings.maxVideos;\n    joinFrame.flags = SignalingProtocol_js_1.SdkJoinFlags.HAS_STREAM_UPDATE; // Only Chrome currently supports the new send side bandwidth estimation\n\n    var browserBehavior = new DefaultBrowserBehavior_1.default();\n\n    if (browserBehavior.hasChromiumWebRTC()) {\n      joinFrame.flags |= SignalingProtocol_js_1.SdkJoinFlags.USE_SEND_SIDE_BWE;\n    }\n\n    joinFrame.flags |= settings.sendBitrates ? SignalingProtocol_js_1.SdkJoinFlags.SEND_BITRATES : 0;\n    joinFrame.clientDetails = SignalingProtocol_js_1.SdkClientDetails.create({\n      platformName: browserBehavior.name(),\n      platformVersion: browserBehavior.version(),\n      clientSource: Versioning_1.default.sdkName,\n      chimeSdkVersion: Versioning_1.default.sdkVersion\n    });\n    joinFrame.audioSessionId = this.audioSessionId;\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.JOIN;\n    message.join = joinFrame;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.subscribe = function (settings) {\n    var subscribeFrame = SignalingProtocol_js_1.SdkSubscribeFrame.create();\n    subscribeFrame.sendStreams = [];\n    subscribeFrame.sdpOffer = settings.sdpOffer;\n    subscribeFrame.audioCheckin = settings.audioCheckin;\n    subscribeFrame.audioHost = settings.audioHost;\n    subscribeFrame.audioMuted = settings.audioMuted;\n\n    if (settings.connectionTypeHasVideo) {\n      subscribeFrame.receiveStreamIds = settings.receiveStreamIds;\n    }\n\n    subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.RX;\n\n    if (!settings.audioCheckin) {\n      var audioStream = SignalingProtocol_js_1.SdkStreamDescriptor.create();\n      audioStream.mediaType = SignalingProtocol_js_1.SdkStreamMediaType.AUDIO;\n      audioStream.trackLabel = 'AmazonChimeExpressAudio';\n      audioStream.attendeeId = settings.attendeeId;\n      audioStream.streamId = 1;\n      audioStream.groupId = 1;\n      audioStream.framerate = 15;\n      audioStream.maxBitrateKbps = 600;\n      audioStream.avgBitrateBps = 400000;\n      subscribeFrame.sendStreams.push(audioStream);\n    }\n\n    if (settings.localVideoEnabled) {\n      subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n\n      for (var i = 0; i < settings.videoStreamDescriptions.length; i++) {\n        // Non-simulcast use DefaultVideoStreamIndex.localStreamDescriptions\n        // which is the exact old behavior\n        var streamDescription = settings.videoStreamDescriptions[i].clone();\n        streamDescription.attendeeId = settings.attendeeId;\n        subscribeFrame.sendStreams.push(streamDescription.toStreamDescriptor());\n      }\n    }\n\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.SUBSCRIBE;\n    message.sub = subscribeFrame;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.leave = function () {\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.LEAVE;\n    message.leave = SignalingProtocol_js_1.SdkLeaveFrame.create();\n    this.sendMessage(message);\n    this.logger.debug(function () {\n      return 'sent leave';\n    });\n  };\n\n  DefaultSignalingClient.prototype.sendClientMetrics = function (clientMetricFrame) {\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.CLIENT_METRIC;\n    message.clientMetric = clientMetricFrame;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.sendDataMessage = function (messageFrame) {\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.DATA_MESSAGE;\n    message.dataMessage = messageFrame;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.closeConnection = function () {\n    if (this.webSocket.readyState() !== WebSocketReadyState_1.default.None && this.webSocket.readyState() !== WebSocketReadyState_1.default.Closed) {\n      this.isClosing = true;\n      this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketClosing, null));\n      this.webSocket.close();\n      this.deactivatePageUnloadHandler();\n    } else {\n      this.logger.info('no existing connection needs closing');\n      this.serviceConnectionRequestQueue();\n    }\n  };\n\n  DefaultSignalingClient.prototype.ready = function () {\n    return this.webSocket.readyState() === WebSocketReadyState_1.default.Open && !this.isClosing && this.wasOpened;\n  };\n\n  DefaultSignalingClient.prototype.mute = function (muted) {\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_CONTROL;\n    var audioControl = SignalingProtocol_js_1.SdkAudioControlFrame.create();\n    audioControl.muted = muted;\n    message.audioControl = audioControl;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.pause = function (streamIds) {\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PAUSE;\n    message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n    message.pause.streamIds = streamIds;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.resume = function (streamIds) {\n    var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n    message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.RESUME;\n    message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n    message.pause.streamIds = streamIds;\n    this.sendMessage(message);\n  };\n\n  DefaultSignalingClient.prototype.resetConnection = function () {\n    this.webSocket.destroy();\n    this.wasOpened = false;\n  };\n\n  DefaultSignalingClient.prototype.sendMessage = function (message) {\n    message.timestampMs = Date.now();\n    this.logger.debug(function () {\n      return \"sending: \" + JSON.stringify(message);\n    });\n    var buffer = this.prependWithFrameTypeRTC(SignalingProtocol_js_1.SdkSignalFrame.encode(message).finish());\n\n    if (this.ready()) {\n      if (!this.webSocket.send(buffer)) {\n        this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSendMessageFailure, null));\n        return;\n      }\n\n      this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSentMessage, null));\n    } else {\n      this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSkippedMessage, null));\n    }\n  };\n\n  DefaultSignalingClient.prototype.receiveMessage = function (inBuffer) {\n    var message;\n\n    try {\n      message = SignalingProtocol_js_1.SdkSignalFrame.decode(inBuffer);\n    } catch (e) {\n      this.logger.info(\"failed to decode: \" + inBuffer);\n      this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ProtocolDecodeFailure, null));\n      return;\n    }\n\n    this.logger.debug(function () {\n      return \"received: \" + JSON.stringify(message);\n    });\n\n    if (this.webSocket.readyState() === WebSocketReadyState_1.default.Open) {\n      this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ReceivedSignalFrame, message));\n    } else {\n      this.logger.info(\"skipping notification of message since WebSocket is not open: \" + JSON.stringify(message));\n    }\n  };\n\n  DefaultSignalingClient.prototype.stripFrameTypeRTC = function (inBuffer) {\n    var frameType = inBuffer[0]; // TODO: change server frame type to send 0x05\n\n    if (frameType !== DefaultSignalingClient.FRAME_TYPE_RTC && frameType !== 0x02) {\n      this.logger.warn(\"expected FrameTypeRTC for message but got \" + frameType);\n    }\n\n    return inBuffer.slice(1);\n  };\n\n  DefaultSignalingClient.prototype.prependWithFrameTypeRTC = function (inBuffer) {\n    var outBuffer = new Uint8Array(inBuffer.length + 1);\n    outBuffer[0] = DefaultSignalingClient.FRAME_TYPE_RTC;\n    outBuffer.set(inBuffer, 1);\n    return outBuffer;\n  };\n\n  DefaultSignalingClient.prototype.serviceConnectionRequestQueue = function () {\n    if (this.connectionRequestQueue.length === 0) {\n      this.logger.info('no connection requests to service');\n      return;\n    }\n\n    var request = this.connectionRequestQueue.shift();\n    this.logger.info(\"opening connection to \" + request.url());\n    this.isClosing = false;\n    this.webSocket.create(request.url(), request.protocols());\n    this.setUpEventListeners();\n    this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketConnecting, null));\n  };\n\n  DefaultSignalingClient.prototype.sendEvent = function (event) {\n    var e_1, _a;\n\n    var _this = this;\n\n    switch (event.type) {\n      case SignalingClientEventType_1.default.WebSocketMessage:\n      case SignalingClientEventType_1.default.ReceivedSignalFrame:\n      case SignalingClientEventType_1.default.WebSocketSentMessage:\n        this.logger.debug(function () {\n          return \"notifying event: \" + SignalingClientEventType_1.default[event.type];\n        });\n        break;\n\n      case SignalingClientEventType_1.default.WebSocketSkippedMessage:\n        this.logger.debug(function () {\n          return \"notifying event: \" + SignalingClientEventType_1.default[event.type] + \", websocket state=\" + WebSocketReadyState_1.default[_this.webSocket.readyState()];\n        });\n        break;\n\n      default:\n        this.logger.info(\"notifying event: \" + SignalingClientEventType_1.default[event.type]);\n        break;\n    }\n\n    try {\n      for (var _b = __values(this.observerQueue), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var observer = _c.value;\n        observer.handleSignalingClientEvent(event);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  DefaultSignalingClient.prototype.setUpEventListeners = function () {\n    var _this = this;\n\n    this.webSocket.addEventListener('open', function () {\n      _this.activatePageUnloadHandler();\n\n      _this.wasOpened = true;\n\n      _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketOpen, null));\n    });\n    this.webSocket.addEventListener('message', function (event) {\n      _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketMessage, null));\n\n      _this.receiveMessage(_this.stripFrameTypeRTC(new Uint8Array(event.data)));\n    });\n    this.webSocket.addEventListener('close', function (event) {\n      _this.deactivatePageUnloadHandler();\n\n      _this.resetConnection();\n\n      _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketClosed, null, event.code, event.reason));\n\n      _this.serviceConnectionRequestQueue();\n    });\n    this.webSocket.addEventListener('error', function () {\n      if (_this.isClosing && !_this.wasOpened) {\n        _this.logger.info('ignoring error closing signaling while connecting');\n\n        return;\n      }\n\n      if (_this.wasOpened) {\n        _this.logger.error('received error while connected');\n\n        _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketError, null));\n      } else {\n        _this.logger.error('failed to connect');\n\n        _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketFailed, null));\n      }\n    });\n  };\n\n  DefaultSignalingClient.prototype.activatePageUnloadHandler = function () {\n    var _this = this;\n\n    this.unloadHandler = function () {\n      _this.leave();\n    }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    var GlobalAny = global;\n    GlobalAny['window'] && GlobalAny['window']['addEventListener'] && window.addEventListener('unload', this.unloadHandler);\n  };\n\n  DefaultSignalingClient.prototype.deactivatePageUnloadHandler = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var GlobalAny = global;\n    GlobalAny['window'] && GlobalAny['window']['addEventListener'] && window.removeEventListener('unload', this.unloadHandler);\n    this.unloadHandler = null;\n  };\n\n  DefaultSignalingClient.prototype.generateNewAudioSessionId = function () {\n    var num = new Uint32Array(1);\n    var randomNum = window.crypto.getRandomValues(num);\n    return randomNum[0];\n  };\n\n  DefaultSignalingClient.FRAME_TYPE_RTC = 0x5;\n  return DefaultSignalingClient;\n}();\n\nexports.default = DefaultSignalingClient;","map":{"version":3,"sources":["../../src/signalingclient/DefaultSignalingClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nvar Versioning_1 = require(\"../versioning/Versioning\");\nvar WebSocketReadyState_1 = require(\"../websocketadapter/WebSocketReadyState\");\nvar SignalingClientEvent_1 = require(\"./SignalingClientEvent\");\nvar SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/**\n * [[DefaultSignalingClient]] implements the SignalingClient interface.\n */\nvar DefaultSignalingClient = /** @class */ (function () {\n    function DefaultSignalingClient(webSocket, logger) {\n        this.webSocket = webSocket;\n        this.logger = logger;\n        this.unloadHandler = null;\n        this.observerQueue = new Set();\n        this.connectionRequestQueue = [];\n        this.resetConnection();\n        this.logger.debug(function () { return 'signaling client init'; });\n        this.audioSessionId = this.generateNewAudioSessionId();\n    }\n    DefaultSignalingClient.prototype.registerObserver = function (observer) {\n        this.logger.debug(function () { return 'registering signaling client observer'; });\n        this.observerQueue.add(observer);\n    };\n    DefaultSignalingClient.prototype.removeObserver = function (observer) {\n        this.logger.debug(function () { return 'removing signaling client observer'; });\n        this.observerQueue.delete(observer);\n    };\n    DefaultSignalingClient.prototype.openConnection = function (request) {\n        this.logger.info('adding connection request to queue: ' + request.url());\n        this.connectionRequestQueue.push(request);\n        this.closeConnection();\n    };\n    DefaultSignalingClient.prototype.pingPong = function (pingPongFrame) {\n        this.logger.debug(function () { return 'sending ping'; });\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG;\n        message.pingPong = pingPongFrame;\n        this.sendMessage(message);\n        return message.timestampMs;\n    };\n    DefaultSignalingClient.prototype.join = function (settings) {\n        this.logger.info('sending join');\n        var joinFrame = SignalingProtocol_js_1.SdkJoinFrame.create();\n        joinFrame.protocolVersion = 2;\n        joinFrame.maxNumOfVideos = settings.maxVideos;\n        joinFrame.flags = SignalingProtocol_js_1.SdkJoinFlags.HAS_STREAM_UPDATE;\n        // Only Chrome currently supports the new send side bandwidth estimation\n        var browserBehavior = new DefaultBrowserBehavior_1.default();\n        if (browserBehavior.hasChromiumWebRTC()) {\n            joinFrame.flags |= SignalingProtocol_js_1.SdkJoinFlags.USE_SEND_SIDE_BWE;\n        }\n        joinFrame.flags |= settings.sendBitrates ? SignalingProtocol_js_1.SdkJoinFlags.SEND_BITRATES : 0;\n        joinFrame.clientDetails = SignalingProtocol_js_1.SdkClientDetails.create({\n            platformName: browserBehavior.name(),\n            platformVersion: browserBehavior.version(),\n            clientSource: Versioning_1.default.sdkName,\n            chimeSdkVersion: Versioning_1.default.sdkVersion,\n        });\n        joinFrame.audioSessionId = this.audioSessionId;\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.JOIN;\n        message.join = joinFrame;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.subscribe = function (settings) {\n        var subscribeFrame = SignalingProtocol_js_1.SdkSubscribeFrame.create();\n        subscribeFrame.sendStreams = [];\n        subscribeFrame.sdpOffer = settings.sdpOffer;\n        subscribeFrame.audioCheckin = settings.audioCheckin;\n        subscribeFrame.audioHost = settings.audioHost;\n        subscribeFrame.audioMuted = settings.audioMuted;\n        if (settings.connectionTypeHasVideo) {\n            subscribeFrame.receiveStreamIds = settings.receiveStreamIds;\n        }\n        subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.RX;\n        if (!settings.audioCheckin) {\n            var audioStream = SignalingProtocol_js_1.SdkStreamDescriptor.create();\n            audioStream.mediaType = SignalingProtocol_js_1.SdkStreamMediaType.AUDIO;\n            audioStream.trackLabel = 'AmazonChimeExpressAudio';\n            audioStream.attendeeId = settings.attendeeId;\n            audioStream.streamId = 1;\n            audioStream.groupId = 1;\n            audioStream.framerate = 15;\n            audioStream.maxBitrateKbps = 600;\n            audioStream.avgBitrateBps = 400000;\n            subscribeFrame.sendStreams.push(audioStream);\n        }\n        if (settings.localVideoEnabled) {\n            subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            for (var i = 0; i < settings.videoStreamDescriptions.length; i++) {\n                // Non-simulcast use DefaultVideoStreamIndex.localStreamDescriptions\n                // which is the exact old behavior\n                var streamDescription = settings.videoStreamDescriptions[i].clone();\n                streamDescription.attendeeId = settings.attendeeId;\n                subscribeFrame.sendStreams.push(streamDescription.toStreamDescriptor());\n            }\n        }\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.SUBSCRIBE;\n        message.sub = subscribeFrame;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.leave = function () {\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.LEAVE;\n        message.leave = SignalingProtocol_js_1.SdkLeaveFrame.create();\n        this.sendMessage(message);\n        this.logger.debug(function () {\n            return 'sent leave';\n        });\n    };\n    DefaultSignalingClient.prototype.sendClientMetrics = function (clientMetricFrame) {\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.CLIENT_METRIC;\n        message.clientMetric = clientMetricFrame;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.sendDataMessage = function (messageFrame) {\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.DATA_MESSAGE;\n        message.dataMessage = messageFrame;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.closeConnection = function () {\n        if (this.webSocket.readyState() !== WebSocketReadyState_1.default.None &&\n            this.webSocket.readyState() !== WebSocketReadyState_1.default.Closed) {\n            this.isClosing = true;\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketClosing, null));\n            this.webSocket.close();\n            this.deactivatePageUnloadHandler();\n        }\n        else {\n            this.logger.info('no existing connection needs closing');\n            this.serviceConnectionRequestQueue();\n        }\n    };\n    DefaultSignalingClient.prototype.ready = function () {\n        return (this.webSocket.readyState() === WebSocketReadyState_1.default.Open && !this.isClosing && this.wasOpened);\n    };\n    DefaultSignalingClient.prototype.mute = function (muted) {\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_CONTROL;\n        var audioControl = SignalingProtocol_js_1.SdkAudioControlFrame.create();\n        audioControl.muted = muted;\n        message.audioControl = audioControl;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.pause = function (streamIds) {\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PAUSE;\n        message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n        message.pause.streamIds = streamIds;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.resume = function (streamIds) {\n        var message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.RESUME;\n        message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n        message.pause.streamIds = streamIds;\n        this.sendMessage(message);\n    };\n    DefaultSignalingClient.prototype.resetConnection = function () {\n        this.webSocket.destroy();\n        this.wasOpened = false;\n    };\n    DefaultSignalingClient.prototype.sendMessage = function (message) {\n        message.timestampMs = Date.now();\n        this.logger.debug(function () { return \"sending: \" + JSON.stringify(message); });\n        var buffer = this.prependWithFrameTypeRTC(SignalingProtocol_js_1.SdkSignalFrame.encode(message).finish());\n        if (this.ready()) {\n            if (!this.webSocket.send(buffer)) {\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSendMessageFailure, null));\n                return;\n            }\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSentMessage, null));\n        }\n        else {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSkippedMessage, null));\n        }\n    };\n    DefaultSignalingClient.prototype.receiveMessage = function (inBuffer) {\n        var message;\n        try {\n            message = SignalingProtocol_js_1.SdkSignalFrame.decode(inBuffer);\n        }\n        catch (e) {\n            this.logger.info(\"failed to decode: \" + inBuffer);\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ProtocolDecodeFailure, null));\n            return;\n        }\n        this.logger.debug(function () { return \"received: \" + JSON.stringify(message); });\n        if (this.webSocket.readyState() === WebSocketReadyState_1.default.Open) {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ReceivedSignalFrame, message));\n        }\n        else {\n            this.logger.info(\"skipping notification of message since WebSocket is not open: \" + JSON.stringify(message));\n        }\n    };\n    DefaultSignalingClient.prototype.stripFrameTypeRTC = function (inBuffer) {\n        var frameType = inBuffer[0];\n        // TODO: change server frame type to send 0x05\n        if (frameType !== DefaultSignalingClient.FRAME_TYPE_RTC && frameType !== 0x02) {\n            this.logger.warn(\"expected FrameTypeRTC for message but got \" + frameType);\n        }\n        return inBuffer.slice(1);\n    };\n    DefaultSignalingClient.prototype.prependWithFrameTypeRTC = function (inBuffer) {\n        var outBuffer = new Uint8Array(inBuffer.length + 1);\n        outBuffer[0] = DefaultSignalingClient.FRAME_TYPE_RTC;\n        outBuffer.set(inBuffer, 1);\n        return outBuffer;\n    };\n    DefaultSignalingClient.prototype.serviceConnectionRequestQueue = function () {\n        if (this.connectionRequestQueue.length === 0) {\n            this.logger.info('no connection requests to service');\n            return;\n        }\n        var request = this.connectionRequestQueue.shift();\n        this.logger.info(\"opening connection to \" + request.url());\n        this.isClosing = false;\n        this.webSocket.create(request.url(), request.protocols());\n        this.setUpEventListeners();\n        this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketConnecting, null));\n    };\n    DefaultSignalingClient.prototype.sendEvent = function (event) {\n        var e_1, _a;\n        var _this = this;\n        switch (event.type) {\n            case SignalingClientEventType_1.default.WebSocketMessage:\n            case SignalingClientEventType_1.default.ReceivedSignalFrame:\n            case SignalingClientEventType_1.default.WebSocketSentMessage:\n                this.logger.debug(function () { return \"notifying event: \" + SignalingClientEventType_1.default[event.type]; });\n                break;\n            case SignalingClientEventType_1.default.WebSocketSkippedMessage:\n                this.logger.debug(function () {\n                    return \"notifying event: \" + SignalingClientEventType_1.default[event.type] + \", websocket state=\" + WebSocketReadyState_1.default[_this.webSocket.readyState()];\n                });\n                break;\n            default:\n                this.logger.info(\"notifying event: \" + SignalingClientEventType_1.default[event.type]);\n                break;\n        }\n        try {\n            for (var _b = __values(this.observerQueue), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var observer = _c.value;\n                observer.handleSignalingClientEvent(event);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    DefaultSignalingClient.prototype.setUpEventListeners = function () {\n        var _this = this;\n        this.webSocket.addEventListener('open', function () {\n            _this.activatePageUnloadHandler();\n            _this.wasOpened = true;\n            _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketOpen, null));\n        });\n        this.webSocket.addEventListener('message', function (event) {\n            _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketMessage, null));\n            _this.receiveMessage(_this.stripFrameTypeRTC(new Uint8Array(event.data)));\n        });\n        this.webSocket.addEventListener('close', function (event) {\n            _this.deactivatePageUnloadHandler();\n            _this.resetConnection();\n            _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketClosed, null, event.code, event.reason));\n            _this.serviceConnectionRequestQueue();\n        });\n        this.webSocket.addEventListener('error', function () {\n            if (_this.isClosing && !_this.wasOpened) {\n                _this.logger.info('ignoring error closing signaling while connecting');\n                return;\n            }\n            if (_this.wasOpened) {\n                _this.logger.error('received error while connected');\n                _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketError, null));\n            }\n            else {\n                _this.logger.error('failed to connect');\n                _this.sendEvent(new SignalingClientEvent_1.default(_this, SignalingClientEventType_1.default.WebSocketFailed, null));\n            }\n        });\n    };\n    DefaultSignalingClient.prototype.activatePageUnloadHandler = function () {\n        var _this = this;\n        this.unloadHandler = function () {\n            _this.leave();\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var GlobalAny = global;\n        GlobalAny['window'] &&\n            GlobalAny['window']['addEventListener'] &&\n            window.addEventListener('unload', this.unloadHandler);\n    };\n    DefaultSignalingClient.prototype.deactivatePageUnloadHandler = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var GlobalAny = global;\n        GlobalAny['window'] &&\n            GlobalAny['window']['addEventListener'] &&\n            window.removeEventListener('unload', this.unloadHandler);\n        this.unloadHandler = null;\n    };\n    DefaultSignalingClient.prototype.generateNewAudioSessionId = function () {\n        var num = new Uint32Array(1);\n        var randomNum = window.crypto.getRandomValues(num);\n        return randomNum[0];\n    };\n    DefaultSignalingClient.FRAME_TYPE_RTC = 0x5;\n    return DefaultSignalingClient;\n}());\nexports.default = DefaultSignalingClient;\n//# sourceMappingURL=DefaultSignalingClient.js.map"]},"metadata":{},"sourceType":"script"}