{"ast":null,"code":"\"use strict\"; // Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BaseConnectionHealthPolicy =\n/** @class */\nfunction () {\n  function BaseConnectionHealthPolicy(configuration, data) {\n    this.minHealth = configuration.minHealth;\n    this.maxHealth = configuration.maxHealth;\n    this.currentHealth = configuration.initialHealth;\n    this.currentData = data.clone();\n  }\n\n  BaseConnectionHealthPolicy.prototype.minimumHealth = function () {\n    return this.minHealth;\n  };\n\n  BaseConnectionHealthPolicy.prototype.maximumHealth = function () {\n    return this.maxHealth;\n  };\n\n  BaseConnectionHealthPolicy.prototype.health = function () {\n    return this.maximumHealth();\n  };\n\n  BaseConnectionHealthPolicy.prototype.update = function (connectionHealthData) {\n    this.currentData = connectionHealthData;\n  };\n\n  BaseConnectionHealthPolicy.prototype.getConnectionHealthData = function () {\n    return this.currentData.clone();\n  };\n\n  BaseConnectionHealthPolicy.prototype.healthy = function () {\n    return this.health() > this.minimumHealth();\n  };\n\n  BaseConnectionHealthPolicy.prototype.healthIfChanged = function () {\n    var newHealth = this.health();\n\n    if (newHealth !== this.currentHealth) {\n      this.currentHealth = newHealth;\n      return newHealth;\n    }\n\n    return null;\n  };\n\n  return BaseConnectionHealthPolicy;\n}();\n\nexports.default = BaseConnectionHealthPolicy;","map":{"version":3,"sources":["../../src/connectionhealthpolicy/BaseConnectionHealthPolicy.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAMA,IAAA,0BAAA;AAAA;AAAA,YAAA;AAME,WAAA,0BAAA,CAAY,aAAZ,EAAgE,IAAhE,EAA0F;AACxF,SAAK,SAAL,GAAiB,aAAa,CAAC,SAA/B;AACA,SAAK,SAAL,GAAiB,aAAa,CAAC,SAA/B;AACA,SAAK,aAAL,GAAqB,aAAa,CAAC,aAAnC;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,KAAL,EAAnB;AACD;;AAED,EAAA,0BAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAK,SAAZ;AACD,GAFD;;AAIA,EAAA,0BAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAK,SAAZ;AACD,GAFD;;AAIA,EAAA,0BAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,WAAO,KAAK,aAAL,EAAP;AACD,GAFD;;AAIA,EAAA,0BAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,oBAAP,EAAiD;AAC/C,SAAK,WAAL,GAAmB,oBAAnB;AACD,GAFD;;AAIA,EAAA,0BAAA,CAAA,SAAA,CAAA,uBAAA,GAAA,YAAA;AACE,WAAO,KAAK,WAAL,CAAiB,KAAjB,EAAP;AACD,GAFD;;AAIA,EAAA,0BAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAL,KAAgB,KAAK,aAAL,EAAvB;AACD,GAFD;;AAIA,EAAA,0BAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,QAAM,SAAS,GAAG,KAAK,MAAL,EAAlB;;AACA,QAAI,SAAS,KAAK,KAAK,aAAvB,EAAsC;AACpC,WAAK,aAAL,GAAqB,SAArB;AACA,aAAO,SAAP;AACD;;AACD,WAAO,IAAP;AACD,GAPD;;AAQF,SAAA,0BAAA;AAAC,CA7CD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseConnectionHealthPolicy = /** @class */ (function () {\n    function BaseConnectionHealthPolicy(configuration, data) {\n        this.minHealth = configuration.minHealth;\n        this.maxHealth = configuration.maxHealth;\n        this.currentHealth = configuration.initialHealth;\n        this.currentData = data.clone();\n    }\n    BaseConnectionHealthPolicy.prototype.minimumHealth = function () {\n        return this.minHealth;\n    };\n    BaseConnectionHealthPolicy.prototype.maximumHealth = function () {\n        return this.maxHealth;\n    };\n    BaseConnectionHealthPolicy.prototype.health = function () {\n        return this.maximumHealth();\n    };\n    BaseConnectionHealthPolicy.prototype.update = function (connectionHealthData) {\n        this.currentData = connectionHealthData;\n    };\n    BaseConnectionHealthPolicy.prototype.getConnectionHealthData = function () {\n        return this.currentData.clone();\n    };\n    BaseConnectionHealthPolicy.prototype.healthy = function () {\n        return this.health() > this.minimumHealth();\n    };\n    BaseConnectionHealthPolicy.prototype.healthIfChanged = function () {\n        var newHealth = this.health();\n        if (newHealth !== this.currentHealth) {\n            this.currentHealth = newHealth;\n            return newHealth;\n        }\n        return null;\n    };\n    return BaseConnectionHealthPolicy;\n}());\nexports.default = BaseConnectionHealthPolicy;\n//# sourceMappingURL=BaseConnectionHealthPolicy.js.map"]},"metadata":{},"sourceType":"script"}