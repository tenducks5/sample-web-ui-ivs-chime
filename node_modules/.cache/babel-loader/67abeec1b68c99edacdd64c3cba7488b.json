{"ast":null,"code":"\"use strict\"; // Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ScreenSharingMessageFlag_1 = require(\"../screensharingmessage/ScreenSharingMessageFlag\");\n\nvar ScreenSharingMessageFlagSerializer =\n/** @class */\nfunction () {\n  function ScreenSharingMessageFlagSerializer() {}\n\n  ScreenSharingMessageFlagSerializer.prototype.serialize = function (flags) {\n    var n = 0;\n\n    if (flags.includes(ScreenSharingMessageFlag_1.default.Broadcast)) {\n      n |= ScreenSharingMessageFlagSerializer.Broadcast;\n    }\n\n    if (flags.includes(ScreenSharingMessageFlag_1.default.Local)) {\n      n |= ScreenSharingMessageFlagSerializer.Local;\n    }\n\n    if (flags.includes(ScreenSharingMessageFlag_1.default.Synthesized)) {\n      n |= ScreenSharingMessageFlagSerializer.Synthesized;\n    }\n\n    if (flags.includes(ScreenSharingMessageFlag_1.default.Unicast)) {\n      n |= ScreenSharingMessageFlagSerializer.Unicast;\n    }\n\n    return n;\n  };\n\n  ScreenSharingMessageFlagSerializer.prototype.deserialize = function (byte) {\n    var flags = new Array();\n\n    if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Broadcast)) {\n      flags.push(ScreenSharingMessageFlag_1.default.Broadcast);\n    }\n\n    if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Unicast)) {\n      flags.push(ScreenSharingMessageFlag_1.default.Unicast);\n    }\n\n    if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Local)) {\n      flags.push(ScreenSharingMessageFlag_1.default.Local);\n    }\n\n    if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Synthesized)) {\n      flags.push(ScreenSharingMessageFlag_1.default.Synthesized);\n    }\n\n    return flags;\n  };\n\n  ScreenSharingMessageFlagSerializer.prototype.isBitSet = function (byte, bit) {\n    return (byte & bit) === bit;\n  };\n\n  ScreenSharingMessageFlagSerializer.Broadcast = 1 << 0;\n  ScreenSharingMessageFlagSerializer.Local = 1 << 1;\n  ScreenSharingMessageFlagSerializer.Synthesized = 1 << 2;\n  ScreenSharingMessageFlagSerializer.Unicast = 1 << 3;\n  return ScreenSharingMessageFlagSerializer;\n}();\n\nexports.default = ScreenSharingMessageFlagSerializer;","map":{"version":3,"sources":["../../src/screensharingmessageserialization/ScreenSharingMessageFlagSerializer.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAEA,IAAA,0BAAA,GAAA,OAAA,CAAA,kDAAA,CAAA;;AAGA,IAAA,kCAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kCAAA,GAAA,CA+CC;;AAxCC,EAAA,kCAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAA2C;AACzC,QAAI,CAAC,GAAG,CAAR;;AAEA,QAAI,KAAK,CAAC,QAAN,CAAe,0BAAA,CAAA,OAAA,CAAyB,SAAxC,CAAJ,EAAwD;AACtD,MAAA,CAAC,IAAI,kCAAkC,CAAC,SAAxC;AACD;;AACD,QAAI,KAAK,CAAC,QAAN,CAAe,0BAAA,CAAA,OAAA,CAAyB,KAAxC,CAAJ,EAAoD;AAClD,MAAA,CAAC,IAAI,kCAAkC,CAAC,KAAxC;AACD;;AACD,QAAI,KAAK,CAAC,QAAN,CAAe,0BAAA,CAAA,OAAA,CAAyB,WAAxC,CAAJ,EAA0D;AACxD,MAAA,CAAC,IAAI,kCAAkC,CAAC,WAAxC;AACD;;AACD,QAAI,KAAK,CAAC,QAAN,CAAe,0BAAA,CAAA,OAAA,CAAyB,OAAxC,CAAJ,EAAsD;AACpD,MAAA,CAAC,IAAI,kCAAkC,CAAC,OAAxC;AACD;;AACD,WAAO,CAAP;AACD,GAhBD;;AAkBA,EAAA,kCAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,IAAZ,EAAwB;AACtB,QAAM,KAAK,GAAG,IAAI,KAAJ,EAAd;;AAEA,QAAI,KAAK,QAAL,CAAc,IAAd,EAAoB,kCAAkC,CAAC,SAAvD,CAAJ,EAAuE;AACrE,MAAA,KAAK,CAAC,IAAN,CAAW,0BAAA,CAAA,OAAA,CAAyB,SAApC;AACD;;AACD,QAAI,KAAK,QAAL,CAAc,IAAd,EAAoB,kCAAkC,CAAC,OAAvD,CAAJ,EAAqE;AACnE,MAAA,KAAK,CAAC,IAAN,CAAW,0BAAA,CAAA,OAAA,CAAyB,OAApC;AACD;;AACD,QAAI,KAAK,QAAL,CAAc,IAAd,EAAoB,kCAAkC,CAAC,KAAvD,CAAJ,EAAmE;AACjE,MAAA,KAAK,CAAC,IAAN,CAAW,0BAAA,CAAA,OAAA,CAAyB,KAApC;AACD;;AACD,QAAI,KAAK,QAAL,CAAc,IAAd,EAAoB,kCAAkC,CAAC,WAAvD,CAAJ,EAAyE;AACvE,MAAA,KAAK,CAAC,IAAN,CAAW,0BAAA,CAAA,OAAA,CAAyB,WAApC;AACD;;AAED,WAAO,KAAP;AACD,GAjBD;;AAmBQ,EAAA,kCAAA,CAAA,SAAA,CAAA,QAAA,GAAR,UAAiB,IAAjB,EAA+B,GAA/B,EAA0C;AACxC,WAAO,CAAC,IAAI,GAAG,GAAR,MAAiB,GAAxB;AACD,GAFO;;AA1CgB,EAAA,kCAAA,CAAA,SAAA,GAAY,KAAK,CAAjB;AACA,EAAA,kCAAA,CAAA,KAAA,GAAQ,KAAK,CAAb;AACA,EAAA,kCAAA,CAAA,WAAA,GAAc,KAAK,CAAnB;AACA,EAAA,kCAAA,CAAA,OAAA,GAAU,KAAK,CAAf;AA0C1B,SAAA,kCAAA;AAAC,CA/CD,EAAA;;kBAAqB,kC","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ScreenSharingMessageFlag_1 = require(\"../screensharingmessage/ScreenSharingMessageFlag\");\nvar ScreenSharingMessageFlagSerializer = /** @class */ (function () {\n    function ScreenSharingMessageFlagSerializer() {\n    }\n    ScreenSharingMessageFlagSerializer.prototype.serialize = function (flags) {\n        var n = 0;\n        if (flags.includes(ScreenSharingMessageFlag_1.default.Broadcast)) {\n            n |= ScreenSharingMessageFlagSerializer.Broadcast;\n        }\n        if (flags.includes(ScreenSharingMessageFlag_1.default.Local)) {\n            n |= ScreenSharingMessageFlagSerializer.Local;\n        }\n        if (flags.includes(ScreenSharingMessageFlag_1.default.Synthesized)) {\n            n |= ScreenSharingMessageFlagSerializer.Synthesized;\n        }\n        if (flags.includes(ScreenSharingMessageFlag_1.default.Unicast)) {\n            n |= ScreenSharingMessageFlagSerializer.Unicast;\n        }\n        return n;\n    };\n    ScreenSharingMessageFlagSerializer.prototype.deserialize = function (byte) {\n        var flags = new Array();\n        if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Broadcast)) {\n            flags.push(ScreenSharingMessageFlag_1.default.Broadcast);\n        }\n        if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Unicast)) {\n            flags.push(ScreenSharingMessageFlag_1.default.Unicast);\n        }\n        if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Local)) {\n            flags.push(ScreenSharingMessageFlag_1.default.Local);\n        }\n        if (this.isBitSet(byte, ScreenSharingMessageFlagSerializer.Synthesized)) {\n            flags.push(ScreenSharingMessageFlag_1.default.Synthesized);\n        }\n        return flags;\n    };\n    ScreenSharingMessageFlagSerializer.prototype.isBitSet = function (byte, bit) {\n        return (byte & bit) === bit;\n    };\n    ScreenSharingMessageFlagSerializer.Broadcast = 1 << 0;\n    ScreenSharingMessageFlagSerializer.Local = 1 << 1;\n    ScreenSharingMessageFlagSerializer.Synthesized = 1 << 2;\n    ScreenSharingMessageFlagSerializer.Unicast = 1 << 3;\n    return ScreenSharingMessageFlagSerializer;\n}());\nexports.default = ScreenSharingMessageFlagSerializer;\n//# sourceMappingURL=ScreenSharingMessageFlagSerializer.js.map"]},"metadata":{},"sourceType":"script"}