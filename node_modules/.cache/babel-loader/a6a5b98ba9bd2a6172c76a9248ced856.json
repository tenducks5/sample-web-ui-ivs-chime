{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * [[AudioVideoControllerState]] includes the compute resources shared by [[Task]].\n */\n\nvar AudioVideoControllerState =\n/** @class */\nfunction () {\n  function AudioVideoControllerState() {\n    this.logger = null;\n    this.browserBehavior = null;\n    this.signalingClient = null;\n    this.meetingSessionConfiguration = null;\n    this.peer = null;\n    this.previousSdpOffer = null;\n    this.sdpOfferInit = null;\n    this.audioVideoController = null;\n    this.realtimeController = null;\n    this.videoTileController = null;\n    this.mediaStreamBroker = null;\n    this.audioMixController = null;\n    this.activeAudioInput = null;\n    this.activeVideoInput = null;\n    this.transceiverController = null;\n    this.indexFrame = null;\n    this.iceCandidates = [];\n    this.iceCandidateHandler = null;\n    this.iceGatheringStateEventHandler = null;\n    this.screenSharingSession = null;\n    this.sdpAnswer = null;\n    this.turnCredentials = null;\n    this.reconnectController = null;\n    this.removableObservers = [];\n    this.videoStreamIndex = null;\n    this.videoDownlinkBandwidthPolicy = null;\n    this.videoUplinkBandwidthPolicy = null;\n    this.lastKnownVideoAvailability = null;\n    this.localVideoSender = null;\n    this.localAudioSender = null;\n    this.videoCaptureAndEncodeParameter = null;\n    this.videosToReceive = null;\n    this.videoSubscriptions = null;\n    this.videosPaused = null;\n    this.videoDuplexMode = null;\n    this.volumeIndicatorAdapter = null;\n    this.statsCollector = null;\n    this.connectionMonitor = null;\n    this.videoInputAttachedTimestampMs = 0;\n    this.audioDeviceInformation = {};\n    this.videoDeviceInformation = {};\n    this.enableSimulcast = false;\n    this.eventController = null;\n    this.signalingOpenDurationMs = null;\n    this.poorConnectionCount = 0;\n    this.maxVideoTileCount = 0;\n    this.startTimeMs = null;\n  }\n\n  return AudioVideoControllerState;\n}();\n\nexports.default = AudioVideoControllerState;","map":{"version":3,"sources":["../../src/audiovideocontroller/AudioVideoControllerState.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AA6BA;;AAEG;;AACH,IAAA,yBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,yBAAA,GAAA;AACE,SAAA,MAAA,GAAwB,IAAxB;AAEA,SAAA,eAAA,GAA0C,IAA1C;AAEA,SAAA,eAAA,GAA0C,IAA1C;AAEA,SAAA,2BAAA,GAAkE,IAAlE;AAEA,SAAA,IAAA,GAAiC,IAAjC;AAEA,SAAA,gBAAA,GAA+B,IAA/B;AAEA,SAAA,YAAA,GAAiD,IAAjD;AAEA,SAAA,oBAAA,GAAoD,IAApD;AAEA,SAAA,kBAAA,GAAgD,IAAhD;AAEA,SAAA,mBAAA,GAAkD,IAAlD;AAEA,SAAA,iBAAA,GAA8C,IAA9C;AAEA,SAAA,kBAAA,GAAgD,IAAhD;AAEA,SAAA,gBAAA,GAAuC,IAAvC;AAEA,SAAA,gBAAA,GAAuC,IAAvC;AAEA,SAAA,qBAAA,GAAsD,IAAtD;AAEA,SAAA,UAAA,GAAmC,IAAnC;AAEA,SAAA,aAAA,GAAmC,EAAnC;AAEA,SAAA,mBAAA,GAAyE,IAAzE;AAEA,SAAA,6BAAA,GAAmD,IAAnD;AAEA,SAAA,oBAAA,GAAoD,IAApD;AAEA,SAAA,SAAA,GAA2B,IAA3B;AAEA,SAAA,eAAA,GAAwD,IAAxD;AAEA,SAAA,mBAAA,GAAkD,IAAlD;AAEA,SAAA,kBAAA,GAA0C,EAA1C;AAEA,SAAA,gBAAA,GAA4C,IAA5C;AAEA,SAAA,4BAAA,GAAoE,IAApE;AAEA,SAAA,0BAAA,GAAgE,IAAhE;AAEA,SAAA,0BAAA,GAAqE,IAArE;AAEA,SAAA,gBAAA,GAAwC,IAAxC;AAEA,SAAA,gBAAA,GAAwC,IAAxC;AAEA,SAAA,8BAAA,GAAwE,IAAxE;AAEA,SAAA,eAAA,GAA2C,IAA3C;AAEA,SAAA,kBAAA,GAAsC,IAAtC;AAEA,SAAA,YAAA,GAAwC,IAAxC;AAEA,SAAA,eAAA,GAA+C,IAA/C;AAEA,SAAA,sBAAA,GAAwD,IAAxD;AAEA,SAAA,cAAA,GAAwC,IAAxC;AAEA,SAAA,iBAAA,GAA8C,IAA9C;AAEA,SAAA,6BAAA,GAAwC,CAAxC;AAEA,SAAA,sBAAA,GAAmD,EAAnD;AAEA,SAAA,sBAAA,GAAmD,EAAnD;AAEA,SAAA,eAAA,GAA2B,KAA3B;AAEA,SAAA,eAAA,GAA0C,IAA1C;AAEA,SAAA,uBAAA,GAAyC,IAAzC;AAEA,SAAA,mBAAA,GAA8B,CAA9B;AAEA,SAAA,iBAAA,GAA4B,CAA5B;AAEA,SAAA,WAAA,GAA6B,IAA7B;AACD;;AAAD,SAAA,yBAAA;AAAC,CA9FD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[AudioVideoControllerState]] includes the compute resources shared by [[Task]].\n */\nvar AudioVideoControllerState = /** @class */ (function () {\n    function AudioVideoControllerState() {\n        this.logger = null;\n        this.browserBehavior = null;\n        this.signalingClient = null;\n        this.meetingSessionConfiguration = null;\n        this.peer = null;\n        this.previousSdpOffer = null;\n        this.sdpOfferInit = null;\n        this.audioVideoController = null;\n        this.realtimeController = null;\n        this.videoTileController = null;\n        this.mediaStreamBroker = null;\n        this.audioMixController = null;\n        this.activeAudioInput = null;\n        this.activeVideoInput = null;\n        this.transceiverController = null;\n        this.indexFrame = null;\n        this.iceCandidates = [];\n        this.iceCandidateHandler = null;\n        this.iceGatheringStateEventHandler = null;\n        this.screenSharingSession = null;\n        this.sdpAnswer = null;\n        this.turnCredentials = null;\n        this.reconnectController = null;\n        this.removableObservers = [];\n        this.videoStreamIndex = null;\n        this.videoDownlinkBandwidthPolicy = null;\n        this.videoUplinkBandwidthPolicy = null;\n        this.lastKnownVideoAvailability = null;\n        this.localVideoSender = null;\n        this.localAudioSender = null;\n        this.videoCaptureAndEncodeParameter = null;\n        this.videosToReceive = null;\n        this.videoSubscriptions = null;\n        this.videosPaused = null;\n        this.videoDuplexMode = null;\n        this.volumeIndicatorAdapter = null;\n        this.statsCollector = null;\n        this.connectionMonitor = null;\n        this.videoInputAttachedTimestampMs = 0;\n        this.audioDeviceInformation = {};\n        this.videoDeviceInformation = {};\n        this.enableSimulcast = false;\n        this.eventController = null;\n        this.signalingOpenDurationMs = null;\n        this.poorConnectionCount = 0;\n        this.maxVideoTileCount = 0;\n        this.startTimeMs = null;\n    }\n    return AudioVideoControllerState;\n}());\nexports.default = AudioVideoControllerState;\n//# sourceMappingURL=AudioVideoControllerState.js.map"]},"metadata":{},"sourceType":"script"}