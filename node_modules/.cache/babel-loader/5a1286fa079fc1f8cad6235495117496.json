{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n\nvar DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\n\nvar VideoStreamDescription_1 = require(\"./VideoStreamDescription\");\n/**\n * [[DefaultVideoStreamIndex]] implements [[VideoStreamIndex]] to facilitate video stream subscription\n * and includes query functions for stream id and attendee id.\n */\n\n\nvar DefaultVideoStreamIndex =\n/** @class */\nfunction () {\n  function DefaultVideoStreamIndex(logger) {\n    this.logger = logger;\n    this.currentIndex = null;\n    this.indexForSubscribe = null;\n    this.currentSubscribeAck = null; // These are based on the index at the time of the last Subscribe Ack\n\n    this.subscribeTrackToStreamMap = null;\n    this.subscribeStreamToAttendeeMap = null;\n    this.subscribeStreamToExternalUserIdMap = null;\n    this.subscribeSsrcToStreamMap = null; // These are based on the most up to date index\n\n    this.streamToAttendeeMap = null;\n    this.streamToExternalUserIdMap = null;\n    this.videoStreamDescription = new VideoStreamDescription_1.default();\n    this.videoStreamDescription.trackLabel = 'AmazonChimeExpressVideo';\n    this.videoStreamDescription.streamId = 2;\n    this.videoStreamDescription.groupId = 2;\n  }\n\n  DefaultVideoStreamIndex.prototype.localStreamDescriptions = function () {\n    // localStreamDescriptions are used to construct IndexFrame\n    // old behavior for single video is to have streamId and groupId trackLabel fixed as the follows\n    return [this.videoStreamDescription.clone()];\n  };\n\n  DefaultVideoStreamIndex.prototype.remoteStreamDescriptions = function () {\n    if (!this.currentIndex || !this.currentIndex.sources) {\n      return [];\n    }\n\n    var streamInfos = [];\n    this.currentIndex.sources.forEach(function (source) {\n      var description = new VideoStreamDescription_1.default();\n      description.attendeeId = source.attendeeId;\n      description.groupId = source.groupId;\n      description.streamId = source.streamId;\n      description.maxBitrateKbps = source.maxBitrateKbps;\n      description.avgBitrateKbps = Math.floor(source.avgBitrateBps / 1000);\n      streamInfos.push(description);\n    });\n    return streamInfos;\n  };\n\n  DefaultVideoStreamIndex.prototype.integrateUplinkPolicyDecision = function (param) {\n    if (!!param && param.length) {\n      var encodingParam = param[0];\n      this.videoStreamDescription.maxBitrateKbps = encodingParam.maxBitrate / 1000;\n      this.videoStreamDescription.maxFrameRate = encodingParam.maxFramerate;\n    }\n  };\n\n  DefaultVideoStreamIndex.prototype.integrateIndexFrame = function (indexFrame) {\n    this.currentIndex = indexFrame;\n    this.streamToAttendeeMap = null;\n    this.streamToExternalUserIdMap = null;\n  };\n\n  DefaultVideoStreamIndex.prototype.subscribeFrameSent = function () {\n    // This is called just as a Subscribe is being sent.  Save corresponding Index\n    this.indexForSubscribe = this.currentIndex;\n  };\n\n  DefaultVideoStreamIndex.prototype.integrateSubscribeAckFrame = function (subscribeAck) {\n    this.currentSubscribeAck = subscribeAck; // These are valid until the next Subscribe Ack even if the index is updated\n\n    this.subscribeTrackToStreamMap = this.buildTrackToStreamMap(this.currentSubscribeAck);\n    this.subscribeSsrcToStreamMap = this.buildSSRCToStreamMap(this.currentSubscribeAck);\n    this.subscribeStreamToAttendeeMap = this.buildStreamToAttendeeMap(this.indexForSubscribe);\n    this.subscribeStreamToExternalUserIdMap = this.buildStreamExternalUserIdMap(this.indexForSubscribe);\n  };\n\n  DefaultVideoStreamIndex.prototype.integrateBitratesFrame = function (bitrates) {\n    var e_1, _a;\n\n    if (this.currentIndex) {\n      var _loop_1 = function _loop_1(bitrate) {\n        var source = this_1.currentIndex.sources.find(function (source) {\n          return source.streamId === bitrate.sourceStreamId;\n        });\n\n        if (source !== undefined) {\n          source.avgBitrateBps = bitrate.avgBitrateBps;\n        }\n      };\n\n      var this_1 = this;\n\n      try {\n        for (var _b = __values(bitrates.bitrates), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var bitrate = _c.value;\n\n          _loop_1(bitrate);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n\n  DefaultVideoStreamIndex.prototype.allStreams = function () {\n    var e_2, _a;\n\n    var set = new DefaultVideoStreamIdSet_1.default();\n\n    if (this.currentIndex) {\n      try {\n        for (var _b = __values(this.currentIndex.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var source = _c.value;\n          set.add(source.streamId);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    return set;\n  };\n\n  DefaultVideoStreamIndex.prototype.allVideoSendingSourcesExcludingSelf = function (selfAttendeeId) {\n    var e_3, _a;\n\n    var videoSources = [];\n    var attendeeSet = new Set();\n\n    if (this.currentIndex) {\n      if (this.currentIndex.sources && this.currentIndex.sources.length) {\n        try {\n          for (var _b = __values(this.currentIndex.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var stream = _c.value;\n            var attendeeId = stream.attendeeId,\n                externalUserId = stream.externalUserId,\n                mediaType = stream.mediaType;\n\n            if (attendeeId !== selfAttendeeId && mediaType === SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n              if (!attendeeSet.has(attendeeId)) {\n                videoSources.push({\n                  attendee: {\n                    attendeeId: attendeeId,\n                    externalUserId: externalUserId\n                  }\n                });\n                attendeeSet.add(attendeeId);\n              }\n            }\n          }\n        } catch (e_3_1) {\n          e_3 = {\n            error: e_3_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n        }\n      }\n    }\n\n    return videoSources;\n  };\n\n  DefaultVideoStreamIndex.prototype.streamSelectionUnderBandwidthConstraint = function (selfAttendeeId, largeTileAttendeeIds, smallTileAttendeeIds, bandwidthKbps) {\n    var e_4, _a, e_5, _b;\n\n    var newAttendees = new Set();\n\n    if (this.currentIndex) {\n      try {\n        for (var _c = __values(this.currentIndex.sources), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var stream = _d.value;\n\n          if (stream.attendeeId === selfAttendeeId || stream.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n            continue;\n          }\n\n          if (!largeTileAttendeeIds.has(stream.attendeeId) && !smallTileAttendeeIds.has(stream.attendeeId)) {\n            newAttendees.add(stream.attendeeId);\n          }\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    }\n\n    var attendeeToStreamDescriptorMap = this.buildAttendeeToSortedStreamDescriptorMapExcludingSelf(selfAttendeeId);\n    var selectionMap = new Map();\n    var usage = 0;\n    attendeeToStreamDescriptorMap.forEach(function (streams, attendeeId) {\n      selectionMap.set(attendeeId, streams[0]);\n      usage += streams[0].maxBitrateKbps;\n    });\n    usage = this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, largeTileAttendeeIds, usage, bandwidthKbps, selectionMap);\n    this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, newAttendees, usage, bandwidthKbps, selectionMap);\n    var streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n\n    try {\n      for (var _e = __values(selectionMap.values()), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var source = _f.value;\n        streamSelectionSet.add(source.streamId);\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return streamSelectionSet;\n  };\n\n  DefaultVideoStreamIndex.prototype.highestQualityStreamFromEachGroupExcludingSelf = function (selfAttendeeId) {\n    var e_6, _a, e_7, _b;\n\n    var set = new DefaultVideoStreamIdSet_1.default();\n\n    if (this.currentIndex) {\n      var maxes = new Map();\n\n      try {\n        for (var _c = __values(this.currentIndex.sources), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var source = _d.value;\n\n          if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n            continue;\n          }\n\n          if (!maxes.has(source.groupId) || source.maxBitrateKbps > maxes.get(source.groupId).maxBitrateKbps) {\n            maxes.set(source.groupId, source);\n          }\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n\n      try {\n        for (var _e = __values(maxes.values()), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var source = _f.value;\n          set.add(source.streamId);\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    }\n\n    return set;\n  };\n\n  DefaultVideoStreamIndex.prototype.numberOfVideoPublishingParticipantsExcludingSelf = function (selfAttendeeId) {\n    return this.highestQualityStreamFromEachGroupExcludingSelf(selfAttendeeId).array().length;\n  };\n\n  DefaultVideoStreamIndex.prototype.numberOfParticipants = function () {\n    if (!!this.currentIndex.numParticipants) {\n      return this.currentIndex.numParticipants;\n    }\n\n    return -1;\n  };\n\n  DefaultVideoStreamIndex.prototype.attendeeIdForTrack = function (trackId) {\n    var streamId = this.streamIdForTrack(trackId);\n\n    if (streamId === undefined || !this.subscribeStreamToAttendeeMap) {\n      this.logger.warn(\"no attendee found for track \" + trackId);\n      return '';\n    }\n\n    var attendeeId = this.subscribeStreamToAttendeeMap.get(streamId);\n\n    if (!attendeeId) {\n      this.logger.info(\"track \" + trackId + \" (stream \" + streamId + \") does not correspond to a known attendee\");\n      return '';\n    }\n\n    return attendeeId;\n  };\n\n  DefaultVideoStreamIndex.prototype.externalUserIdForTrack = function (trackId) {\n    var streamId = this.streamIdForTrack(trackId);\n\n    if (streamId === undefined || !this.subscribeStreamToExternalUserIdMap) {\n      this.logger.warn(\"no external user id found for track \" + trackId);\n      return '';\n    }\n\n    var externalUserId = this.subscribeStreamToExternalUserIdMap.get(streamId);\n\n    if (!externalUserId) {\n      this.logger.info(\"track \" + trackId + \" (stream \" + streamId + \") does not correspond to a known externalUserId\");\n      return '';\n    }\n\n    return externalUserId;\n  };\n\n  DefaultVideoStreamIndex.prototype.attendeeIdForStreamId = function (streamId) {\n    if (!this.streamToAttendeeMap) {\n      if (this.currentIndex) {\n        this.streamToAttendeeMap = this.buildStreamToAttendeeMap(this.currentIndex);\n      } else {\n        return '';\n      }\n    }\n\n    var attendeeId = this.streamToAttendeeMap.get(streamId);\n\n    if (!attendeeId) {\n      this.logger.info(\"stream \" + streamId + \") does not correspond to a known attendee\");\n      return '';\n    }\n\n    return attendeeId;\n  };\n\n  DefaultVideoStreamIndex.prototype.groupIdForStreamId = function (streamId) {\n    var e_8, _a, e_9, _b;\n\n    try {\n      for (var _c = __values(this.currentIndex.sources), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var source = _d.value;\n\n        if (source.streamId === streamId) {\n          return source.groupId;\n        }\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    } // If wasn't found in current index, then it could be in index used in last subscribe\n\n\n    if (!!this.indexForSubscribe) {\n      try {\n        for (var _e = __values(this.indexForSubscribe.sources), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var source = _f.value;\n\n          if (source.streamId === streamId) {\n            return source.groupId;\n          }\n        }\n      } catch (e_9_1) {\n        e_9 = {\n          error: e_9_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_9) throw e_9.error;\n        }\n      }\n    }\n\n    return undefined;\n  };\n\n  DefaultVideoStreamIndex.prototype.StreamIdsInSameGroup = function (streamId1, streamId2) {\n    if (this.groupIdForStreamId(streamId1) === this.groupIdForStreamId(streamId2)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  DefaultVideoStreamIndex.prototype.streamIdForTrack = function (trackId) {\n    if (!this.subscribeTrackToStreamMap) {\n      return undefined;\n    }\n\n    return this.subscribeTrackToStreamMap.get(trackId);\n  };\n\n  DefaultVideoStreamIndex.prototype.streamIdForSSRC = function (ssrcId) {\n    if (!this.subscribeSsrcToStreamMap) {\n      return undefined;\n    }\n\n    return this.subscribeSsrcToStreamMap.get(ssrcId);\n  };\n\n  DefaultVideoStreamIndex.prototype.streamsPausedAtSource = function () {\n    var e_10, _a;\n\n    var paused = new DefaultVideoStreamIdSet_1.default();\n\n    if (this.currentIndex) {\n      try {\n        for (var _b = __values(this.currentIndex.pausedAtSourceIds), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var streamId = _c.value;\n          paused.add(streamId);\n        }\n      } catch (e_10_1) {\n        e_10 = {\n          error: e_10_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_10) throw e_10.error;\n        }\n      }\n    }\n\n    return paused;\n  };\n\n  DefaultVideoStreamIndex.prototype.buildTrackToStreamMap = function (subscribeAck) {\n    var e_11, _a;\n\n    var map = new Map();\n    this.logger.debug(function () {\n      return \"trackMap \" + JSON.stringify(subscribeAck.tracks);\n    });\n\n    try {\n      for (var _b = __values(subscribeAck.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var trackMapping = _c.value;\n\n        if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n          map.set(trackMapping.trackLabel, trackMapping.streamId);\n        }\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n\n    return map;\n  };\n\n  DefaultVideoStreamIndex.prototype.buildSSRCToStreamMap = function (subscribeAck) {\n    var e_12, _a;\n\n    var map = new Map();\n    this.logger.debug(function () {\n      return \"ssrcMap \" + JSON.stringify(subscribeAck.tracks);\n    });\n\n    try {\n      for (var _b = __values(subscribeAck.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var trackMapping = _c.value;\n\n        if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n          map.set(trackMapping.ssrc, trackMapping.streamId);\n        }\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n\n    return map;\n  };\n\n  DefaultVideoStreamIndex.prototype.buildStreamToAttendeeMap = function (indexFrame) {\n    var e_13, _a;\n\n    var map = new Map();\n\n    if (indexFrame) {\n      try {\n        for (var _b = __values(indexFrame.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var source = _c.value;\n          map.set(source.streamId, source.attendeeId);\n        }\n      } catch (e_13_1) {\n        e_13 = {\n          error: e_13_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_13) throw e_13.error;\n        }\n      }\n    }\n\n    return map;\n  };\n\n  DefaultVideoStreamIndex.prototype.buildStreamExternalUserIdMap = function (indexFrame) {\n    var e_14, _a;\n\n    var map = new Map();\n\n    if (indexFrame) {\n      try {\n        for (var _b = __values(indexFrame.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var source = _c.value;\n\n          if (!!source.externalUserId) {\n            map.set(source.streamId, source.externalUserId);\n          }\n        }\n      } catch (e_14_1) {\n        e_14 = {\n          error: e_14_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_14) throw e_14.error;\n        }\n      }\n    }\n\n    return map;\n  };\n\n  DefaultVideoStreamIndex.prototype.trySelectHighBitrateForAttendees = function (attendeeToStreamDescriptorMap, highAttendees, currentUsage, bandwidthKbps, currentSelectionRef) {\n    var e_15, _a, e_16, _b;\n\n    try {\n      for (var highAttendees_1 = __values(highAttendees), highAttendees_1_1 = highAttendees_1.next(); !highAttendees_1_1.done; highAttendees_1_1 = highAttendees_1.next()) {\n        var attendeeId = highAttendees_1_1.value;\n\n        if (currentUsage >= bandwidthKbps) {\n          break;\n        }\n\n        if (attendeeToStreamDescriptorMap.has(attendeeId)) {\n          var streams = attendeeToStreamDescriptorMap.get(attendeeId);\n\n          try {\n            for (var _c = (e_16 = void 0, __values(streams.reverse())), _d = _c.next(); !_d.done; _d = _c.next()) {\n              var l = _d.value;\n\n              if (currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps < bandwidthKbps) {\n                currentUsage = currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps;\n                currentSelectionRef.set(attendeeId, l);\n                break;\n              }\n            }\n          } catch (e_16_1) {\n            e_16 = {\n              error: e_16_1\n            };\n          } finally {\n            try {\n              if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            } finally {\n              if (e_16) throw e_16.error;\n            }\n          }\n        }\n      }\n    } catch (e_15_1) {\n      e_15 = {\n        error: e_15_1\n      };\n    } finally {\n      try {\n        if (highAttendees_1_1 && !highAttendees_1_1.done && (_a = highAttendees_1.return)) _a.call(highAttendees_1);\n      } finally {\n        if (e_15) throw e_15.error;\n      }\n    }\n\n    return currentUsage;\n  };\n\n  DefaultVideoStreamIndex.prototype.buildAttendeeToSortedStreamDescriptorMapExcludingSelf = function (selfAttendeeId) {\n    var e_17, _a;\n\n    var attendeeToStreamDescriptorMap = new Map();\n\n    if (this.currentIndex) {\n      try {\n        for (var _b = __values(this.currentIndex.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var source = _c.value;\n\n          if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n            continue;\n          }\n\n          if (attendeeToStreamDescriptorMap.has(source.attendeeId)) {\n            attendeeToStreamDescriptorMap.get(source.attendeeId).push(source);\n          } else {\n            attendeeToStreamDescriptorMap.set(source.attendeeId, [source]);\n          }\n        }\n      } catch (e_17_1) {\n        e_17 = {\n          error: e_17_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_17) throw e_17.error;\n        }\n      }\n    }\n\n    attendeeToStreamDescriptorMap.forEach(function (streams, _attendeeId) {\n      streams.sort(function (stream1, stream2) {\n        if (stream1.maxBitrateKbps > stream2.maxBitrateKbps) {\n          return 1;\n        } else if (stream1.maxBitrateKbps < stream2.maxBitrateKbps) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    });\n    return attendeeToStreamDescriptorMap;\n  };\n\n  return DefaultVideoStreamIndex;\n}();\n\nexports.default = DefaultVideoStreamIndex;","map":{"version":3,"sources":["../../src/videostreamindex/DefaultVideoStreamIndex.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nvar DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nvar VideoStreamDescription_1 = require(\"./VideoStreamDescription\");\n/**\n * [[DefaultVideoStreamIndex]] implements [[VideoStreamIndex]] to facilitate video stream subscription\n * and includes query functions for stream id and attendee id.\n */\nvar DefaultVideoStreamIndex = /** @class */ (function () {\n    function DefaultVideoStreamIndex(logger) {\n        this.logger = logger;\n        this.currentIndex = null;\n        this.indexForSubscribe = null;\n        this.currentSubscribeAck = null;\n        // These are based on the index at the time of the last Subscribe Ack\n        this.subscribeTrackToStreamMap = null;\n        this.subscribeStreamToAttendeeMap = null;\n        this.subscribeStreamToExternalUserIdMap = null;\n        this.subscribeSsrcToStreamMap = null;\n        // These are based on the most up to date index\n        this.streamToAttendeeMap = null;\n        this.streamToExternalUserIdMap = null;\n        this.videoStreamDescription = new VideoStreamDescription_1.default();\n        this.videoStreamDescription.trackLabel = 'AmazonChimeExpressVideo';\n        this.videoStreamDescription.streamId = 2;\n        this.videoStreamDescription.groupId = 2;\n    }\n    DefaultVideoStreamIndex.prototype.localStreamDescriptions = function () {\n        // localStreamDescriptions are used to construct IndexFrame\n        // old behavior for single video is to have streamId and groupId trackLabel fixed as the follows\n        return [this.videoStreamDescription.clone()];\n    };\n    DefaultVideoStreamIndex.prototype.remoteStreamDescriptions = function () {\n        if (!this.currentIndex || !this.currentIndex.sources) {\n            return [];\n        }\n        var streamInfos = [];\n        this.currentIndex.sources.forEach(function (source) {\n            var description = new VideoStreamDescription_1.default();\n            description.attendeeId = source.attendeeId;\n            description.groupId = source.groupId;\n            description.streamId = source.streamId;\n            description.maxBitrateKbps = source.maxBitrateKbps;\n            description.avgBitrateKbps = Math.floor(source.avgBitrateBps / 1000);\n            streamInfos.push(description);\n        });\n        return streamInfos;\n    };\n    DefaultVideoStreamIndex.prototype.integrateUplinkPolicyDecision = function (param) {\n        if (!!param && param.length) {\n            var encodingParam = param[0];\n            this.videoStreamDescription.maxBitrateKbps = encodingParam.maxBitrate / 1000;\n            this.videoStreamDescription.maxFrameRate = encodingParam.maxFramerate;\n        }\n    };\n    DefaultVideoStreamIndex.prototype.integrateIndexFrame = function (indexFrame) {\n        this.currentIndex = indexFrame;\n        this.streamToAttendeeMap = null;\n        this.streamToExternalUserIdMap = null;\n    };\n    DefaultVideoStreamIndex.prototype.subscribeFrameSent = function () {\n        // This is called just as a Subscribe is being sent.  Save corresponding Index\n        this.indexForSubscribe = this.currentIndex;\n    };\n    DefaultVideoStreamIndex.prototype.integrateSubscribeAckFrame = function (subscribeAck) {\n        this.currentSubscribeAck = subscribeAck;\n        // These are valid until the next Subscribe Ack even if the index is updated\n        this.subscribeTrackToStreamMap = this.buildTrackToStreamMap(this.currentSubscribeAck);\n        this.subscribeSsrcToStreamMap = this.buildSSRCToStreamMap(this.currentSubscribeAck);\n        this.subscribeStreamToAttendeeMap = this.buildStreamToAttendeeMap(this.indexForSubscribe);\n        this.subscribeStreamToExternalUserIdMap = this.buildStreamExternalUserIdMap(this.indexForSubscribe);\n    };\n    DefaultVideoStreamIndex.prototype.integrateBitratesFrame = function (bitrates) {\n        var e_1, _a;\n        if (this.currentIndex) {\n            var _loop_1 = function (bitrate) {\n                var source = this_1.currentIndex.sources.find(function (source) { return source.streamId === bitrate.sourceStreamId; });\n                if (source !== undefined) {\n                    source.avgBitrateBps = bitrate.avgBitrateBps;\n                }\n            };\n            var this_1 = this;\n            try {\n                for (var _b = __values(bitrates.bitrates), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var bitrate = _c.value;\n                    _loop_1(bitrate);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    };\n    DefaultVideoStreamIndex.prototype.allStreams = function () {\n        var e_2, _a;\n        var set = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            try {\n                for (var _b = __values(this.currentIndex.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var source = _c.value;\n                    set.add(source.streamId);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return set;\n    };\n    DefaultVideoStreamIndex.prototype.allVideoSendingSourcesExcludingSelf = function (selfAttendeeId) {\n        var e_3, _a;\n        var videoSources = [];\n        var attendeeSet = new Set();\n        if (this.currentIndex) {\n            if (this.currentIndex.sources && this.currentIndex.sources.length) {\n                try {\n                    for (var _b = __values(this.currentIndex.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var stream = _c.value;\n                        var attendeeId = stream.attendeeId, externalUserId = stream.externalUserId, mediaType = stream.mediaType;\n                        if (attendeeId !== selfAttendeeId && mediaType === SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                            if (!attendeeSet.has(attendeeId)) {\n                                videoSources.push({ attendee: { attendeeId: attendeeId, externalUserId: externalUserId } });\n                                attendeeSet.add(attendeeId);\n                            }\n                        }\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n            }\n        }\n        return videoSources;\n    };\n    DefaultVideoStreamIndex.prototype.streamSelectionUnderBandwidthConstraint = function (selfAttendeeId, largeTileAttendeeIds, smallTileAttendeeIds, bandwidthKbps) {\n        var e_4, _a, e_5, _b;\n        var newAttendees = new Set();\n        if (this.currentIndex) {\n            try {\n                for (var _c = __values(this.currentIndex.sources), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var stream = _d.value;\n                    if (stream.attendeeId === selfAttendeeId || stream.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                        continue;\n                    }\n                    if (!largeTileAttendeeIds.has(stream.attendeeId) &&\n                        !smallTileAttendeeIds.has(stream.attendeeId)) {\n                        newAttendees.add(stream.attendeeId);\n                    }\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n        }\n        var attendeeToStreamDescriptorMap = this.buildAttendeeToSortedStreamDescriptorMapExcludingSelf(selfAttendeeId);\n        var selectionMap = new Map();\n        var usage = 0;\n        attendeeToStreamDescriptorMap.forEach(function (streams, attendeeId) {\n            selectionMap.set(attendeeId, streams[0]);\n            usage += streams[0].maxBitrateKbps;\n        });\n        usage = this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, largeTileAttendeeIds, usage, bandwidthKbps, selectionMap);\n        this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, newAttendees, usage, bandwidthKbps, selectionMap);\n        var streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n        try {\n            for (var _e = __values(selectionMap.values()), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var source = _f.value;\n                streamSelectionSet.add(source.streamId);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return streamSelectionSet;\n    };\n    DefaultVideoStreamIndex.prototype.highestQualityStreamFromEachGroupExcludingSelf = function (selfAttendeeId) {\n        var e_6, _a, e_7, _b;\n        var set = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            var maxes = new Map();\n            try {\n                for (var _c = __values(this.currentIndex.sources), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var source = _d.value;\n                    if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                        continue;\n                    }\n                    if (!maxes.has(source.groupId) ||\n                        source.maxBitrateKbps > maxes.get(source.groupId).maxBitrateKbps) {\n                        maxes.set(source.groupId, source);\n                    }\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n            try {\n                for (var _e = __values(maxes.values()), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var source = _f.value;\n                    set.add(source.streamId);\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n        }\n        return set;\n    };\n    DefaultVideoStreamIndex.prototype.numberOfVideoPublishingParticipantsExcludingSelf = function (selfAttendeeId) {\n        return this.highestQualityStreamFromEachGroupExcludingSelf(selfAttendeeId).array().length;\n    };\n    DefaultVideoStreamIndex.prototype.numberOfParticipants = function () {\n        if (!!this.currentIndex.numParticipants) {\n            return this.currentIndex.numParticipants;\n        }\n        return -1;\n    };\n    DefaultVideoStreamIndex.prototype.attendeeIdForTrack = function (trackId) {\n        var streamId = this.streamIdForTrack(trackId);\n        if (streamId === undefined || !this.subscribeStreamToAttendeeMap) {\n            this.logger.warn(\"no attendee found for track \" + trackId);\n            return '';\n        }\n        var attendeeId = this.subscribeStreamToAttendeeMap.get(streamId);\n        if (!attendeeId) {\n            this.logger.info(\"track \" + trackId + \" (stream \" + streamId + \") does not correspond to a known attendee\");\n            return '';\n        }\n        return attendeeId;\n    };\n    DefaultVideoStreamIndex.prototype.externalUserIdForTrack = function (trackId) {\n        var streamId = this.streamIdForTrack(trackId);\n        if (streamId === undefined || !this.subscribeStreamToExternalUserIdMap) {\n            this.logger.warn(\"no external user id found for track \" + trackId);\n            return '';\n        }\n        var externalUserId = this.subscribeStreamToExternalUserIdMap.get(streamId);\n        if (!externalUserId) {\n            this.logger.info(\"track \" + trackId + \" (stream \" + streamId + \") does not correspond to a known externalUserId\");\n            return '';\n        }\n        return externalUserId;\n    };\n    DefaultVideoStreamIndex.prototype.attendeeIdForStreamId = function (streamId) {\n        if (!this.streamToAttendeeMap) {\n            if (this.currentIndex) {\n                this.streamToAttendeeMap = this.buildStreamToAttendeeMap(this.currentIndex);\n            }\n            else {\n                return '';\n            }\n        }\n        var attendeeId = this.streamToAttendeeMap.get(streamId);\n        if (!attendeeId) {\n            this.logger.info(\"stream \" + streamId + \") does not correspond to a known attendee\");\n            return '';\n        }\n        return attendeeId;\n    };\n    DefaultVideoStreamIndex.prototype.groupIdForStreamId = function (streamId) {\n        var e_8, _a, e_9, _b;\n        try {\n            for (var _c = __values(this.currentIndex.sources), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var source = _d.value;\n                if (source.streamId === streamId) {\n                    return source.groupId;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        // If wasn't found in current index, then it could be in index used in last subscribe\n        if (!!this.indexForSubscribe) {\n            try {\n                for (var _e = __values(this.indexForSubscribe.sources), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var source = _f.value;\n                    if (source.streamId === streamId) {\n                        return source.groupId;\n                    }\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        }\n        return undefined;\n    };\n    DefaultVideoStreamIndex.prototype.StreamIdsInSameGroup = function (streamId1, streamId2) {\n        if (this.groupIdForStreamId(streamId1) === this.groupIdForStreamId(streamId2)) {\n            return true;\n        }\n        return false;\n    };\n    DefaultVideoStreamIndex.prototype.streamIdForTrack = function (trackId) {\n        if (!this.subscribeTrackToStreamMap) {\n            return undefined;\n        }\n        return this.subscribeTrackToStreamMap.get(trackId);\n    };\n    DefaultVideoStreamIndex.prototype.streamIdForSSRC = function (ssrcId) {\n        if (!this.subscribeSsrcToStreamMap) {\n            return undefined;\n        }\n        return this.subscribeSsrcToStreamMap.get(ssrcId);\n    };\n    DefaultVideoStreamIndex.prototype.streamsPausedAtSource = function () {\n        var e_10, _a;\n        var paused = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            try {\n                for (var _b = __values(this.currentIndex.pausedAtSourceIds), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var streamId = _c.value;\n                    paused.add(streamId);\n                }\n            }\n            catch (e_10_1) { e_10 = { error: e_10_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_10) throw e_10.error; }\n            }\n        }\n        return paused;\n    };\n    DefaultVideoStreamIndex.prototype.buildTrackToStreamMap = function (subscribeAck) {\n        var e_11, _a;\n        var map = new Map();\n        this.logger.debug(function () { return \"trackMap \" + JSON.stringify(subscribeAck.tracks); });\n        try {\n            for (var _b = __values(subscribeAck.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var trackMapping = _c.value;\n                if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n                    map.set(trackMapping.trackLabel, trackMapping.streamId);\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return map;\n    };\n    DefaultVideoStreamIndex.prototype.buildSSRCToStreamMap = function (subscribeAck) {\n        var e_12, _a;\n        var map = new Map();\n        this.logger.debug(function () { return \"ssrcMap \" + JSON.stringify(subscribeAck.tracks); });\n        try {\n            for (var _b = __values(subscribeAck.tracks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var trackMapping = _c.value;\n                if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n                    map.set(trackMapping.ssrc, trackMapping.streamId);\n                }\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return map;\n    };\n    DefaultVideoStreamIndex.prototype.buildStreamToAttendeeMap = function (indexFrame) {\n        var e_13, _a;\n        var map = new Map();\n        if (indexFrame) {\n            try {\n                for (var _b = __values(indexFrame.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var source = _c.value;\n                    map.set(source.streamId, source.attendeeId);\n                }\n            }\n            catch (e_13_1) { e_13 = { error: e_13_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_13) throw e_13.error; }\n            }\n        }\n        return map;\n    };\n    DefaultVideoStreamIndex.prototype.buildStreamExternalUserIdMap = function (indexFrame) {\n        var e_14, _a;\n        var map = new Map();\n        if (indexFrame) {\n            try {\n                for (var _b = __values(indexFrame.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var source = _c.value;\n                    if (!!source.externalUserId) {\n                        map.set(source.streamId, source.externalUserId);\n                    }\n                }\n            }\n            catch (e_14_1) { e_14 = { error: e_14_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_14) throw e_14.error; }\n            }\n        }\n        return map;\n    };\n    DefaultVideoStreamIndex.prototype.trySelectHighBitrateForAttendees = function (attendeeToStreamDescriptorMap, highAttendees, currentUsage, bandwidthKbps, currentSelectionRef) {\n        var e_15, _a, e_16, _b;\n        try {\n            for (var highAttendees_1 = __values(highAttendees), highAttendees_1_1 = highAttendees_1.next(); !highAttendees_1_1.done; highAttendees_1_1 = highAttendees_1.next()) {\n                var attendeeId = highAttendees_1_1.value;\n                if (currentUsage >= bandwidthKbps) {\n                    break;\n                }\n                if (attendeeToStreamDescriptorMap.has(attendeeId)) {\n                    var streams = attendeeToStreamDescriptorMap.get(attendeeId);\n                    try {\n                        for (var _c = (e_16 = void 0, __values(streams.reverse())), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var l = _d.value;\n                            if (currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps <\n                                bandwidthKbps) {\n                                currentUsage =\n                                    currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps;\n                                currentSelectionRef.set(attendeeId, l);\n                                break;\n                            }\n                        }\n                    }\n                    catch (e_16_1) { e_16 = { error: e_16_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                        }\n                        finally { if (e_16) throw e_16.error; }\n                    }\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (highAttendees_1_1 && !highAttendees_1_1.done && (_a = highAttendees_1.return)) _a.call(highAttendees_1);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        return currentUsage;\n    };\n    DefaultVideoStreamIndex.prototype.buildAttendeeToSortedStreamDescriptorMapExcludingSelf = function (selfAttendeeId) {\n        var e_17, _a;\n        var attendeeToStreamDescriptorMap = new Map();\n        if (this.currentIndex) {\n            try {\n                for (var _b = __values(this.currentIndex.sources), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var source = _c.value;\n                    if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                        continue;\n                    }\n                    if (attendeeToStreamDescriptorMap.has(source.attendeeId)) {\n                        attendeeToStreamDescriptorMap.get(source.attendeeId).push(source);\n                    }\n                    else {\n                        attendeeToStreamDescriptorMap.set(source.attendeeId, [source]);\n                    }\n                }\n            }\n            catch (e_17_1) { e_17 = { error: e_17_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_17) throw e_17.error; }\n            }\n        }\n        attendeeToStreamDescriptorMap.forEach(function (streams, _attendeeId) {\n            streams.sort(function (stream1, stream2) {\n                if (stream1.maxBitrateKbps > stream2.maxBitrateKbps) {\n                    return 1;\n                }\n                else if (stream1.maxBitrateKbps < stream2.maxBitrateKbps) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        });\n        return attendeeToStreamDescriptorMap;\n    };\n    return DefaultVideoStreamIndex;\n}());\nexports.default = DefaultVideoStreamIndex;\n//# sourceMappingURL=DefaultVideoStreamIndex.js.map"]},"metadata":{},"sourceType":"script"}