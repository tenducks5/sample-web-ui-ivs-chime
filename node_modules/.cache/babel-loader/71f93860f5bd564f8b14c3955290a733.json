{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nvar DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\n\nvar BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetRemoteDescriptionTask]] asynchronously calls [[setRemoteDescription]] on the\n * peer connection and then waits for the tracks to be added and for the ICE connection\n * to complete.\n */\n\n\nvar SetRemoteDescriptionTask =\n/** @class */\nfunction (_super) {\n  __extends(SetRemoteDescriptionTask, _super);\n\n  function SetRemoteDescriptionTask(context) {\n    var _this = _super.call(this, context.logger) || this;\n\n    _this.context = context;\n    _this.taskName = 'SetRemoteDescriptionTask';\n    return _this;\n  }\n\n  SetRemoteDescriptionTask.prototype.cancel = function () {\n    if (this.cancelICEPromise) {\n      this.cancelICEPromise();\n    }\n  };\n\n  SetRemoteDescriptionTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var peer, sdp, sdpInactiveVideoOffer, sdpInactiveVideoAnswer, updatedAnswer, offer, answer, remoteDescription, err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            peer = this.context.peer;\n\n            if (!peer) {\n              this.logAndThrow('session does not have peer connection; bypass set remote description');\n            }\n\n            sdp = this.context.sdpAnswer;\n            sdp = new DefaultSDP_1.default(sdp).withoutServerReflexiveCandidates().sdp;\n\n            if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n              // Under Plan B if our offer has video, but we're not going to subscribe to\n              // any videos, ensure that the answer has video (marked inactive). If\n              // it doesn't, WebRTC will reject the SDP answer. This happens on Chrome\n              // when going from receiving one video to zero videos. The server does not\n              // provide a video m-line when there are no videos available under Plan B,\n              // thus we need to synthesize a video m-line by copying the one from the offer.\n              this.logger.info('checking for no videos (plan-b)');\n\n              if (this.context.videosToReceive.empty() && this.context.peer.remoteDescription) {\n                this.logger.info('have no videos and have remote description (plan-b)');\n                sdpInactiveVideoOffer = this.context.peer.localDescription.sdp;\n                sdpInactiveVideoAnswer = sdp;\n                updatedAnswer = sdpInactiveVideoAnswer;\n                offer = new DefaultSDP_1.default(sdpInactiveVideoOffer);\n\n                if (offer.hasVideo()) {\n                  this.logger.info(\"offer has video (plan-b): >>>\" + offer.sdp + \"<<<\");\n                  answer = new DefaultSDP_1.default(sdpInactiveVideoAnswer);\n                  this.logger.info(\"existing answer (plan-b): >>>\" + answer.sdp + \"<<<\");\n\n                  if (!answer.hasVideo()) {\n                    this.logger.info(\"copying inactive video from offer into answer (plan-b); sdp answer before is >>>\" + sdpInactiveVideoAnswer + \"<<<\");\n                    updatedAnswer = answer.copyVideo(sdpInactiveVideoOffer).sdp;\n                  }\n                }\n\n                sdp = updatedAnswer;\n              }\n            }\n\n            if (new DefaultBrowserBehavior_1.default().requiresSortCodecPreferencesForSdpAnswer()) {\n              sdp = new DefaultSDP_1.default(sdp).preferH264IfExists().sdp;\n            }\n\n            this.logger.info(\"processed remote description is >>>\" + sdp + \"<<<\");\n            remoteDescription = {\n              type: 'answer',\n              sdp: sdp,\n              toJSON: null\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createICEConnectionCompletedPromise(remoteDescription)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_1 = _a.sent();\n            throw err_1;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SetRemoteDescriptionTask.prototype.createICEConnectionCompletedPromise = function (remoteDescription) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var checkConnectionCompleted, err_2;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              checkConnectionCompleted = function () {\n                if (_this.context.peer.iceConnectionState === 'connected' || _this.context.peer.iceConnectionState === 'completed') {\n                  _this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n\n                  resolve();\n                }\n              };\n\n              this.cancelICEPromise = function () {\n                if (_this.context.peer) {\n                  _this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                }\n\n                reject(new Error(_this.name() + \" got canceled while waiting for the ICE connection state\"));\n              };\n\n              this.context.peer.addEventListener('iceconnectionstatechange', checkConnectionCompleted);\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.context.peer.setRemoteDescription(remoteDescription)];\n\n            case 2:\n              _a.sent();\n\n              this.logger.info('set remote description, waiting for ICE connection');\n              checkConnectionCompleted();\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              err_2 = _a.sent();\n              reject(err_2);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  return SetRemoteDescriptionTask;\n}(BaseTask_1.default);\n\nexports.default = SetRemoteDescriptionTask;","map":{"version":3,"sources":["../../src/task/SetRemoteDescriptionTask.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nvar DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\nvar BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetRemoteDescriptionTask]] asynchronously calls [[setRemoteDescription]] on the\n * peer connection and then waits for the tracks to be added and for the ICE connection\n * to complete.\n */\nvar SetRemoteDescriptionTask = /** @class */ (function (_super) {\n    __extends(SetRemoteDescriptionTask, _super);\n    function SetRemoteDescriptionTask(context) {\n        var _this = _super.call(this, context.logger) || this;\n        _this.context = context;\n        _this.taskName = 'SetRemoteDescriptionTask';\n        return _this;\n    }\n    SetRemoteDescriptionTask.prototype.cancel = function () {\n        if (this.cancelICEPromise) {\n            this.cancelICEPromise();\n        }\n    };\n    SetRemoteDescriptionTask.prototype.run = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var peer, sdp, sdpInactiveVideoOffer, sdpInactiveVideoAnswer, updatedAnswer, offer, answer, remoteDescription, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        peer = this.context.peer;\n                        if (!peer) {\n                            this.logAndThrow('session does not have peer connection; bypass set remote description');\n                        }\n                        sdp = this.context.sdpAnswer;\n                        sdp = new DefaultSDP_1.default(sdp).withoutServerReflexiveCandidates().sdp;\n                        if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n                            // Under Plan B if our offer has video, but we're not going to subscribe to\n                            // any videos, ensure that the answer has video (marked inactive). If\n                            // it doesn't, WebRTC will reject the SDP answer. This happens on Chrome\n                            // when going from receiving one video to zero videos. The server does not\n                            // provide a video m-line when there are no videos available under Plan B,\n                            // thus we need to synthesize a video m-line by copying the one from the offer.\n                            this.logger.info('checking for no videos (plan-b)');\n                            if (this.context.videosToReceive.empty() && this.context.peer.remoteDescription) {\n                                this.logger.info('have no videos and have remote description (plan-b)');\n                                sdpInactiveVideoOffer = this.context.peer.localDescription.sdp;\n                                sdpInactiveVideoAnswer = sdp;\n                                updatedAnswer = sdpInactiveVideoAnswer;\n                                offer = new DefaultSDP_1.default(sdpInactiveVideoOffer);\n                                if (offer.hasVideo()) {\n                                    this.logger.info(\"offer has video (plan-b): >>>\" + offer.sdp + \"<<<\");\n                                    answer = new DefaultSDP_1.default(sdpInactiveVideoAnswer);\n                                    this.logger.info(\"existing answer (plan-b): >>>\" + answer.sdp + \"<<<\");\n                                    if (!answer.hasVideo()) {\n                                        this.logger.info(\"copying inactive video from offer into answer (plan-b); sdp answer before is >>>\" + sdpInactiveVideoAnswer + \"<<<\");\n                                        updatedAnswer = answer.copyVideo(sdpInactiveVideoOffer).sdp;\n                                    }\n                                }\n                                sdp = updatedAnswer;\n                            }\n                        }\n                        if (new DefaultBrowserBehavior_1.default().requiresSortCodecPreferencesForSdpAnswer()) {\n                            sdp = new DefaultSDP_1.default(sdp).preferH264IfExists().sdp;\n                        }\n                        this.logger.info(\"processed remote description is >>>\" + sdp + \"<<<\");\n                        remoteDescription = {\n                            type: 'answer',\n                            sdp: sdp,\n                            toJSON: null,\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createICEConnectionCompletedPromise(remoteDescription)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        throw err_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SetRemoteDescriptionTask.prototype.createICEConnectionCompletedPromise = function (remoteDescription) {\n        var _this = this;\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\n            var checkConnectionCompleted, err_2;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        checkConnectionCompleted = function () {\n                            if (_this.context.peer.iceConnectionState === 'connected' ||\n                                _this.context.peer.iceConnectionState === 'completed') {\n                                _this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                                resolve();\n                            }\n                        };\n                        this.cancelICEPromise = function () {\n                            if (_this.context.peer) {\n                                _this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                            }\n                            reject(new Error(_this.name() + \" got canceled while waiting for the ICE connection state\"));\n                        };\n                        this.context.peer.addEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.context.peer.setRemoteDescription(remoteDescription)];\n                    case 2:\n                        _a.sent();\n                        this.logger.info('set remote description, waiting for ICE connection');\n                        checkConnectionCompleted();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _a.sent();\n                        reject(err_2);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    return SetRemoteDescriptionTask;\n}(BaseTask_1.default));\nexports.default = SetRemoteDescriptionTask;\n//# sourceMappingURL=SetRemoteDescriptionTask.js.map"]},"metadata":{},"sourceType":"script"}