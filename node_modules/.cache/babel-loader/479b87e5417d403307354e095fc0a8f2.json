{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar VideoLogEvent_1 = require(\"../statscollector/VideoLogEvent\");\n\nvar BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[AttachMediaInputTask]] adds audio and video input to peer connection.\n */\n\n\nvar AttachMediaInputTask =\n/** @class */\nfunction (_super) {\n  __extends(AttachMediaInputTask, _super);\n\n  function AttachMediaInputTask(context) {\n    var _this = _super.call(this, context.logger) || this;\n\n    _this.context = context;\n    _this.taskName = 'AttachMediaInputTask';\n    return _this;\n  }\n\n  AttachMediaInputTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var transceiverController, audioInput, audioTracks, senders_1, videoInput, videoTracks_1, videoTrack, encodingParam, senders;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            transceiverController = this.context.transceiverController;\n            transceiverController.setPeer(this.context.peer);\n            transceiverController.setupLocalTransceivers();\n            audioInput = this.context.activeAudioInput;\n            if (!audioInput) return [3\n            /*break*/\n            , 4];\n            audioTracks = audioInput.getAudioTracks();\n            if (!this.context.browserBehavior.requiresUnifiedPlan()) return [3\n            /*break*/\n            , 2];\n            this.context.logger.info('attaching audio track to peer connection (unified-plan)');\n            return [4\n            /*yield*/\n            , transceiverController.setAudioInput(audioTracks.length ? audioTracks[0] : null)];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            this.context.logger.info('attaching audio track to peer connection (plan-b)');\n            senders_1 = this.context.peer.getSenders();\n            audioInput.getAudioTracks().forEach(function (track) {\n              if (!senders_1.find(function (sender) {\n                return sender.track.id === track.id;\n              })) {\n                // unclear why this does not deal with the case of removing\n                // an existing track as we do in attachVideoInput\n                // @ts-ignore\n                _this.context.localAudioSender = _this.context.peer.addTrack(track, audioInput);\n              }\n            });\n            _a.label = 3;\n\n          case 3:\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            return [4\n            /*yield*/\n            , transceiverController.setAudioInput(null)];\n\n          case 5:\n            _a.sent();\n\n            this.context.logger.warn('no audio track');\n            _a.label = 6;\n\n          case 6:\n            videoInput = this.context.activeVideoInput;\n            if (!videoInput) return [3\n            /*break*/\n            , 10];\n            videoTracks_1 = videoInput.getVideoTracks();\n            videoTrack = videoTracks_1.length ? videoTracks_1[0] : null;\n            if (!this.context.browserBehavior.requiresUnifiedPlan()) return [3\n            /*break*/\n            , 8];\n            this.context.logger.info('attaching video track to peer connection (unified-plan)');\n            return [4\n            /*yield*/\n            , transceiverController.setVideoInput(videoTrack)];\n\n          case 7:\n            _a.sent();\n\n            if (this.context.enableSimulcast && this.context.videoUplinkBandwidthPolicy) {\n              encodingParam = this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n              transceiverController.setEncodingParameters(encodingParam);\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            this.context.logger.info('attaching video track to peer connection (plan-b)');\n            senders = this.context.peer.getSenders();\n\n            if (!senders.find(function (sender) {\n              return sender.track && sender.track.id === videoTracks_1[0].id;\n            })) {\n              if (this.context.localVideoSender) {\n                // @ts-ignore\n                this.context.peer.removeTrack(this.context.localVideoSender);\n                this.context.localVideoSender = null;\n              }\n\n              this.context.localVideoSender = this.context.peer.addTrack(videoTracks_1[0], videoInput);\n            }\n\n            _a.label = 9;\n\n          case 9:\n            if (videoTrack) {\n              this.context.statsCollector.logVideoEvent(VideoLogEvent_1.default.InputAttached, this.context.videoDeviceInformation);\n              this.context.videoInputAttachedTimestampMs = Date.now();\n            }\n\n            return [3\n            /*break*/\n            , 12];\n\n          case 10:\n            return [4\n            /*yield*/\n            , transceiverController.setVideoInput(null)];\n\n          case 11:\n            _a.sent();\n\n            this.context.logger.info('no video track');\n\n            if (this.context.localVideoSender) {\n              this.context.logger.info('removing track from peer'); // @ts-ignore\n\n              this.context.peer.removeTrack(this.context.localVideoSender);\n              this.context.localVideoSender = null;\n            }\n\n            _a.label = 12;\n\n          case 12:\n            this.context.videoSubscriptions = transceiverController.updateVideoTransceivers(this.context.videoStreamIndex, this.context.videosToReceive);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return AttachMediaInputTask;\n}(BaseTask_1.default);\n\nexports.default = AttachMediaInputTask;","map":{"version":3,"sources":["../../src/task/AttachMediaInputTask.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,eAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,oBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,SAAA,CAAA,oBAAA,EAAA,MAAA,CAAA;;AAGhD,WAAA,oBAAA,CAAoB,OAApB,EAAsD;AAAtD,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,MAAd,KAAqB,IADvB;;AAAoB,IAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AAFV,IAAA,KAAA,CAAA,QAAA,GAAW,sBAAX;;AAIT;;AAEK,EAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,GAAN,YAAA;;;;;;;;;AACQ,YAAA,qBAAqB,GAAG,KAAK,OAAL,CAAa,qBAArC;AACN,YAAA,qBAAqB,CAAC,OAAtB,CAA8B,KAAK,OAAL,CAAa,IAA3C;AACA,YAAA,qBAAqB,CAAC,sBAAtB;AAEM,YAAA,UAAU,GAAG,KAAK,OAAL,CAAa,gBAA1B;iBAEF,U,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACI,YAAA,WAAW,GAAG,UAAU,CAAC,cAAX,EAAd;iBACF,KAAK,OAAL,CAAa,eAAb,CAA6B,mBAA7B,E,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACF,iBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,yDAAzB;AACA,mBAAA,CAAA;AAAA;AAAA,cAAM,qBAAqB,CAAC,aAAtB,CAAoC,WAAW,CAAC,MAAZ,GAAqB,WAAW,CAAC,CAAD,CAAhC,GAAsC,IAA1E,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;;;;AAEA,iBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,mDAAzB;AAEM,YAAA,SAAA,GAAU,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB,EAAV;AACN,YAAA,UAAU,CAAC,cAAX,GAA4B,OAA5B,CAAoC,UAAC,KAAD,EAAwB;AAC1D,kBACE,CAAC,SAAO,CAAC,IAAR,CAAa,UAAC,MAAD,EAAqB;AACjC,uBAAO,MAAM,CAAC,KAAP,CAAa,EAAb,KAAoB,KAAK,CAAC,EAAjC;AACD,eAFA,CADH,EAIE;AACA;AACA;AACA;AACA,gBAAA,KAAI,CAAC,OAAL,CAAa,gBAAb,GAAgC,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,QAAlB,CAA2B,KAA3B,EAAkC,UAAlC,CAAhC;AACD;AACF,aAXD;;;;;;;;;AAcF,mBAAA,CAAA;AAAA;AAAA,cAAM,qBAAqB,CAAC,aAAtB,CAAoC,IAApC,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AACA,iBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,gBAAzB;;;;AAGI,YAAA,UAAU,GAAG,KAAK,OAAL,CAAa,gBAA1B;iBACF,U,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,EAAA,CAAA;AACI,YAAA,aAAA,GAAc,UAAU,CAAC,cAAX,EAAd;AACA,YAAA,UAAU,GAA4B,aAAW,CAAC,MAAZ,GAAqB,aAAW,CAAC,CAAD,CAAhC,GAAsC,IAA5E;iBACF,KAAK,OAAL,CAAa,eAAb,CAA6B,mBAA7B,E,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACF,iBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,yDAAzB;AACA,mBAAA,CAAA;AAAA;AAAA,cAAM,qBAAqB,CAAC,aAAtB,CAAoC,UAApC,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AACA,gBAAI,KAAK,OAAL,CAAa,eAAb,IAAgC,KAAK,OAAL,CAAa,0BAAjD,EAA6E;AACrE,cAAA,aAAa,GAAG,KAAK,OAAL,CAAa,0BAAb,CAAwC,wBAAxC,EAAhB;AACN,cAAA,qBAAqB,CAAC,qBAAtB,CAA4C,aAA5C;AACD;;;;;;;AAED,iBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,mDAAzB;AAEM,YAAA,OAAO,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAlB,EAAV;;AACN,gBACE,CAAC,OAAO,CAAC,IAAR,CAAa,UAAC,MAAD,EAAqB;AACjC,qBAAO,MAAM,CAAC,KAAP,IAAgB,MAAM,CAAC,KAAP,CAAa,EAAb,KAAoB,aAAW,CAAC,CAAD,CAAX,CAAe,EAA1D;AACD,aAFA,CADH,EAIE;AACA,kBAAI,KAAK,OAAL,CAAa,gBAAjB,EAAmC;AACjC;AACA,qBAAK,OAAL,CAAa,IAAb,CAAkB,WAAlB,CAA8B,KAAK,OAAL,CAAa,gBAA3C;AACA,qBAAK,OAAL,CAAa,gBAAb,GAAgC,IAAhC;AACD;;AACD,mBAAK,OAAL,CAAa,gBAAb,GAAgC,KAAK,OAAL,CAAa,IAAb,CAAkB,QAAlB,CAA2B,aAAW,CAAC,CAAD,CAAtC,EAA2C,UAA3C,CAAhC;AACD;;;;;AAGH,gBAAI,UAAJ,EAAgB;AACd,mBAAK,OAAL,CAAa,cAAb,CAA4B,aAA5B,CACE,eAAA,CAAA,OAAA,CAAc,aADhB,EAEE,KAAK,OAAL,CAAa,sBAFf;AAIA,mBAAK,OAAL,CAAa,6BAAb,GAA6C,IAAI,CAAC,GAAL,EAA7C;AACD;;;;;;;AAED,mBAAA,CAAA;AAAA;AAAA,cAAM,qBAAqB,CAAC,aAAtB,CAAoC,IAApC,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AACA,iBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,gBAAzB;;AACA,gBAAI,KAAK,OAAL,CAAa,gBAAjB,EAAmC;AACjC,mBAAK,OAAL,CAAa,MAAb,CAAoB,IAApB,CAAyB,0BAAzB,EADiC,CAEjC;;AACA,mBAAK,OAAL,CAAa,IAAb,CAAkB,WAAlB,CAA8B,KAAK,OAAL,CAAa,gBAA3C;AACA,mBAAK,OAAL,CAAa,gBAAb,GAAgC,IAAhC;AACD;;;;;AAGH,iBAAK,OAAL,CAAa,kBAAb,GAAkC,qBAAqB,CAAC,uBAAtB,CAChC,KAAK,OAAL,CAAa,gBADmB,EAEhC,KAAK,OAAL,CAAa,eAFmB,CAAlC;;;;;;;AAID,GArFK;;AAsFR,SAAA,oBAAA;AAAC,CA7FD,CAAkD,UAAA,CAAA,OAAlD,CAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar VideoLogEvent_1 = require(\"../statscollector/VideoLogEvent\");\nvar BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[AttachMediaInputTask]] adds audio and video input to peer connection.\n */\nvar AttachMediaInputTask = /** @class */ (function (_super) {\n    __extends(AttachMediaInputTask, _super);\n    function AttachMediaInputTask(context) {\n        var _this = _super.call(this, context.logger) || this;\n        _this.context = context;\n        _this.taskName = 'AttachMediaInputTask';\n        return _this;\n    }\n    AttachMediaInputTask.prototype.run = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var transceiverController, audioInput, audioTracks, senders_1, videoInput, videoTracks_1, videoTrack, encodingParam, senders;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        transceiverController = this.context.transceiverController;\n                        transceiverController.setPeer(this.context.peer);\n                        transceiverController.setupLocalTransceivers();\n                        audioInput = this.context.activeAudioInput;\n                        if (!audioInput) return [3 /*break*/, 4];\n                        audioTracks = audioInput.getAudioTracks();\n                        if (!this.context.browserBehavior.requiresUnifiedPlan()) return [3 /*break*/, 2];\n                        this.context.logger.info('attaching audio track to peer connection (unified-plan)');\n                        return [4 /*yield*/, transceiverController.setAudioInput(audioTracks.length ? audioTracks[0] : null)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.context.logger.info('attaching audio track to peer connection (plan-b)');\n                        senders_1 = this.context.peer.getSenders();\n                        audioInput.getAudioTracks().forEach(function (track) {\n                            if (!senders_1.find(function (sender) {\n                                return sender.track.id === track.id;\n                            })) {\n                                // unclear why this does not deal with the case of removing\n                                // an existing track as we do in attachVideoInput\n                                // @ts-ignore\n                                _this.context.localAudioSender = _this.context.peer.addTrack(track, audioInput);\n                            }\n                        });\n                        _a.label = 3;\n                    case 3: return [3 /*break*/, 6];\n                    case 4: return [4 /*yield*/, transceiverController.setAudioInput(null)];\n                    case 5:\n                        _a.sent();\n                        this.context.logger.warn('no audio track');\n                        _a.label = 6;\n                    case 6:\n                        videoInput = this.context.activeVideoInput;\n                        if (!videoInput) return [3 /*break*/, 10];\n                        videoTracks_1 = videoInput.getVideoTracks();\n                        videoTrack = videoTracks_1.length ? videoTracks_1[0] : null;\n                        if (!this.context.browserBehavior.requiresUnifiedPlan()) return [3 /*break*/, 8];\n                        this.context.logger.info('attaching video track to peer connection (unified-plan)');\n                        return [4 /*yield*/, transceiverController.setVideoInput(videoTrack)];\n                    case 7:\n                        _a.sent();\n                        if (this.context.enableSimulcast && this.context.videoUplinkBandwidthPolicy) {\n                            encodingParam = this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                            transceiverController.setEncodingParameters(encodingParam);\n                        }\n                        return [3 /*break*/, 9];\n                    case 8:\n                        this.context.logger.info('attaching video track to peer connection (plan-b)');\n                        senders = this.context.peer.getSenders();\n                        if (!senders.find(function (sender) {\n                            return sender.track && sender.track.id === videoTracks_1[0].id;\n                        })) {\n                            if (this.context.localVideoSender) {\n                                // @ts-ignore\n                                this.context.peer.removeTrack(this.context.localVideoSender);\n                                this.context.localVideoSender = null;\n                            }\n                            this.context.localVideoSender = this.context.peer.addTrack(videoTracks_1[0], videoInput);\n                        }\n                        _a.label = 9;\n                    case 9:\n                        if (videoTrack) {\n                            this.context.statsCollector.logVideoEvent(VideoLogEvent_1.default.InputAttached, this.context.videoDeviceInformation);\n                            this.context.videoInputAttachedTimestampMs = Date.now();\n                        }\n                        return [3 /*break*/, 12];\n                    case 10: return [4 /*yield*/, transceiverController.setVideoInput(null)];\n                    case 11:\n                        _a.sent();\n                        this.context.logger.info('no video track');\n                        if (this.context.localVideoSender) {\n                            this.context.logger.info('removing track from peer');\n                            // @ts-ignore\n                            this.context.peer.removeTrack(this.context.localVideoSender);\n                            this.context.localVideoSender = null;\n                        }\n                        _a.label = 12;\n                    case 12:\n                        this.context.videoSubscriptions = transceiverController.updateVideoTransceivers(this.context.videoStreamIndex, this.context.videosToReceive);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AttachMediaInputTask;\n}(BaseTask_1.default));\nexports.default = AttachMediaInputTask;\n//# sourceMappingURL=AttachMediaInputTask.js.map"]},"metadata":{},"sourceType":"script"}