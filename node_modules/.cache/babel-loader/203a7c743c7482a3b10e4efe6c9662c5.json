{"ast":null,"code":"\"use strict\"; // Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Versioning_1 = require(\"../versioning/Versioning\");\n\nvar DefaultDOMWebSocket_1 = require(\"./DefaultDOMWebSocket\");\n\nvar DefaultDOMWebSocketFactory =\n/** @class */\nfunction () {\n  function DefaultDOMWebSocketFactory() {}\n\n  DefaultDOMWebSocketFactory.prototype.create = function (url, protocols, binaryType) {\n    var webSocket = new WebSocket(Versioning_1.default.urlWithVersion(url), protocols);\n\n    if (binaryType !== undefined) {\n      webSocket.binaryType = binaryType;\n    }\n\n    return new DefaultDOMWebSocket_1.default(webSocket);\n  };\n\n  return DefaultDOMWebSocketFactory;\n}();\n\nexports.default = DefaultDOMWebSocketFactory;","map":{"version":3,"sources":["../../src/domwebsocket/DefaultDOMWebSocketFactory.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAIA,IAAA,0BAAA;AAAA;AAAA,YAAA;AAAA,WAAA,0BAAA,GAAA,CAQC;;AAPC,EAAA,0BAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,GAAP,EAAoB,SAApB,EAA0D,UAA1D,EAAiF;AAC/E,QAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,YAAA,CAAA,OAAA,CAAW,cAAX,CAA0B,GAA1B,CAAd,EAA8C,SAA9C,CAAlB;;AACA,QAAI,UAAU,KAAK,SAAnB,EAA8B;AAC5B,MAAA,SAAS,CAAC,UAAV,GAAuB,UAAvB;AACD;;AACD,WAAO,IAAI,qBAAA,CAAA,OAAJ,CAAwB,SAAxB,CAAP;AACD,GAND;;AAOF,SAAA,0BAAA;AAAC,CARD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Versioning_1 = require(\"../versioning/Versioning\");\nvar DefaultDOMWebSocket_1 = require(\"./DefaultDOMWebSocket\");\nvar DefaultDOMWebSocketFactory = /** @class */ (function () {\n    function DefaultDOMWebSocketFactory() {\n    }\n    DefaultDOMWebSocketFactory.prototype.create = function (url, protocols, binaryType) {\n        var webSocket = new WebSocket(Versioning_1.default.urlWithVersion(url), protocols);\n        if (binaryType !== undefined) {\n            webSocket.binaryType = binaryType;\n        }\n        return new DefaultDOMWebSocket_1.default(webSocket);\n    };\n    return DefaultDOMWebSocketFactory;\n}());\nexports.default = DefaultDOMWebSocketFactory;\n//# sourceMappingURL=DefaultDOMWebSocketFactory.js.map"]},"metadata":{},"sourceType":"script"}