{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Maybe_1 = require(\"../../maybe/Maybe\");\n/**\n * [[DefaultScreenViewingSession]] is a default impl of the interface.\n */\n\n\nvar DefaultScreenViewingSession =\n/** @class */\nfunction () {\n  function DefaultScreenViewingSession(webSocketFactory, logger) {\n    this.webSocketFactory = webSocketFactory;\n    this.logger = logger;\n    this.webSocket = null;\n  }\n\n  DefaultScreenViewingSession.prototype.withObserver = function (observer) {\n    this.observer = observer;\n    return this;\n  };\n\n  DefaultScreenViewingSession.prototype.openConnection = function (request) {\n    var _this = this;\n\n    this.logger.info(\"DefaultScreenViewingSession: Opening connection\");\n\n    if (this.webSocket) {\n      return Promise.reject(new Error('Must close existing connection before opening a new one'));\n    }\n\n    this.webSocket = this.webSocketFactory.create(request.screenViewingURL, request.protocols(), 'arraybuffer');\n    this.webSocket.addEventListener('message', function (event) {\n      Maybe_1.default.of(_this.observer).map(function (observer) {\n        Maybe_1.default.of(observer.didReceiveWebSocketMessage).map(function (f) {\n          return f.bind(_this.observer)(event);\n        });\n      });\n    });\n    this.webSocket.addEventListener('close', function (event) {\n      Maybe_1.default.of(_this.observer).map(function (observer) {\n        Maybe_1.default.of(observer.didCloseWebSocket).map(function (f) {\n          return f.bind(_this.observer)(event);\n        });\n      });\n      _this.webSocket = null;\n    });\n    return this.webSocket.open(request.timeoutMs);\n  };\n\n  DefaultScreenViewingSession.prototype.closeConnection = function () {\n    this.logger.info(\"DefaultScreenViewingSession: Closing connection\");\n\n    if (!this.webSocket) {\n      return Promise.reject(new Error('No websocket to close'));\n    }\n\n    var webSocket = this.webSocket;\n    this.webSocket = null;\n    return webSocket.close(DefaultScreenViewingSession.DEFAULT_TIMEOUT).then(function () {});\n  };\n\n  DefaultScreenViewingSession.prototype.send = function (data) {\n    this.logger.debug(function () {\n      return \"DefaultScreenViewingSession: Sending \" + data.byteLength + \" bytes\";\n    });\n    this.webSocket.send(data);\n  };\n\n  DefaultScreenViewingSession.DEFAULT_TIMEOUT = 1000;\n  return DefaultScreenViewingSession;\n}();\n\nexports.default = DefaultScreenViewingSession;","map":{"version":3,"sources":["../../../src/screenviewing/session/DefaultScreenViewingSession.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Maybe_1 = require(\"../../maybe/Maybe\");\n/**\n * [[DefaultScreenViewingSession]] is a default impl of the interface.\n */\nvar DefaultScreenViewingSession = /** @class */ (function () {\n    function DefaultScreenViewingSession(webSocketFactory, logger) {\n        this.webSocketFactory = webSocketFactory;\n        this.logger = logger;\n        this.webSocket = null;\n    }\n    DefaultScreenViewingSession.prototype.withObserver = function (observer) {\n        this.observer = observer;\n        return this;\n    };\n    DefaultScreenViewingSession.prototype.openConnection = function (request) {\n        var _this = this;\n        this.logger.info(\"DefaultScreenViewingSession: Opening connection\");\n        if (this.webSocket) {\n            return Promise.reject(new Error('Must close existing connection before opening a new one'));\n        }\n        this.webSocket = this.webSocketFactory.create(request.screenViewingURL, request.protocols(), 'arraybuffer');\n        this.webSocket.addEventListener('message', function (event) {\n            Maybe_1.default.of(_this.observer).map(function (observer) {\n                Maybe_1.default.of(observer.didReceiveWebSocketMessage).map(function (f) { return f.bind(_this.observer)(event); });\n            });\n        });\n        this.webSocket.addEventListener('close', function (event) {\n            Maybe_1.default.of(_this.observer).map(function (observer) {\n                Maybe_1.default.of(observer.didCloseWebSocket).map(function (f) { return f.bind(_this.observer)(event); });\n            });\n            _this.webSocket = null;\n        });\n        return this.webSocket.open(request.timeoutMs);\n    };\n    DefaultScreenViewingSession.prototype.closeConnection = function () {\n        this.logger.info(\"DefaultScreenViewingSession: Closing connection\");\n        if (!this.webSocket) {\n            return Promise.reject(new Error('No websocket to close'));\n        }\n        var webSocket = this.webSocket;\n        this.webSocket = null;\n        return webSocket.close(DefaultScreenViewingSession.DEFAULT_TIMEOUT).then(function () { });\n    };\n    DefaultScreenViewingSession.prototype.send = function (data) {\n        this.logger.debug(function () { return \"DefaultScreenViewingSession: Sending \" + data.byteLength + \" bytes\"; });\n        this.webSocket.send(data);\n    };\n    DefaultScreenViewingSession.DEFAULT_TIMEOUT = 1000;\n    return DefaultScreenViewingSession;\n}());\nexports.default = DefaultScreenViewingSession;\n//# sourceMappingURL=DefaultScreenViewingSession.js.map"]},"metadata":{},"sourceType":"script"}