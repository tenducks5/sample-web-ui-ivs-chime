{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultDevicePixelRatioMonitor =\n/** @class */\nfunction () {\n  function DefaultDevicePixelRatioMonitor(devicePixelRatioSource, logger) {\n    var _this = this;\n\n    this.devicePixelRatioSource = devicePixelRatioSource;\n\n    this.mediaQueryListener = function () {\n      _this.observerQueue.forEach(function (tileObserver) {\n        tileObserver.devicePixelRatioChanged(_this.devicePixelRatioSource.devicePixelRatio());\n      });\n    };\n\n    this.observerQueue = new Set();\n\n    if (typeof window !== 'undefined') {\n      var mediaQueryList = matchMedia(\"(resolution: \" + this.devicePixelRatioSource.devicePixelRatio() + \"dppx)\");\n\n      if (typeof mediaQueryList.addEventListener === 'function') {\n        mediaQueryList.addEventListener('change', this.mediaQueryListener);\n      } else if (typeof mediaQueryList.addListener === 'function') {\n        mediaQueryList.addListener(this.mediaQueryListener);\n      } else {\n        logger.warn('ignoring DefaultDevicePixelRatioMonitor');\n      }\n    }\n  }\n\n  DefaultDevicePixelRatioMonitor.prototype.registerObserver = function (observer) {\n    this.observerQueue.add(observer);\n    observer.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio());\n  };\n\n  DefaultDevicePixelRatioMonitor.prototype.removeObserver = function (observer) {\n    this.observerQueue.delete(observer);\n  };\n\n  return DefaultDevicePixelRatioMonitor;\n}();\n\nexports.default = DefaultDevicePixelRatioMonitor;","map":{"version":3,"sources":["../../src/devicepixelratiomonitor/DefaultDevicePixelRatioMonitor.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAOA,IAAA,8BAAA;AAAA;AAAA,YAAA;AAGE,WAAA,8BAAA,CAAoB,sBAApB,EAAoE,MAApE,EAAkF;AAAlF,QAAA,KAAA,GAAA,IAAA;;AAAoB,SAAA,sBAAA,GAAA,sBAAA;;AAgBpB,SAAA,kBAAA,GAAqB,YAAA;AACnB,MAAA,KAAI,CAAC,aAAL,CAAmB,OAAnB,CAA2B,UAAA,YAAA,EAAY;AACrC,QAAA,YAAY,CAAC,uBAAb,CAAqC,KAAI,CAAC,sBAAL,CAA4B,gBAA5B,EAArC;AACD,OAFD;AAGD,KAJD;;AAfE,SAAK,aAAL,GAAqB,IAAI,GAAJ,EAArB;;AACA,QAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC,UAAM,cAAc,GAAG,UAAU,CAC/B,kBAAgB,KAAK,sBAAL,CAA4B,gBAA5B,EAAhB,GAA8D,OAD/B,CAAjC;;AAGA,UAAI,OAAO,cAAc,CAAC,gBAAtB,KAA2C,UAA/C,EAA2D;AACzD,QAAA,cAAc,CAAC,gBAAf,CAAgC,QAAhC,EAA0C,KAAK,kBAA/C;AACD,OAFD,MAEO,IAAI,OAAO,cAAc,CAAC,WAAtB,KAAsC,UAA1C,EAAsD;AAC3D,QAAA,cAAc,CAAC,WAAf,CAA2B,KAAK,kBAAhC;AACD,OAFM,MAEA;AACL,QAAA,MAAM,CAAC,IAAP,CAAY,yCAAZ;AACD;AACF;AACF;;AAQD,EAAA,8BAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,QAAjB,EAAmD;AACjD,SAAK,aAAL,CAAmB,GAAnB,CAAuB,QAAvB;AACA,IAAA,QAAQ,CAAC,uBAAT,CAAiC,KAAK,sBAAL,CAA4B,gBAA5B,EAAjC;AACD,GAHD;;AAKA,EAAA,8BAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAe,QAAf,EAAiD;AAC/C,SAAK,aAAL,CAAmB,MAAnB,CAA0B,QAA1B;AACD,GAFD;;AAGF,SAAA,8BAAA;AAAC,CAjCD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultDevicePixelRatioMonitor = /** @class */ (function () {\n    function DefaultDevicePixelRatioMonitor(devicePixelRatioSource, logger) {\n        var _this = this;\n        this.devicePixelRatioSource = devicePixelRatioSource;\n        this.mediaQueryListener = function () {\n            _this.observerQueue.forEach(function (tileObserver) {\n                tileObserver.devicePixelRatioChanged(_this.devicePixelRatioSource.devicePixelRatio());\n            });\n        };\n        this.observerQueue = new Set();\n        if (typeof window !== 'undefined') {\n            var mediaQueryList = matchMedia(\"(resolution: \" + this.devicePixelRatioSource.devicePixelRatio() + \"dppx)\");\n            if (typeof mediaQueryList.addEventListener === 'function') {\n                mediaQueryList.addEventListener('change', this.mediaQueryListener);\n            }\n            else if (typeof mediaQueryList.addListener === 'function') {\n                mediaQueryList.addListener(this.mediaQueryListener);\n            }\n            else {\n                logger.warn('ignoring DefaultDevicePixelRatioMonitor');\n            }\n        }\n    }\n    DefaultDevicePixelRatioMonitor.prototype.registerObserver = function (observer) {\n        this.observerQueue.add(observer);\n        observer.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio());\n    };\n    DefaultDevicePixelRatioMonitor.prototype.removeObserver = function (observer) {\n        this.observerQueue.delete(observer);\n    };\n    return DefaultDevicePixelRatioMonitor;\n}());\nexports.default = DefaultDevicePixelRatioMonitor;\n//# sourceMappingURL=DefaultDevicePixelRatioMonitor.js.map"]},"metadata":{},"sourceType":"script"}