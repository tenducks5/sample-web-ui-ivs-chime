{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultTransceiverController =\n/** @class */\nfunction () {\n  function DefaultTransceiverController(logger, browserBehavior) {\n    this.logger = logger;\n    this.browserBehavior = browserBehavior;\n    this._localCameraTransceiver = null;\n    this._localAudioTransceiver = null;\n    this.videoSubscriptions = [];\n    this.defaultMediaStream = null;\n    this.peer = null;\n  }\n\n  DefaultTransceiverController.prototype.setEncodingParameters = function (_params) {\n    return;\n  };\n\n  DefaultTransceiverController.setVideoSendingBitrateKbpsForSender = function (sender, bitrateKbps, _logger) {\n    return __awaiter(this, void 0, void 0, function () {\n      var param, _a, _b, encodeParam;\n\n      var e_1, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (!sender || bitrateKbps <= 0) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            param = sender.getParameters();\n\n            if (!param.encodings) {\n              param.encodings = [{}];\n            }\n\n            try {\n              for (_a = __values(param.encodings), _b = _a.next(); !_b.done; _b = _a.next()) {\n                encodeParam = _b.value;\n                encodeParam.maxBitrate = bitrateKbps * 1000;\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n\n            return [4\n            /*yield*/\n            , sender.setParameters(param)];\n\n          case 1:\n            _d.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DefaultTransceiverController.replaceAudioTrackForSender = function (sender, track) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!sender) {\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [4\n            /*yield*/\n            , sender.replaceTrack(track)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  DefaultTransceiverController.prototype.localAudioTransceiver = function () {\n    return this._localAudioTransceiver;\n  };\n\n  DefaultTransceiverController.prototype.localVideoTransceiver = function () {\n    return this._localCameraTransceiver;\n  };\n\n  DefaultTransceiverController.prototype.setVideoSendingBitrateKbps = function (bitrateKbps) {\n    return __awaiter(this, void 0, void 0, function () {\n      var sender;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // this won't set bandwidth limitation for video in Chrome\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n              return [2\n              /*return*/\n              ];\n            }\n\n            sender = this._localCameraTransceiver.sender;\n            return [4\n            /*yield*/\n            , DefaultTransceiverController.setVideoSendingBitrateKbpsForSender(sender, bitrateKbps, this.logger)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DefaultTransceiverController.prototype.setPeer = function (peer) {\n    this.peer = peer;\n  };\n\n  DefaultTransceiverController.prototype.reset = function () {\n    this._localCameraTransceiver = null;\n    this._localAudioTransceiver = null;\n    this.videoSubscriptions = [];\n    this.defaultMediaStream = null;\n    this.peer = null;\n  };\n\n  DefaultTransceiverController.prototype.useTransceivers = function () {\n    if (!this.peer || !this.browserBehavior.requiresUnifiedPlan()) {\n      return false;\n    }\n\n    return typeof this.peer.getTransceivers !== 'undefined';\n  };\n\n  DefaultTransceiverController.prototype.hasVideoInput = function () {\n    if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') return false;\n    return true;\n  };\n\n  DefaultTransceiverController.prototype.trackIsVideoInput = function (track) {\n    if (!this._localCameraTransceiver) {\n      return false;\n    }\n\n    return track === this._localCameraTransceiver.sender.track || track === this._localCameraTransceiver.receiver.track;\n  };\n\n  DefaultTransceiverController.prototype.setupLocalTransceivers = function () {\n    if (!this.useTransceivers()) {\n      return;\n    }\n\n    if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n      this.defaultMediaStream = new MediaStream();\n    }\n\n    if (!this._localAudioTransceiver) {\n      this._localAudioTransceiver = this.peer.addTransceiver('audio', {\n        direction: 'inactive',\n        streams: [this.defaultMediaStream]\n      });\n    }\n\n    if (!this._localCameraTransceiver) {\n      this._localCameraTransceiver = this.peer.addTransceiver('video', {\n        direction: 'inactive',\n        streams: [this.defaultMediaStream]\n      });\n    }\n  };\n\n  DefaultTransceiverController.prototype.replaceAudioTrack = function (track) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._localAudioTransceiver || this._localAudioTransceiver.direction !== 'sendrecv') {\n              this.logger.info(\"audio transceiver direction is not set up or not activated\");\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [4\n            /*yield*/\n            , this._localAudioTransceiver.sender.replaceTrack(track)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  DefaultTransceiverController.prototype.setAudioInput = function (track) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.setTransceiverInput(this._localAudioTransceiver, track)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DefaultTransceiverController.prototype.setVideoInput = function (track) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.setTransceiverInput(this._localCameraTransceiver, track)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  DefaultTransceiverController.prototype.updateVideoTransceivers = function (videoStreamIndex, videosToReceive) {\n    var _this = this;\n\n    if (!this.useTransceivers()) {\n      return videosToReceive.array();\n    } // See https://blog.mozilla.org/webrtc/rtcrtptransceiver-explored/ for details on transceivers\n\n\n    var transceivers = this.peer.getTransceivers(); // Subscription index 0 is reserved for transmitting camera.\n    // We mark inactive slots with 0 in the subscription array.\n\n    this.videoSubscriptions = [0];\n    videosToReceive = videosToReceive.clone();\n    this.updateTransceivers(transceivers, videoStreamIndex, videosToReceive);\n    this.logger.debug(function () {\n      return _this.debugDumpTransceivers();\n    });\n    return this.videoSubscriptions;\n  };\n\n  DefaultTransceiverController.prototype.updateTransceivers = function (transceivers, videoStreamIndex, videosToReceive) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var videosRemaining = videosToReceive.array(); // Start by handling existing videos\n    // Begin counting out index in the the subscription array at 1 since the camera.\n    // Always occupies position 0 (whether active or not).\n\n    var n = 1;\n\n    try {\n      for (var transceivers_1 = __values(transceivers), transceivers_1_1 = transceivers_1.next(); !transceivers_1_1.done; transceivers_1_1 = transceivers_1.next()) {\n        var transceiver = transceivers_1_1.value;\n\n        if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n          continue;\n        }\n\n        this.videoSubscriptions[n] = 0;\n\n        if (transceiver.direction !== 'inactive') {\n          // See if we want this existing transceiver\n          // by convention with the video host, msid is equal to the media section mid, prefixed with the string \"v_\"\n          // we use this to get the streamId for the track\n          var streamId = videoStreamIndex.streamIdForTrack('v_' + transceiver.mid);\n\n          if (streamId !== undefined) {\n            try {\n              for (var _e = (e_3 = void 0, __values(videosRemaining.entries())), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var _g = __read(_f.value, 2),\n                    index = _g[0],\n                    recvStreamId = _g[1];\n\n                if (videoStreamIndex.StreamIdsInSameGroup(streamId, recvStreamId)) {\n                  transceiver.direction = 'recvonly';\n                  this.videoSubscriptions[n] = recvStreamId;\n                  videosRemaining.splice(index, 1);\n                  break;\n                }\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n          }\n        }\n\n        n += 1;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (transceivers_1_1 && !transceivers_1_1.done && (_a = transceivers_1.return)) _a.call(transceivers_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    } // Next fill in open slots and remove unused\n\n\n    n = 1;\n\n    try {\n      for (var transceivers_2 = __values(transceivers), transceivers_2_1 = transceivers_2.next(); !transceivers_2_1.done; transceivers_2_1 = transceivers_2.next()) {\n        var transceiver = transceivers_2_1.value;\n\n        if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n          continue;\n        }\n\n        if (transceiver.direction === 'inactive' && videosRemaining.length > 0) {\n          // Fill available slot\n          transceiver.direction = 'recvonly';\n          var streamId = videosRemaining.shift();\n          this.videoSubscriptions[n] = streamId;\n        } else {\n          // Remove if no longer subscribed\n          if (this.videoSubscriptions[n] === 0) {\n            transceiver.direction = 'inactive';\n          }\n        }\n\n        n += 1;\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (transceivers_2_1 && !transceivers_2_1.done && (_c = transceivers_2.return)) _c.call(transceivers_2);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      // add transceivers for the remaining subscriptions\n      for (var videosRemaining_1 = __values(videosRemaining), videosRemaining_1_1 = videosRemaining_1.next(); !videosRemaining_1_1.done; videosRemaining_1_1 = videosRemaining_1.next()) {\n        var index = videosRemaining_1_1.value; // @ts-ignore\n\n        var transceiver = this.peer.addTransceiver('video', {\n          direction: 'recvonly',\n          streams: [this.defaultMediaStream]\n        });\n        this.videoSubscriptions.push(index);\n        this.logger.info(\"adding transceiver mid: \" + transceiver.mid + \" subscription: \" + index + \" direction: recvonly\");\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (videosRemaining_1_1 && !videosRemaining_1_1.done && (_d = videosRemaining_1.return)) _d.call(videosRemaining_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n  };\n\n  DefaultTransceiverController.prototype.transceiverIsVideo = function (transceiver) {\n    return transceiver.receiver && transceiver.receiver.track && transceiver.receiver.track.kind === 'video' || transceiver.sender && transceiver.sender.track && transceiver.sender.track.kind === 'video';\n  };\n\n  DefaultTransceiverController.prototype.debugDumpTransceivers = function () {\n    var e_6, _a;\n\n    var msg = '';\n    var n = 0;\n\n    try {\n      for (var _b = __values(this.peer.getTransceivers()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var transceiver = _c.value;\n\n        if (!this.transceiverIsVideo(transceiver)) {\n          continue;\n        }\n\n        msg += \"transceiver index=\" + n + \" mid=\" + transceiver.mid + \" subscription=\" + this.videoSubscriptions[n] + \" direction=\" + transceiver.direction + \"\\n\";\n        n += 1;\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    return msg;\n  };\n\n  DefaultTransceiverController.prototype.setTransceiverInput = function (transceiver, track) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!transceiver) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (track) {\n              transceiver.direction = 'sendrecv';\n            } else {\n              transceiver.direction = 'inactive';\n            }\n\n            return [4\n            /*yield*/\n            , transceiver.sender.replaceTrack(track)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return DefaultTransceiverController;\n}();\n\nexports.default = DefaultTransceiverController;","map":{"version":3,"sources":["../../src/transceivercontroller/DefaultTransceiverController.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultTransceiverController = /** @class */ (function () {\n    function DefaultTransceiverController(logger, browserBehavior) {\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this._localCameraTransceiver = null;\n        this._localAudioTransceiver = null;\n        this.videoSubscriptions = [];\n        this.defaultMediaStream = null;\n        this.peer = null;\n    }\n    DefaultTransceiverController.prototype.setEncodingParameters = function (_params) {\n        return;\n    };\n    DefaultTransceiverController.setVideoSendingBitrateKbpsForSender = function (sender, bitrateKbps, _logger) {\n        return __awaiter(this, void 0, void 0, function () {\n            var param, _a, _b, encodeParam;\n            var e_1, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!sender || bitrateKbps <= 0) {\n                            return [2 /*return*/];\n                        }\n                        param = sender.getParameters();\n                        if (!param.encodings) {\n                            param.encodings = [{}];\n                        }\n                        try {\n                            for (_a = __values(param.encodings), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                encodeParam = _b.value;\n                                encodeParam.maxBitrate = bitrateKbps * 1000;\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return [4 /*yield*/, sender.setParameters(param)];\n                    case 1:\n                        _d.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DefaultTransceiverController.replaceAudioTrackForSender = function (sender, track) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!sender) {\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, sender.replaceTrack(track)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    DefaultTransceiverController.prototype.localAudioTransceiver = function () {\n        return this._localAudioTransceiver;\n    };\n    DefaultTransceiverController.prototype.localVideoTransceiver = function () {\n        return this._localCameraTransceiver;\n    };\n    DefaultTransceiverController.prototype.setVideoSendingBitrateKbps = function (bitrateKbps) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sender;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // this won't set bandwidth limitation for video in Chrome\n                        if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                            return [2 /*return*/];\n                        }\n                        sender = this._localCameraTransceiver.sender;\n                        return [4 /*yield*/, DefaultTransceiverController.setVideoSendingBitrateKbpsForSender(sender, bitrateKbps, this.logger)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DefaultTransceiverController.prototype.setPeer = function (peer) {\n        this.peer = peer;\n    };\n    DefaultTransceiverController.prototype.reset = function () {\n        this._localCameraTransceiver = null;\n        this._localAudioTransceiver = null;\n        this.videoSubscriptions = [];\n        this.defaultMediaStream = null;\n        this.peer = null;\n    };\n    DefaultTransceiverController.prototype.useTransceivers = function () {\n        if (!this.peer || !this.browserBehavior.requiresUnifiedPlan()) {\n            return false;\n        }\n        return typeof this.peer.getTransceivers !== 'undefined';\n    };\n    DefaultTransceiverController.prototype.hasVideoInput = function () {\n        if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv')\n            return false;\n        return true;\n    };\n    DefaultTransceiverController.prototype.trackIsVideoInput = function (track) {\n        if (!this._localCameraTransceiver) {\n            return false;\n        }\n        return (track === this._localCameraTransceiver.sender.track ||\n            track === this._localCameraTransceiver.receiver.track);\n    };\n    DefaultTransceiverController.prototype.setupLocalTransceivers = function () {\n        if (!this.useTransceivers()) {\n            return;\n        }\n        if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n            this.defaultMediaStream = new MediaStream();\n        }\n        if (!this._localAudioTransceiver) {\n            this._localAudioTransceiver = this.peer.addTransceiver('audio', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n        if (!this._localCameraTransceiver) {\n            this._localCameraTransceiver = this.peer.addTransceiver('video', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n    };\n    DefaultTransceiverController.prototype.replaceAudioTrack = function (track) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._localAudioTransceiver || this._localAudioTransceiver.direction !== 'sendrecv') {\n                            this.logger.info(\"audio transceiver direction is not set up or not activated\");\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, this._localAudioTransceiver.sender.replaceTrack(track)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    DefaultTransceiverController.prototype.setAudioInput = function (track) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.setTransceiverInput(this._localAudioTransceiver, track)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DefaultTransceiverController.prototype.setVideoInput = function (track) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.setTransceiverInput(this._localCameraTransceiver, track)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DefaultTransceiverController.prototype.updateVideoTransceivers = function (videoStreamIndex, videosToReceive) {\n        var _this = this;\n        if (!this.useTransceivers()) {\n            return videosToReceive.array();\n        }\n        // See https://blog.mozilla.org/webrtc/rtcrtptransceiver-explored/ for details on transceivers\n        var transceivers = this.peer.getTransceivers();\n        // Subscription index 0 is reserved for transmitting camera.\n        // We mark inactive slots with 0 in the subscription array.\n        this.videoSubscriptions = [0];\n        videosToReceive = videosToReceive.clone();\n        this.updateTransceivers(transceivers, videoStreamIndex, videosToReceive);\n        this.logger.debug(function () {\n            return _this.debugDumpTransceivers();\n        });\n        return this.videoSubscriptions;\n    };\n    DefaultTransceiverController.prototype.updateTransceivers = function (transceivers, videoStreamIndex, videosToReceive) {\n        var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n        var videosRemaining = videosToReceive.array();\n        // Start by handling existing videos\n        // Begin counting out index in the the subscription array at 1 since the camera.\n        // Always occupies position 0 (whether active or not).\n        var n = 1;\n        try {\n            for (var transceivers_1 = __values(transceivers), transceivers_1_1 = transceivers_1.next(); !transceivers_1_1.done; transceivers_1_1 = transceivers_1.next()) {\n                var transceiver = transceivers_1_1.value;\n                if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n                    continue;\n                }\n                this.videoSubscriptions[n] = 0;\n                if (transceiver.direction !== 'inactive') {\n                    // See if we want this existing transceiver\n                    // by convention with the video host, msid is equal to the media section mid, prefixed with the string \"v_\"\n                    // we use this to get the streamId for the track\n                    var streamId = videoStreamIndex.streamIdForTrack('v_' + transceiver.mid);\n                    if (streamId !== undefined) {\n                        try {\n                            for (var _e = (e_3 = void 0, __values(videosRemaining.entries())), _f = _e.next(); !_f.done; _f = _e.next()) {\n                                var _g = __read(_f.value, 2), index = _g[0], recvStreamId = _g[1];\n                                if (videoStreamIndex.StreamIdsInSameGroup(streamId, recvStreamId)) {\n                                    transceiver.direction = 'recvonly';\n                                    this.videoSubscriptions[n] = recvStreamId;\n                                    videosRemaining.splice(index, 1);\n                                    break;\n                                }\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                    }\n                }\n                n += 1;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (transceivers_1_1 && !transceivers_1_1.done && (_a = transceivers_1.return)) _a.call(transceivers_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        // Next fill in open slots and remove unused\n        n = 1;\n        try {\n            for (var transceivers_2 = __values(transceivers), transceivers_2_1 = transceivers_2.next(); !transceivers_2_1.done; transceivers_2_1 = transceivers_2.next()) {\n                var transceiver = transceivers_2_1.value;\n                if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n                    continue;\n                }\n                if (transceiver.direction === 'inactive' && videosRemaining.length > 0) {\n                    // Fill available slot\n                    transceiver.direction = 'recvonly';\n                    var streamId = videosRemaining.shift();\n                    this.videoSubscriptions[n] = streamId;\n                }\n                else {\n                    // Remove if no longer subscribed\n                    if (this.videoSubscriptions[n] === 0) {\n                        transceiver.direction = 'inactive';\n                    }\n                }\n                n += 1;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (transceivers_2_1 && !transceivers_2_1.done && (_c = transceivers_2.return)) _c.call(transceivers_2);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        try {\n            // add transceivers for the remaining subscriptions\n            for (var videosRemaining_1 = __values(videosRemaining), videosRemaining_1_1 = videosRemaining_1.next(); !videosRemaining_1_1.done; videosRemaining_1_1 = videosRemaining_1.next()) {\n                var index = videosRemaining_1_1.value;\n                // @ts-ignore\n                var transceiver = this.peer.addTransceiver('video', {\n                    direction: 'recvonly',\n                    streams: [this.defaultMediaStream],\n                });\n                this.videoSubscriptions.push(index);\n                this.logger.info(\"adding transceiver mid: \" + transceiver.mid + \" subscription: \" + index + \" direction: recvonly\");\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (videosRemaining_1_1 && !videosRemaining_1_1.done && (_d = videosRemaining_1.return)) _d.call(videosRemaining_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n    };\n    DefaultTransceiverController.prototype.transceiverIsVideo = function (transceiver) {\n        return ((transceiver.receiver &&\n            transceiver.receiver.track &&\n            transceiver.receiver.track.kind === 'video') ||\n            (transceiver.sender && transceiver.sender.track && transceiver.sender.track.kind === 'video'));\n    };\n    DefaultTransceiverController.prototype.debugDumpTransceivers = function () {\n        var e_6, _a;\n        var msg = '';\n        var n = 0;\n        try {\n            for (var _b = __values(this.peer.getTransceivers()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var transceiver = _c.value;\n                if (!this.transceiverIsVideo(transceiver)) {\n                    continue;\n                }\n                msg += \"transceiver index=\" + n + \" mid=\" + transceiver.mid + \" subscription=\" + this.videoSubscriptions[n] + \" direction=\" + transceiver.direction + \"\\n\";\n                n += 1;\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n        return msg;\n    };\n    DefaultTransceiverController.prototype.setTransceiverInput = function (transceiver, track) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!transceiver) {\n                            return [2 /*return*/];\n                        }\n                        if (track) {\n                            transceiver.direction = 'sendrecv';\n                        }\n                        else {\n                            transceiver.direction = 'inactive';\n                        }\n                        return [4 /*yield*/, transceiver.sender.replaceTrack(track)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return DefaultTransceiverController;\n}());\nexports.default = DefaultTransceiverController;\n//# sourceMappingURL=DefaultTransceiverController.js.map"]},"metadata":{},"sourceType":"script"}