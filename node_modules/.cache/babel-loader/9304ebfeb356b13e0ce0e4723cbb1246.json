{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n\nvar DefaultAudioMixController =\n/** @class */\nfunction () {\n  function DefaultAudioMixController() {\n    this.audioDevice = null;\n    this.audioElement = null;\n    this.audioStream = null;\n    this.browserBehavior = new DefaultBrowserBehavior_1.default();\n  }\n\n  DefaultAudioMixController.prototype.bindAudioElement = function (element) {\n    if (element) {\n      this.audioElement = element;\n      this.audioElement.autoplay = true;\n      return this.bindAudioMix();\n    }\n\n    return false;\n  };\n\n  DefaultAudioMixController.prototype.unbindAudioElement = function () {\n    if (this.audioElement) {\n      this.audioElement.srcObject = null;\n      this.audioElement = null;\n    }\n  };\n\n  DefaultAudioMixController.prototype.bindAudioStream = function (stream) {\n    if (stream) {\n      this.audioStream = stream;\n      return this.bindAudioMix();\n    }\n\n    return false;\n  };\n\n  DefaultAudioMixController.prototype.bindAudioDevice = function (device) {\n    if (device) {\n      this.audioDevice = device;\n      return this.bindAudioMix();\n    }\n\n    return false;\n  };\n\n  DefaultAudioMixController.prototype.bindAudioMix = function () {\n    var _this = this;\n\n    if (this.audioElement) {\n      if (this.audioStream) {\n        this.audioElement.srcObject = this.audioStream;\n      } // @ts-ignore\n\n\n      if (typeof this.audioElement.sinkId !== 'undefined') {\n        var newSinkId = this.audioDevice ? this.audioDevice.deviceId : ''; // @ts-ignore\n\n        var oldSinkId = this.audioElement.sinkId;\n\n        if (newSinkId !== oldSinkId) {\n          if (this.browserBehavior.hasChromiumWebRTC()) {\n            var existingAudioElement_1 = this.audioElement;\n            var existingstream_1 = this.audioStream;\n            existingAudioElement_1.srcObject = null; // @ts-ignore\n\n            existingAudioElement_1.setSinkId(newSinkId).then(function () {\n              if (_this.audioElement === existingAudioElement_1) {\n                existingAudioElement_1.srcObject = existingstream_1;\n              }\n            });\n          } else {\n            // @ts-ignore\n            this.audioElement.setSinkId(newSinkId);\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return DefaultAudioMixController;\n}();\n\nexports.default = DefaultAudioMixController;","map":{"version":3,"sources":["../../src/audiomixcontroller/DefaultAudioMixController.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAGA,IAAA,wBAAA,GAAA,OAAA,CAAA,2CAAA,CAAA;;AAGA,IAAA,yBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,yBAAA,GAAA;AACU,SAAA,WAAA,GAAsC,IAAtC;AACA,SAAA,YAAA,GAAwC,IAAxC;AACA,SAAA,WAAA,GAAkC,IAAlC;AACA,SAAA,eAAA,GAAmC,IAAI,wBAAA,CAAA,OAAJ,EAAnC;AAiET;;AA/DC,EAAA,yBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,OAAjB,EAA0C;AACxC,QAAI,OAAJ,EAAa;AACX,WAAK,YAAL,GAAoB,OAApB;AACA,WAAK,YAAL,CAAkB,QAAlB,GAA6B,IAA7B;AACA,aAAO,KAAK,YAAL,EAAP;AACD;;AACD,WAAO,KAAP;AACD,GAPD;;AASA,EAAA,yBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,QAAI,KAAK,YAAT,EAAuB;AACrB,WAAK,YAAL,CAAkB,SAAlB,GAA8B,IAA9B;AACA,WAAK,YAAL,GAAoB,IAApB;AACD;AACF,GALD;;AAOA,EAAA,yBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,MAAhB,EAAmC;AACjC,QAAI,MAAJ,EAAY;AACV,WAAK,WAAL,GAAmB,MAAnB;AACA,aAAO,KAAK,YAAL,EAAP;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,EAAA,yBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,MAAhB,EAA8C;AAC5C,QAAI,MAAJ,EAAY;AACV,WAAK,WAAL,GAAmB,MAAnB;AACA,aAAO,KAAK,YAAL,EAAP;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQQ,EAAA,yBAAA,CAAA,SAAA,CAAA,YAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,KAAK,YAAT,EAAuB;AACrB,UAAI,KAAK,WAAT,EAAsB;AACpB,aAAK,YAAL,CAAkB,SAAlB,GAA8B,KAAK,WAAnC;AACD,OAHoB,CAIrB;;;AACA,UAAI,OAAO,KAAK,YAAL,CAAkB,MAAzB,KAAoC,WAAxC,EAAqD;AACnD,YAAM,SAAS,GAAG,KAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,QAApC,GAA+C,EAAjE,CADmD,CAEnD;;AACA,YAAM,SAAS,GAAW,KAAK,YAAL,CAAkB,MAA5C;;AACA,YAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,cAAI,KAAK,eAAL,CAAqB,iBAArB,EAAJ,EAA8C;AAC5C,gBAAM,sBAAoB,GAAG,KAAK,YAAlC;AACA,gBAAM,gBAAc,GAAG,KAAK,WAA5B;AACA,YAAA,sBAAoB,CAAC,SAArB,GAAiC,IAAjC,CAH4C,CAI5C;;AACA,YAAA,sBAAoB,CAAC,SAArB,CAA+B,SAA/B,EAA0C,IAA1C,CAA+C,YAAA;AAC7C,kBAAI,KAAI,CAAC,YAAL,KAAsB,sBAA1B,EAAgD;AAC9C,gBAAA,sBAAoB,CAAC,SAArB,GAAiC,gBAAjC;AACD;AACF,aAJD;AAKD,WAVD,MAUO;AACL;AACA,iBAAK,YAAL,CAAkB,SAAlB,CAA4B,SAA5B;AACD;AACF;;AACD,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD,GA9BO;;AA+BV,SAAA,yBAAA;AAAC,CArED,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nvar DefaultAudioMixController = /** @class */ (function () {\n    function DefaultAudioMixController() {\n        this.audioDevice = null;\n        this.audioElement = null;\n        this.audioStream = null;\n        this.browserBehavior = new DefaultBrowserBehavior_1.default();\n    }\n    DefaultAudioMixController.prototype.bindAudioElement = function (element) {\n        if (element) {\n            this.audioElement = element;\n            this.audioElement.autoplay = true;\n            return this.bindAudioMix();\n        }\n        return false;\n    };\n    DefaultAudioMixController.prototype.unbindAudioElement = function () {\n        if (this.audioElement) {\n            this.audioElement.srcObject = null;\n            this.audioElement = null;\n        }\n    };\n    DefaultAudioMixController.prototype.bindAudioStream = function (stream) {\n        if (stream) {\n            this.audioStream = stream;\n            return this.bindAudioMix();\n        }\n        return false;\n    };\n    DefaultAudioMixController.prototype.bindAudioDevice = function (device) {\n        if (device) {\n            this.audioDevice = device;\n            return this.bindAudioMix();\n        }\n        return false;\n    };\n    DefaultAudioMixController.prototype.bindAudioMix = function () {\n        var _this = this;\n        if (this.audioElement) {\n            if (this.audioStream) {\n                this.audioElement.srcObject = this.audioStream;\n            }\n            // @ts-ignore\n            if (typeof this.audioElement.sinkId !== 'undefined') {\n                var newSinkId = this.audioDevice ? this.audioDevice.deviceId : '';\n                // @ts-ignore\n                var oldSinkId = this.audioElement.sinkId;\n                if (newSinkId !== oldSinkId) {\n                    if (this.browserBehavior.hasChromiumWebRTC()) {\n                        var existingAudioElement_1 = this.audioElement;\n                        var existingstream_1 = this.audioStream;\n                        existingAudioElement_1.srcObject = null;\n                        // @ts-ignore\n                        existingAudioElement_1.setSinkId(newSinkId).then(function () {\n                            if (_this.audioElement === existingAudioElement_1) {\n                                existingAudioElement_1.srcObject = existingstream_1;\n                            }\n                        });\n                    }\n                    else {\n                        // @ts-ignore\n                        this.audioElement.setSinkId(newSinkId);\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    return DefaultAudioMixController;\n}());\nexports.default = DefaultAudioMixController;\n//# sourceMappingURL=DefaultAudioMixController.js.map"]},"metadata":{},"sourceType":"script"}