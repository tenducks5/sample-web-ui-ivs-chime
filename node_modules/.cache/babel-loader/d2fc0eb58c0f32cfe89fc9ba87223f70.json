{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\n\nvar ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\n\nvar DefaultClientMetricReport_1 = require(\"../clientmetricreport/DefaultClientMetricReport\");\n\nvar StreamMetricReport_1 = require(\"../clientmetricreport/StreamMetricReport\");\n\nvar Maybe_1 = require(\"../maybe/Maybe\");\n\nvar MeetingSessionLifecycleEvent_1 = require(\"../meetingsession/MeetingSessionLifecycleEvent\");\n\nvar MeetingSessionLifecycleEventCondition_1 = require(\"../meetingsession/MeetingSessionLifecycleEventCondition\");\n\nvar IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\n\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n\nvar AudioLogEvent_1 = require(\"./AudioLogEvent\");\n\nvar VideoLogEvent_1 = require(\"./VideoLogEvent\");\n\nvar DefaultStatsCollector =\n/** @class */\nfunction () {\n  function DefaultStatsCollector(audioVideoController, logger, browserBehavior, interval) {\n    if (interval === void 0) {\n      interval = DefaultStatsCollector.INTERVAL_MS;\n    }\n\n    this.audioVideoController = audioVideoController;\n    this.logger = logger;\n    this.browserBehavior = browserBehavior;\n    this.interval = interval;\n    this.intervalScheduler = null; // TODO: Implement metricsAddTime() and metricsLogEvent().\n\n    this.metricsAddTime = function (_name, _duration, _attributes) {};\n\n    this.metricsLogEvent = function (_name, _attributes) {};\n  } // TODO: Update toAttribute() and toSuffix() methods to convert raw data to a required type.\n\n\n  DefaultStatsCollector.prototype.toAttribute = function (str) {\n    return this.toSuffix(str).substring(1);\n  };\n\n  DefaultStatsCollector.prototype.toSuffix = function (str) {\n    if (str.toLowerCase() === str) {\n      // e.g. lower_case -> _lower_case\n      return \"_\" + str;\n    } else if (str.toUpperCase() === str) {\n      // e.g. UPPER_CASE -> _upper_case\n      return \"_\" + str.toLowerCase();\n    } else {\n      // e.g. CamelCaseWithCAPS -> _camel_case_with_caps\n      return str.replace(/([A-Z][a-z]+)/g, function ($1) {\n        return \"_\" + $1;\n      }).replace(/([A-Z][A-Z]+)/g, function ($1) {\n        return \"_\" + $1;\n      }).toLowerCase();\n    }\n  };\n\n  DefaultStatsCollector.prototype.logLatency = function (eventName, timeMs, attributes) {\n    var event = this.toSuffix(eventName);\n    this.logEventTime('meeting' + event, timeMs, attributes);\n  };\n\n  DefaultStatsCollector.prototype.logStateTimeout = function (stateName, attributes) {\n    var state = this.toSuffix(stateName);\n    this.logEvent('meeting_session_state_timeout', __assign(__assign({}, attributes), {\n      state: \"state\" + state\n    }));\n  };\n\n  DefaultStatsCollector.prototype.logAudioEvent = function (eventName, attributes) {\n    var event = 'audio' + this.toSuffix(AudioLogEvent_1.default[eventName]);\n    this.logEvent(event, attributes);\n  };\n\n  DefaultStatsCollector.prototype.logVideoEvent = function (eventName, attributes) {\n    var event = 'video' + this.toSuffix(VideoLogEvent_1.default[eventName]);\n    this.logEvent(event, attributes);\n  };\n\n  DefaultStatsCollector.prototype.logEventTime = function (eventName, timeMs, attributes) {\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var finalAttributes = __assign(__assign({}, attributes), {\n      call_id: this.audioVideoController.configuration.meetingId,\n      client_type: DefaultStatsCollector.CLIENT_TYPE,\n      metric_type: 'latency'\n    });\n\n    this.logger.debug(function () {\n      return \"[DefaultStatsCollector] \" + eventName + \": \" + JSON.stringify(finalAttributes);\n    });\n    this.metricsAddTime(eventName, timeMs, finalAttributes);\n  };\n\n  DefaultStatsCollector.prototype.logMeetingSessionStatus = function (status) {\n    // TODO: Generate the status event name given the status code.\n    var statusEventName = \"\" + status.statusCode();\n    this.logEvent(statusEventName);\n    var statusAttribute = {\n      status: statusEventName,\n      status_code: \"\" + status.statusCode()\n    };\n    this.logEvent('meeting_session_status', statusAttribute);\n\n    if (status.isTerminal()) {\n      this.logEvent('meeting_session_stopped', statusAttribute);\n    }\n\n    if (status.isAudioConnectionFailure()) {\n      this.logEvent('meeting_session_audio_failed', statusAttribute);\n    }\n\n    if (status.isFailure()) {\n      this.logEvent('meeting_session_failed', statusAttribute);\n    }\n  };\n\n  DefaultStatsCollector.prototype.logLifecycleEvent = function (lifecycleEvent, condition) {\n    var attributes = {\n      lifecycle_event: \"lifecycle\" + this.toSuffix(MeetingSessionLifecycleEvent_1.default[lifecycleEvent]),\n      lifecycle_event_code: \"\" + lifecycleEvent,\n      lifecycle_event_condition: \"condition\" + this.toSuffix(MeetingSessionLifecycleEventCondition_1.default[condition]),\n      lifecycle_event_condition_code: \"\" + condition\n    };\n    this.logEvent('meeting_session_lifecycle', attributes);\n  };\n\n  DefaultStatsCollector.prototype.logEvent = function (eventName, attributes) {\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var finalAttributes = __assign(__assign({}, attributes), {\n      call_id: this.audioVideoController.configuration.meetingId,\n      client_type: DefaultStatsCollector.CLIENT_TYPE\n    });\n\n    this.logger.debug(function () {\n      return \"[DefaultStatsCollector] \" + eventName + \": \" + JSON.stringify(finalAttributes);\n    });\n    this.metricsLogEvent(eventName, finalAttributes);\n  };\n  /**\n   * WEBRTC METRICS COLLECTION.\n   */\n\n\n  DefaultStatsCollector.prototype.start = function (signalingClient, videoStreamIndex, clientMetricReport) {\n    var _this = this;\n\n    if (this.intervalScheduler) {\n      return false;\n    }\n\n    this.logger.info('Starting DefaultStatsCollector');\n    this.signalingClient = signalingClient;\n    this.videoStreamIndex = videoStreamIndex;\n\n    if (clientMetricReport) {\n      this.clientMetricReport = clientMetricReport;\n    } else {\n      this.clientMetricReport = new DefaultClientMetricReport_1.default(this.logger);\n    }\n\n    this.intervalScheduler = new IntervalScheduler_1.default(this.interval);\n    this.intervalScheduler.start(function () {\n      _this.getStatsWrapper();\n    });\n    return true;\n  };\n\n  DefaultStatsCollector.prototype.stop = function () {\n    this.logger.info('Stopping DefaultStatsCollector');\n\n    if (this.intervalScheduler) {\n      this.intervalScheduler.stop();\n    }\n\n    this.intervalScheduler = null;\n  };\n  /**\n   * Convert raw metrics to client metric report.\n   */\n\n\n  DefaultStatsCollector.prototype.updateMetricValues = function (rawMetricReport, isStream) {\n    var metricReport = isStream ? this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)] : this.clientMetricReport.globalMetricReport;\n    var metricMap;\n\n    if (isStream) {\n      metricMap = this.clientMetricReport.getMetricMap(metricReport.mediaType, metricReport.direction);\n    } else {\n      metricMap = this.clientMetricReport.getMetricMap();\n    }\n\n    for (var rawMetric in rawMetricReport) {\n      if (rawMetric in metricMap) {\n        metricReport.previousMetrics[rawMetric] = metricReport.currentMetrics[rawMetric];\n        metricReport.currentMetrics[rawMetric] = rawMetricReport[rawMetric];\n      }\n    }\n  };\n\n  DefaultStatsCollector.prototype.processRawMetricReports = function (rawMetricReports) {\n    var e_1, _a;\n\n    this.clientMetricReport.currentSsrcs = {};\n    var timeStamp = Date.now();\n\n    try {\n      for (var rawMetricReports_1 = __values(rawMetricReports), rawMetricReports_1_1 = rawMetricReports_1.next(); !rawMetricReports_1_1.done; rawMetricReports_1_1 = rawMetricReports_1.next()) {\n        var rawMetricReport = rawMetricReports_1_1.value;\n        var isStream = this.isStreamRawMetricReport(rawMetricReport.type);\n\n        if (isStream) {\n          if (!this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)]) {\n            var streamMetricReport = new StreamMetricReport_1.default();\n            streamMetricReport.mediaType = this.getMediaType(rawMetricReport);\n            streamMetricReport.direction = this.getDirectionType(rawMetricReport);\n\n            if (!this.videoStreamIndex.allStreams().empty()) {\n              streamMetricReport.streamId = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc));\n            }\n\n            this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)] = streamMetricReport;\n          }\n\n          this.clientMetricReport.currentSsrcs[Number(rawMetricReport.ssrc)] = 1;\n        }\n\n        this.updateMetricValues(rawMetricReport, isStream);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (rawMetricReports_1_1 && !rawMetricReports_1_1.done && (_a = rawMetricReports_1.return)) _a.call(rawMetricReports_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this.clientMetricReport.removeDestroyedSsrcs();\n    this.clientMetricReport.previousTimestampMs = this.clientMetricReport.currentTimestampMs;\n    this.clientMetricReport.currentTimestampMs = timeStamp;\n    this.clientMetricReport.print();\n  };\n  /**\n   * Protobuf packaging.\n   */\n\n\n  DefaultStatsCollector.prototype.addMetricFrame = function (metricName, clientMetricFrame, metricSpec, ssrc) {\n    var type = metricSpec.type;\n    var transform = metricSpec.transform;\n    var sourceMetric = metricSpec.source;\n    var streamMetricFramesLength = clientMetricFrame.streamMetricFrames.length;\n    var latestStreamMetricFrame = clientMetricFrame.streamMetricFrames[streamMetricFramesLength - 1];\n\n    if (type) {\n      var metricFrame = SignalingProtocol_js_1.SdkMetric.create();\n      metricFrame.type = type;\n      metricFrame.value = sourceMetric ? transform(sourceMetric, ssrc) : transform(metricName, ssrc);\n      ssrc ? latestStreamMetricFrame.metrics.push(metricFrame) : clientMetricFrame.globalMetrics.push(metricFrame);\n    }\n  };\n\n  DefaultStatsCollector.prototype.addGlobalMetricsToProtobuf = function (clientMetricFrame) {\n    var metricMap = this.clientMetricReport.getMetricMap();\n\n    for (var metricName in this.clientMetricReport.globalMetricReport.currentMetrics) {\n      this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName]);\n    }\n  };\n\n  DefaultStatsCollector.prototype.addStreamMetricsToProtobuf = function (clientMetricFrame) {\n    for (var ssrc in this.clientMetricReport.streamMetricReports) {\n      var streamMetricReport = this.clientMetricReport.streamMetricReports[ssrc];\n      var streamMetricFrame = SignalingProtocol_js_1.SdkStreamMetricFrame.create();\n      streamMetricFrame.streamId = streamMetricReport.streamId;\n      streamMetricFrame.metrics = [];\n      clientMetricFrame.streamMetricFrames.push(streamMetricFrame);\n      var metricMap = this.clientMetricReport.getMetricMap(streamMetricReport.mediaType, streamMetricReport.direction);\n\n      for (var metricName in streamMetricReport.currentMetrics) {\n        this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName], Number(ssrc));\n      }\n    }\n  };\n\n  DefaultStatsCollector.prototype.makeClientMetricProtobuf = function () {\n    var clientMetricFrame = SignalingProtocol_js_1.SdkClientMetricFrame.create();\n    clientMetricFrame.globalMetrics = [];\n    clientMetricFrame.streamMetricFrames = [];\n    this.addGlobalMetricsToProtobuf(clientMetricFrame);\n    this.addStreamMetricsToProtobuf(clientMetricFrame);\n    return clientMetricFrame;\n  };\n\n  DefaultStatsCollector.prototype.sendClientMetricProtobuf = function (clientMetricFrame) {\n    this.signalingClient.sendClientMetrics(clientMetricFrame);\n  };\n  /**\n   * Helper functions.\n   */\n\n\n  DefaultStatsCollector.prototype.isStreamRawMetricReport = function (type) {\n    return type === 'ssrc' || type === 'inbound-rtp' || type === 'outbound-rtp';\n  };\n\n  DefaultStatsCollector.prototype.getMediaType = function (rawMetricReport) {\n    return rawMetricReport.mediaType === 'audio' ? ClientMetricReportMediaType_1.default.AUDIO : ClientMetricReportMediaType_1.default.VIDEO;\n  };\n\n  DefaultStatsCollector.prototype.getDirectionType = function (rawMetricReport) {\n    return rawMetricReport.id.toLowerCase().indexOf('send') !== -1 || rawMetricReport.id.toLowerCase().indexOf('outbound') !== -1 ? ClientMetricReportDirection_1.default.UPSTREAM : ClientMetricReportDirection_1.default.DOWNSTREAM;\n  };\n  /**\n   * Metric report filter.\n   */\n\n\n  DefaultStatsCollector.prototype.isValidChromeRawMetric = function (rawMetricReport) {\n    return this.browserBehavior.hasChromiumWebRTC() && (rawMetricReport.type === 'ssrc' || rawMetricReport.type === 'VideoBwe' || rawMetricReport.type === 'googCandidatePair' && rawMetricReport.googWritable === 'true' && rawMetricReport.googReadable === 'true');\n  };\n\n  DefaultStatsCollector.prototype.isValidStandardRawMetric = function (rawMetricReport) {\n    var valid = rawMetricReport.type === 'inbound-rtp' || rawMetricReport.type === 'outbound-rtp' || rawMetricReport.type === 'candidate-pair' && rawMetricReport.state === 'succeeded';\n\n    if (this.browserBehavior.hasFirefoxWebRTC()) {\n      if (this.compareMajorVersion(DefaultStatsCollector.FIREFOX_UPDATED_GET_STATS_VERSION) === -1) {\n        return valid;\n      } else {\n        return valid && rawMetricReport.isRemote === false;\n      }\n    }\n\n    return valid;\n  };\n\n  DefaultStatsCollector.prototype.isValidSsrc = function (rawMetricReport) {\n    var validSsrc = true;\n\n    if (this.isStreamRawMetricReport(rawMetricReport.type) && this.getDirectionType(rawMetricReport) === ClientMetricReportDirection_1.default.DOWNSTREAM && this.getMediaType(rawMetricReport) === ClientMetricReportMediaType_1.default.VIDEO) {\n      validSsrc = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc)) > 0;\n    }\n\n    return validSsrc;\n  };\n\n  DefaultStatsCollector.prototype.isValidRawMetricReport = function (rawMetricReport) {\n    return (this.isValidChromeRawMetric(rawMetricReport) || this.isValidStandardRawMetric(rawMetricReport)) && this.isValidSsrc(rawMetricReport);\n  };\n\n  DefaultStatsCollector.prototype.filterRawMetricReports = function (rawMetricReports) {\n    var e_2, _a;\n\n    var filteredRawMetricReports = [];\n\n    try {\n      for (var rawMetricReports_2 = __values(rawMetricReports), rawMetricReports_2_1 = rawMetricReports_2.next(); !rawMetricReports_2_1.done; rawMetricReports_2_1 = rawMetricReports_2.next()) {\n        var rawMetricReport = rawMetricReports_2_1.value;\n\n        if (this.isValidRawMetricReport(rawMetricReport)) {\n          filteredRawMetricReports.push(rawMetricReport);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (rawMetricReports_2_1 && !rawMetricReports_2_1.done && (_a = rawMetricReports_2.return)) _a.call(rawMetricReports_2);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return filteredRawMetricReports;\n  };\n\n  DefaultStatsCollector.prototype.handleRawMetricReports = function (rawMetricReports) {\n    var _this = this;\n\n    var filteredRawMetricReports = this.filterRawMetricReports(rawMetricReports);\n    this.logger.debug(function () {\n      return \"Filtered raw metrics : \" + JSON.stringify(filteredRawMetricReports);\n    });\n    this.processRawMetricReports(filteredRawMetricReports);\n    var clientMetricFrame = this.makeClientMetricProtobuf();\n    this.sendClientMetricProtobuf(clientMetricFrame);\n    this.audioVideoController.forEachObserver(function (observer) {\n      Maybe_1.default.of(observer.metricsDidReceive).map(function (f) {\n        return f.bind(observer)(_this.clientMetricReport.clone());\n      });\n    });\n  };\n  /**\n   * Get raw webrtc metrics.\n   */\n\n\n  DefaultStatsCollector.prototype.getStatsWrapper = function () {\n    var _this = this;\n\n    if (!this.audioVideoController.rtcPeerConnection) {\n      return;\n    }\n\n    var rawMetricReports = [];\n\n    if (!this.browserBehavior.requiresPromiseBasedWebRTCGetStats()) {\n      // @ts-ignore\n      this.audioVideoController.rtcPeerConnection.getStats( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function (res) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        res.result().forEach(function (report) {\n          var item = {};\n          report.names().forEach(function (name) {\n            item[name] = report.stat(name);\n          });\n          item.id = report.id;\n          item.type = report.type;\n          item.timestamp = report.timestamp;\n          rawMetricReports.push(item);\n        });\n\n        _this.handleRawMetricReports(rawMetricReports);\n      }, // @ts-ignore\n      function (error) {\n        _this.logger.error(error.message);\n      });\n    } else {\n      // @ts-ignore\n      this.audioVideoController.rtcPeerConnection.getStats().then(function (report) {\n        report.forEach(function (item) {\n          rawMetricReports.push(item);\n        });\n\n        _this.handleRawMetricReports(rawMetricReports);\n      }).catch(function (error) {\n        _this.logger.error(error.message);\n      });\n    }\n  };\n\n  DefaultStatsCollector.prototype.compareMajorVersion = function (version) {\n    var currentMajorVersion = parseInt(this.browserBehavior.version().split('.')[0]);\n    var expectedMajorVersion = parseInt(version.split('.')[0]);\n\n    if (expectedMajorVersion === currentMajorVersion) {\n      return 0;\n    }\n\n    if (expectedMajorVersion > currentMajorVersion) {\n      return 1;\n    }\n\n    return -1;\n  };\n\n  DefaultStatsCollector.INTERVAL_MS = 1000;\n  DefaultStatsCollector.FIREFOX_UPDATED_GET_STATS_VERSION = '66.0.0';\n  DefaultStatsCollector.CLIENT_TYPE = 'amazon-chime-sdk-js';\n  return DefaultStatsCollector;\n}();\n\nexports.default = DefaultStatsCollector;","map":{"version":3,"sources":["../../src/statscollector/DefaultStatsCollector.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nvar ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\nvar DefaultClientMetricReport_1 = require(\"../clientmetricreport/DefaultClientMetricReport\");\nvar StreamMetricReport_1 = require(\"../clientmetricreport/StreamMetricReport\");\nvar Maybe_1 = require(\"../maybe/Maybe\");\nvar MeetingSessionLifecycleEvent_1 = require(\"../meetingsession/MeetingSessionLifecycleEvent\");\nvar MeetingSessionLifecycleEventCondition_1 = require(\"../meetingsession/MeetingSessionLifecycleEventCondition\");\nvar IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nvar SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nvar AudioLogEvent_1 = require(\"./AudioLogEvent\");\nvar VideoLogEvent_1 = require(\"./VideoLogEvent\");\nvar DefaultStatsCollector = /** @class */ (function () {\n    function DefaultStatsCollector(audioVideoController, logger, browserBehavior, interval) {\n        if (interval === void 0) { interval = DefaultStatsCollector.INTERVAL_MS; }\n        this.audioVideoController = audioVideoController;\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this.interval = interval;\n        this.intervalScheduler = null;\n        // TODO: Implement metricsAddTime() and metricsLogEvent().\n        this.metricsAddTime = function (_name, _duration, _attributes) { };\n        this.metricsLogEvent = function (_name, _attributes) { };\n    }\n    // TODO: Update toAttribute() and toSuffix() methods to convert raw data to a required type.\n    DefaultStatsCollector.prototype.toAttribute = function (str) {\n        return this.toSuffix(str).substring(1);\n    };\n    DefaultStatsCollector.prototype.toSuffix = function (str) {\n        if (str.toLowerCase() === str) {\n            // e.g. lower_case -> _lower_case\n            return \"_\" + str;\n        }\n        else if (str.toUpperCase() === str) {\n            // e.g. UPPER_CASE -> _upper_case\n            return \"_\" + str.toLowerCase();\n        }\n        else {\n            // e.g. CamelCaseWithCAPS -> _camel_case_with_caps\n            return str\n                .replace(/([A-Z][a-z]+)/g, function ($1) {\n                return \"_\" + $1;\n            })\n                .replace(/([A-Z][A-Z]+)/g, function ($1) {\n                return \"_\" + $1;\n            })\n                .toLowerCase();\n        }\n    };\n    DefaultStatsCollector.prototype.logLatency = function (eventName, timeMs, attributes) {\n        var event = this.toSuffix(eventName);\n        this.logEventTime('meeting' + event, timeMs, attributes);\n    };\n    DefaultStatsCollector.prototype.logStateTimeout = function (stateName, attributes) {\n        var state = this.toSuffix(stateName);\n        this.logEvent('meeting_session_state_timeout', __assign(__assign({}, attributes), { state: \"state\" + state }));\n    };\n    DefaultStatsCollector.prototype.logAudioEvent = function (eventName, attributes) {\n        var event = 'audio' + this.toSuffix(AudioLogEvent_1.default[eventName]);\n        this.logEvent(event, attributes);\n    };\n    DefaultStatsCollector.prototype.logVideoEvent = function (eventName, attributes) {\n        var event = 'video' + this.toSuffix(VideoLogEvent_1.default[eventName]);\n        this.logEvent(event, attributes);\n    };\n    DefaultStatsCollector.prototype.logEventTime = function (eventName, timeMs, attributes) {\n        if (attributes === void 0) { attributes = {}; }\n        var finalAttributes = __assign(__assign({}, attributes), { call_id: this.audioVideoController.configuration.meetingId, client_type: DefaultStatsCollector.CLIENT_TYPE, metric_type: 'latency' });\n        this.logger.debug(function () {\n            return \"[DefaultStatsCollector] \" + eventName + \": \" + JSON.stringify(finalAttributes);\n        });\n        this.metricsAddTime(eventName, timeMs, finalAttributes);\n    };\n    DefaultStatsCollector.prototype.logMeetingSessionStatus = function (status) {\n        // TODO: Generate the status event name given the status code.\n        var statusEventName = \"\" + status.statusCode();\n        this.logEvent(statusEventName);\n        var statusAttribute = {\n            status: statusEventName,\n            status_code: \"\" + status.statusCode(),\n        };\n        this.logEvent('meeting_session_status', statusAttribute);\n        if (status.isTerminal()) {\n            this.logEvent('meeting_session_stopped', statusAttribute);\n        }\n        if (status.isAudioConnectionFailure()) {\n            this.logEvent('meeting_session_audio_failed', statusAttribute);\n        }\n        if (status.isFailure()) {\n            this.logEvent('meeting_session_failed', statusAttribute);\n        }\n    };\n    DefaultStatsCollector.prototype.logLifecycleEvent = function (lifecycleEvent, condition) {\n        var attributes = {\n            lifecycle_event: \"lifecycle\" + this.toSuffix(MeetingSessionLifecycleEvent_1.default[lifecycleEvent]),\n            lifecycle_event_code: \"\" + lifecycleEvent,\n            lifecycle_event_condition: \"condition\" + this.toSuffix(MeetingSessionLifecycleEventCondition_1.default[condition]),\n            lifecycle_event_condition_code: \"\" + condition,\n        };\n        this.logEvent('meeting_session_lifecycle', attributes);\n    };\n    DefaultStatsCollector.prototype.logEvent = function (eventName, attributes) {\n        if (attributes === void 0) { attributes = {}; }\n        var finalAttributes = __assign(__assign({}, attributes), { call_id: this.audioVideoController.configuration.meetingId, client_type: DefaultStatsCollector.CLIENT_TYPE });\n        this.logger.debug(function () {\n            return \"[DefaultStatsCollector] \" + eventName + \": \" + JSON.stringify(finalAttributes);\n        });\n        this.metricsLogEvent(eventName, finalAttributes);\n    };\n    /**\n     * WEBRTC METRICS COLLECTION.\n     */\n    DefaultStatsCollector.prototype.start = function (signalingClient, videoStreamIndex, clientMetricReport) {\n        var _this = this;\n        if (this.intervalScheduler) {\n            return false;\n        }\n        this.logger.info('Starting DefaultStatsCollector');\n        this.signalingClient = signalingClient;\n        this.videoStreamIndex = videoStreamIndex;\n        if (clientMetricReport) {\n            this.clientMetricReport = clientMetricReport;\n        }\n        else {\n            this.clientMetricReport = new DefaultClientMetricReport_1.default(this.logger);\n        }\n        this.intervalScheduler = new IntervalScheduler_1.default(this.interval);\n        this.intervalScheduler.start(function () {\n            _this.getStatsWrapper();\n        });\n        return true;\n    };\n    DefaultStatsCollector.prototype.stop = function () {\n        this.logger.info('Stopping DefaultStatsCollector');\n        if (this.intervalScheduler) {\n            this.intervalScheduler.stop();\n        }\n        this.intervalScheduler = null;\n    };\n    /**\n     * Convert raw metrics to client metric report.\n     */\n    DefaultStatsCollector.prototype.updateMetricValues = function (rawMetricReport, isStream) {\n        var metricReport = isStream\n            ? this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)]\n            : this.clientMetricReport.globalMetricReport;\n        var metricMap;\n        if (isStream) {\n            metricMap = this.clientMetricReport.getMetricMap(metricReport.mediaType, metricReport.direction);\n        }\n        else {\n            metricMap = this.clientMetricReport.getMetricMap();\n        }\n        for (var rawMetric in rawMetricReport) {\n            if (rawMetric in metricMap) {\n                metricReport.previousMetrics[rawMetric] = metricReport.currentMetrics[rawMetric];\n                metricReport.currentMetrics[rawMetric] = rawMetricReport[rawMetric];\n            }\n        }\n    };\n    DefaultStatsCollector.prototype.processRawMetricReports = function (rawMetricReports) {\n        var e_1, _a;\n        this.clientMetricReport.currentSsrcs = {};\n        var timeStamp = Date.now();\n        try {\n            for (var rawMetricReports_1 = __values(rawMetricReports), rawMetricReports_1_1 = rawMetricReports_1.next(); !rawMetricReports_1_1.done; rawMetricReports_1_1 = rawMetricReports_1.next()) {\n                var rawMetricReport = rawMetricReports_1_1.value;\n                var isStream = this.isStreamRawMetricReport(rawMetricReport.type);\n                if (isStream) {\n                    if (!this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)]) {\n                        var streamMetricReport = new StreamMetricReport_1.default();\n                        streamMetricReport.mediaType = this.getMediaType(rawMetricReport);\n                        streamMetricReport.direction = this.getDirectionType(rawMetricReport);\n                        if (!this.videoStreamIndex.allStreams().empty()) {\n                            streamMetricReport.streamId = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc));\n                        }\n                        this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)] = streamMetricReport;\n                    }\n                    this.clientMetricReport.currentSsrcs[Number(rawMetricReport.ssrc)] = 1;\n                }\n                this.updateMetricValues(rawMetricReport, isStream);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (rawMetricReports_1_1 && !rawMetricReports_1_1.done && (_a = rawMetricReports_1.return)) _a.call(rawMetricReports_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.clientMetricReport.removeDestroyedSsrcs();\n        this.clientMetricReport.previousTimestampMs = this.clientMetricReport.currentTimestampMs;\n        this.clientMetricReport.currentTimestampMs = timeStamp;\n        this.clientMetricReport.print();\n    };\n    /**\n     * Protobuf packaging.\n     */\n    DefaultStatsCollector.prototype.addMetricFrame = function (metricName, clientMetricFrame, metricSpec, ssrc) {\n        var type = metricSpec.type;\n        var transform = metricSpec.transform;\n        var sourceMetric = metricSpec.source;\n        var streamMetricFramesLength = clientMetricFrame.streamMetricFrames.length;\n        var latestStreamMetricFrame = clientMetricFrame.streamMetricFrames[streamMetricFramesLength - 1];\n        if (type) {\n            var metricFrame = SignalingProtocol_js_1.SdkMetric.create();\n            metricFrame.type = type;\n            metricFrame.value = sourceMetric\n                ? transform(sourceMetric, ssrc)\n                : transform(metricName, ssrc);\n            ssrc\n                ? latestStreamMetricFrame.metrics.push(metricFrame)\n                : clientMetricFrame.globalMetrics.push(metricFrame);\n        }\n    };\n    DefaultStatsCollector.prototype.addGlobalMetricsToProtobuf = function (clientMetricFrame) {\n        var metricMap = this.clientMetricReport.getMetricMap();\n        for (var metricName in this.clientMetricReport.globalMetricReport.currentMetrics) {\n            this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName]);\n        }\n    };\n    DefaultStatsCollector.prototype.addStreamMetricsToProtobuf = function (clientMetricFrame) {\n        for (var ssrc in this.clientMetricReport.streamMetricReports) {\n            var streamMetricReport = this.clientMetricReport.streamMetricReports[ssrc];\n            var streamMetricFrame = SignalingProtocol_js_1.SdkStreamMetricFrame.create();\n            streamMetricFrame.streamId = streamMetricReport.streamId;\n            streamMetricFrame.metrics = [];\n            clientMetricFrame.streamMetricFrames.push(streamMetricFrame);\n            var metricMap = this.clientMetricReport.getMetricMap(streamMetricReport.mediaType, streamMetricReport.direction);\n            for (var metricName in streamMetricReport.currentMetrics) {\n                this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName], Number(ssrc));\n            }\n        }\n    };\n    DefaultStatsCollector.prototype.makeClientMetricProtobuf = function () {\n        var clientMetricFrame = SignalingProtocol_js_1.SdkClientMetricFrame.create();\n        clientMetricFrame.globalMetrics = [];\n        clientMetricFrame.streamMetricFrames = [];\n        this.addGlobalMetricsToProtobuf(clientMetricFrame);\n        this.addStreamMetricsToProtobuf(clientMetricFrame);\n        return clientMetricFrame;\n    };\n    DefaultStatsCollector.prototype.sendClientMetricProtobuf = function (clientMetricFrame) {\n        this.signalingClient.sendClientMetrics(clientMetricFrame);\n    };\n    /**\n     * Helper functions.\n     */\n    DefaultStatsCollector.prototype.isStreamRawMetricReport = function (type) {\n        return type === 'ssrc' || type === 'inbound-rtp' || type === 'outbound-rtp';\n    };\n    DefaultStatsCollector.prototype.getMediaType = function (rawMetricReport) {\n        return rawMetricReport.mediaType === 'audio' ? ClientMetricReportMediaType_1.default.AUDIO : ClientMetricReportMediaType_1.default.VIDEO;\n    };\n    DefaultStatsCollector.prototype.getDirectionType = function (rawMetricReport) {\n        return rawMetricReport.id.toLowerCase().indexOf('send') !== -1 ||\n            rawMetricReport.id.toLowerCase().indexOf('outbound') !== -1\n            ? ClientMetricReportDirection_1.default.UPSTREAM\n            : ClientMetricReportDirection_1.default.DOWNSTREAM;\n    };\n    /**\n     * Metric report filter.\n     */\n    DefaultStatsCollector.prototype.isValidChromeRawMetric = function (rawMetricReport) {\n        return (this.browserBehavior.hasChromiumWebRTC() &&\n            (rawMetricReport.type === 'ssrc' ||\n                rawMetricReport.type === 'VideoBwe' ||\n                (rawMetricReport.type === 'googCandidatePair' &&\n                    rawMetricReport.googWritable === 'true' &&\n                    rawMetricReport.googReadable === 'true')));\n    };\n    DefaultStatsCollector.prototype.isValidStandardRawMetric = function (rawMetricReport) {\n        var valid = rawMetricReport.type === 'inbound-rtp' ||\n            rawMetricReport.type === 'outbound-rtp' ||\n            (rawMetricReport.type === 'candidate-pair' && rawMetricReport.state === 'succeeded');\n        if (this.browserBehavior.hasFirefoxWebRTC()) {\n            if (this.compareMajorVersion(DefaultStatsCollector.FIREFOX_UPDATED_GET_STATS_VERSION) === -1) {\n                return valid;\n            }\n            else {\n                return valid && rawMetricReport.isRemote === false;\n            }\n        }\n        return valid;\n    };\n    DefaultStatsCollector.prototype.isValidSsrc = function (rawMetricReport) {\n        var validSsrc = true;\n        if (this.isStreamRawMetricReport(rawMetricReport.type) &&\n            this.getDirectionType(rawMetricReport) === ClientMetricReportDirection_1.default.DOWNSTREAM &&\n            this.getMediaType(rawMetricReport) === ClientMetricReportMediaType_1.default.VIDEO) {\n            validSsrc = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc)) > 0;\n        }\n        return validSsrc;\n    };\n    DefaultStatsCollector.prototype.isValidRawMetricReport = function (rawMetricReport) {\n        return ((this.isValidChromeRawMetric(rawMetricReport) ||\n            this.isValidStandardRawMetric(rawMetricReport)) &&\n            this.isValidSsrc(rawMetricReport));\n    };\n    DefaultStatsCollector.prototype.filterRawMetricReports = function (rawMetricReports) {\n        var e_2, _a;\n        var filteredRawMetricReports = [];\n        try {\n            for (var rawMetricReports_2 = __values(rawMetricReports), rawMetricReports_2_1 = rawMetricReports_2.next(); !rawMetricReports_2_1.done; rawMetricReports_2_1 = rawMetricReports_2.next()) {\n                var rawMetricReport = rawMetricReports_2_1.value;\n                if (this.isValidRawMetricReport(rawMetricReport)) {\n                    filteredRawMetricReports.push(rawMetricReport);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (rawMetricReports_2_1 && !rawMetricReports_2_1.done && (_a = rawMetricReports_2.return)) _a.call(rawMetricReports_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return filteredRawMetricReports;\n    };\n    DefaultStatsCollector.prototype.handleRawMetricReports = function (rawMetricReports) {\n        var _this = this;\n        var filteredRawMetricReports = this.filterRawMetricReports(rawMetricReports);\n        this.logger.debug(function () {\n            return \"Filtered raw metrics : \" + JSON.stringify(filteredRawMetricReports);\n        });\n        this.processRawMetricReports(filteredRawMetricReports);\n        var clientMetricFrame = this.makeClientMetricProtobuf();\n        this.sendClientMetricProtobuf(clientMetricFrame);\n        this.audioVideoController.forEachObserver(function (observer) {\n            Maybe_1.default.of(observer.metricsDidReceive).map(function (f) {\n                return f.bind(observer)(_this.clientMetricReport.clone());\n            });\n        });\n    };\n    /**\n     * Get raw webrtc metrics.\n     */\n    DefaultStatsCollector.prototype.getStatsWrapper = function () {\n        var _this = this;\n        if (!this.audioVideoController.rtcPeerConnection) {\n            return;\n        }\n        var rawMetricReports = [];\n        if (!this.browserBehavior.requiresPromiseBasedWebRTCGetStats()) {\n            // @ts-ignore\n            this.audioVideoController.rtcPeerConnection.getStats(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            function (res) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                res.result().forEach(function (report) {\n                    var item = {};\n                    report.names().forEach(function (name) {\n                        item[name] = report.stat(name);\n                    });\n                    item.id = report.id;\n                    item.type = report.type;\n                    item.timestamp = report.timestamp;\n                    rawMetricReports.push(item);\n                });\n                _this.handleRawMetricReports(rawMetricReports);\n            }, \n            // @ts-ignore\n            function (error) {\n                _this.logger.error(error.message);\n            });\n        }\n        else {\n            // @ts-ignore\n            this.audioVideoController.rtcPeerConnection\n                .getStats()\n                .then(function (report) {\n                report.forEach(function (item) {\n                    rawMetricReports.push(item);\n                });\n                _this.handleRawMetricReports(rawMetricReports);\n            })\n                .catch(function (error) {\n                _this.logger.error(error.message);\n            });\n        }\n    };\n    DefaultStatsCollector.prototype.compareMajorVersion = function (version) {\n        var currentMajorVersion = parseInt(this.browserBehavior.version().split('.')[0]);\n        var expectedMajorVersion = parseInt(version.split('.')[0]);\n        if (expectedMajorVersion === currentMajorVersion) {\n            return 0;\n        }\n        if (expectedMajorVersion > currentMajorVersion) {\n            return 1;\n        }\n        return -1;\n    };\n    DefaultStatsCollector.INTERVAL_MS = 1000;\n    DefaultStatsCollector.FIREFOX_UPDATED_GET_STATS_VERSION = '66.0.0';\n    DefaultStatsCollector.CLIENT_TYPE = 'amazon-chime-sdk-js';\n    return DefaultStatsCollector;\n}());\nexports.default = DefaultStatsCollector;\n//# sourceMappingURL=DefaultStatsCollector.js.map"]},"metadata":{},"sourceType":"script"}