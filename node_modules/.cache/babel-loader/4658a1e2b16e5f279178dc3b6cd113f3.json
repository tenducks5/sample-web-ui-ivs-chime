{"ast":null,"code":"\"use strict\"; // Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ScreenSharingMessageType_1 = require(\"../screensharingmessage/ScreenSharingMessageType\");\n\nvar ScreenSharingMessageSerializer =\n/** @class */\nfunction () {\n  function ScreenSharingMessageSerializer(typeSerialization, flagSerialization, signalingDetailSerialization) {\n    this.typeSerialization = typeSerialization;\n    this.flagSerialization = flagSerialization;\n    this.signalingDetailSerialization = signalingDetailSerialization;\n  }\n\n  ScreenSharingMessageSerializer.prototype.serialize = function (message) {\n    var type = this.typeSerialization.serialize(message.type);\n    var flags = this.flagSerialization.serialize(message.flags);\n    var header = Uint8Array.of(type, flags, 0x0, 0x0);\n    return new Blob([header, message.data]);\n  };\n\n  ScreenSharingMessageSerializer.prototype.deserialize = function (buffer) {\n    var signalingDetail = null;\n    var type = this.typeSerialization.deserialize(buffer[0]);\n    var flags = this.flagSerialization.deserialize(buffer[1]);\n    var data = buffer.slice(4, buffer.length);\n\n    if (ScreenSharingMessageSerializer.detailedSignals.indexOf(type) > -1) {\n      signalingDetail = this.signalingDetailSerialization.deserialize(data).getOrElse(null);\n    }\n\n    return {\n      type: type,\n      flags: flags,\n      data: data,\n      detail: signalingDetail\n    };\n  };\n\n  ScreenSharingMessageSerializer.detailedSignals = Array.of(ScreenSharingMessageType_1.default.StreamStart, ScreenSharingMessageType_1.default.StreamEnd, ScreenSharingMessageType_1.default.PresenterSwitch);\n  return ScreenSharingMessageSerializer;\n}();\n\nexports.default = ScreenSharingMessageSerializer;","map":{"version":3,"sources":["../../src/screensharingmessageserialization/ScreenSharingMessageSerializer.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAKA,IAAA,0BAAA,GAAA,OAAA,CAAA,kDAAA,CAAA;;AAKA,IAAA,8BAAA;AAAA;AAAA,YAAA;AAOE,WAAA,8BAAA,CACU,iBADV,EAEU,iBAFV,EAGU,4BAHV,EAGwE;AAF9D,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,4BAAA,GAAA,4BAAA;AACN;;AAEJ,EAAA,8BAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAAuC;AACrC,QAAM,IAAI,GAAG,KAAK,iBAAL,CAAuB,SAAvB,CAAiC,OAAO,CAAC,IAAzC,CAAb;AACA,QAAM,KAAK,GAAG,KAAK,iBAAL,CAAuB,SAAvB,CAAiC,OAAO,CAAC,KAAzC,CAAd;AACA,QAAM,MAAM,GAAG,UAAU,CAAC,EAAX,CAAc,IAAd,EAAoB,KAApB,EAA2B,GAA3B,EAAgC,GAAhC,CAAf;AACA,WAAO,IAAI,IAAJ,CAAS,CAAC,MAAD,EAAS,OAAO,CAAC,IAAjB,CAAT,CAAP;AACD,GALD;;AAOA,EAAA,8BAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,MAAZ,EAA8B;AAC5B,QAAI,eAAe,GAAwB,IAA3C;AACA,QAAM,IAAI,GAAG,KAAK,iBAAL,CAAuB,WAAvB,CAAmC,MAAM,CAAC,CAAD,CAAzC,CAAb;AACA,QAAM,KAAK,GAAG,KAAK,iBAAL,CAAuB,WAAvB,CAAmC,MAAM,CAAC,CAAD,CAAzC,CAAd;AACA,QAAM,IAAI,GAAG,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,MAAM,CAAC,MAAvB,CAAb;;AACA,QAAI,8BAA8B,CAAC,eAA/B,CAA+C,OAA/C,CAAuD,IAAvD,IAA+D,CAAC,CAApE,EAAuE;AACrE,MAAA,eAAe,GAAG,KAAK,4BAAL,CAAkC,WAAlC,CAA8C,IAA9C,EAAoD,SAApD,CAA8D,IAA9D,CAAlB;AACD;;AACD,WAAO;AACL,MAAA,IAAI,EAAE,IADD;AAEL,MAAA,KAAK,EAAE,KAFF;AAGL,MAAA,IAAI,EAAE,IAHD;AAIL,MAAA,MAAM,EAAE;AAJH,KAAP;AAMD,GAdD;;AAnBe,EAAA,8BAAA,CAAA,eAAA,GAAkB,KAAK,CAAC,EAAN,CAC/B,0BAAA,CAAA,OAAA,CAAyB,WADM,EAE/B,0BAAA,CAAA,OAAA,CAAyB,SAFM,EAG/B,0BAAA,CAAA,OAAA,CAAyB,eAHM,CAAlB;AAkCjB,SAAA,8BAAA;AAAC,CAnCD,EAAA;;kBAAqB,8B","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ScreenSharingMessageType_1 = require(\"../screensharingmessage/ScreenSharingMessageType\");\nvar ScreenSharingMessageSerializer = /** @class */ (function () {\n    function ScreenSharingMessageSerializer(typeSerialization, flagSerialization, signalingDetailSerialization) {\n        this.typeSerialization = typeSerialization;\n        this.flagSerialization = flagSerialization;\n        this.signalingDetailSerialization = signalingDetailSerialization;\n    }\n    ScreenSharingMessageSerializer.prototype.serialize = function (message) {\n        var type = this.typeSerialization.serialize(message.type);\n        var flags = this.flagSerialization.serialize(message.flags);\n        var header = Uint8Array.of(type, flags, 0x0, 0x0);\n        return new Blob([header, message.data]);\n    };\n    ScreenSharingMessageSerializer.prototype.deserialize = function (buffer) {\n        var signalingDetail = null;\n        var type = this.typeSerialization.deserialize(buffer[0]);\n        var flags = this.flagSerialization.deserialize(buffer[1]);\n        var data = buffer.slice(4, buffer.length);\n        if (ScreenSharingMessageSerializer.detailedSignals.indexOf(type) > -1) {\n            signalingDetail = this.signalingDetailSerialization.deserialize(data).getOrElse(null);\n        }\n        return {\n            type: type,\n            flags: flags,\n            data: data,\n            detail: signalingDetail,\n        };\n    };\n    ScreenSharingMessageSerializer.detailedSignals = Array.of(ScreenSharingMessageType_1.default.StreamStart, ScreenSharingMessageType_1.default.StreamEnd, ScreenSharingMessageType_1.default.PresenterSwitch);\n    return ScreenSharingMessageSerializer;\n}());\nexports.default = ScreenSharingMessageSerializer;\n//# sourceMappingURL=ScreenSharingMessageSerializer.js.map"]},"metadata":{},"sourceType":"script"}