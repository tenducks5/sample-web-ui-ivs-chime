{"ast":null,"code":"\"use strict\"; // Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DragType_1 = require(\"./DragType\");\n\nvar DefaultDragObserver =\n/** @class */\nfunction () {\n  function DefaultDragObserver(window, element, callback) {\n    this.window = window;\n    this.element = element;\n    var context = {\n      isMouseDown: false\n    };\n    this.mouseDownEventListener = DefaultDragObserver.mouseDownEventListener(context, callback, element);\n    this.mouseMoveEventListener = DefaultDragObserver.mouseMoveEventListener(context, callback, element);\n    this.mouseUpEventListener = DefaultDragObserver.mouseUpEventListener(context, callback, element);\n    element.addEventListener('mousedown', this.mouseDownEventListener);\n    window.addEventListener('mousemove', this.mouseMoveEventListener);\n    window.addEventListener('mouseup', this.mouseUpEventListener);\n  }\n\n  DefaultDragObserver.prototype.unobserve = function () {\n    this.element.removeEventListener('mousedown', this.mouseDownEventListener);\n    this.window.removeEventListener('mousemove', this.mouseMoveEventListener);\n    this.window.removeEventListener('mouseup', this.mouseUpEventListener);\n  };\n\n  DefaultDragObserver.elementRelativeCoords = function (event, element) {\n    return [event.clientX - element.getBoundingClientRect().left, event.clientY - element.getBoundingClientRect().top];\n  };\n\n  DefaultDragObserver.mouseDownEventListener = function (context, callback, element) {\n    return function (event) {\n      context.isMouseDown = true;\n      var coords = DefaultDragObserver.elementRelativeCoords(event, element);\n      callback(context.last = {\n        type: DragType_1.default.BEGIN,\n        coords: coords,\n        last: context.last\n      });\n    };\n  };\n\n  DefaultDragObserver.mouseMoveEventListener = function (context, callback, element) {\n    return function (event) {\n      if (!context.isMouseDown) {\n        return;\n      }\n\n      callback(context.last = {\n        type: DragType_1.default.DRAG,\n        coords: DefaultDragObserver.elementRelativeCoords(event, element),\n        last: context.last\n      });\n    };\n  };\n\n  DefaultDragObserver.mouseUpEventListener = function (context, callback, element) {\n    return function (event) {\n      if (!context.isMouseDown) {\n        return;\n      }\n\n      context.isMouseDown = false;\n      callback(context.last = {\n        type: DragType_1.default.END,\n        coords: DefaultDragObserver.elementRelativeCoords(event, element),\n        last: context.last\n      });\n    };\n  };\n\n  return DefaultDragObserver;\n}();\n\nexports.default = DefaultDragObserver;","map":{"version":3,"sources":["../../src/dragobserver/DefaultDragObserver.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DragType_1 = require(\"./DragType\");\nvar DefaultDragObserver = /** @class */ (function () {\n    function DefaultDragObserver(window, element, callback) {\n        this.window = window;\n        this.element = element;\n        var context = { isMouseDown: false };\n        this.mouseDownEventListener = DefaultDragObserver.mouseDownEventListener(context, callback, element);\n        this.mouseMoveEventListener = DefaultDragObserver.mouseMoveEventListener(context, callback, element);\n        this.mouseUpEventListener = DefaultDragObserver.mouseUpEventListener(context, callback, element);\n        element.addEventListener('mousedown', this.mouseDownEventListener);\n        window.addEventListener('mousemove', this.mouseMoveEventListener);\n        window.addEventListener('mouseup', this.mouseUpEventListener);\n    }\n    DefaultDragObserver.prototype.unobserve = function () {\n        this.element.removeEventListener('mousedown', this.mouseDownEventListener);\n        this.window.removeEventListener('mousemove', this.mouseMoveEventListener);\n        this.window.removeEventListener('mouseup', this.mouseUpEventListener);\n    };\n    DefaultDragObserver.elementRelativeCoords = function (event, element) {\n        return [\n            event.clientX - element.getBoundingClientRect().left,\n            event.clientY - element.getBoundingClientRect().top,\n        ];\n    };\n    DefaultDragObserver.mouseDownEventListener = function (context, callback, element) { return function (event) {\n        context.isMouseDown = true;\n        var coords = DefaultDragObserver.elementRelativeCoords(event, element);\n        callback((context.last = {\n            type: DragType_1.default.BEGIN,\n            coords: coords,\n            last: context.last,\n        }));\n    }; };\n    DefaultDragObserver.mouseMoveEventListener = function (context, callback, element) { return function (event) {\n        if (!context.isMouseDown) {\n            return;\n        }\n        callback((context.last = {\n            type: DragType_1.default.DRAG,\n            coords: DefaultDragObserver.elementRelativeCoords(event, element),\n            last: context.last,\n        }));\n    }; };\n    DefaultDragObserver.mouseUpEventListener = function (context, callback, element) { return function (event) {\n        if (!context.isMouseDown) {\n            return;\n        }\n        context.isMouseDown = false;\n        callback((context.last = {\n            type: DragType_1.default.END,\n            coords: DefaultDragObserver.elementRelativeCoords(event, element),\n            last: context.last,\n        }));\n    }; };\n    return DefaultDragObserver;\n}());\nexports.default = DefaultDragObserver;\n//# sourceMappingURL=DefaultDragObserver.js.map"]},"metadata":{},"sourceType":"script"}