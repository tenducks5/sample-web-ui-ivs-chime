{"ast":null,"code":"\"use strict\"; // Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DefaultVideoCaptureAndEncodeParameter =\n/** @class */\nfunction () {\n  function DefaultVideoCaptureAndEncodeParameter(cameraWidth, cameraHeight, cameraFrameRate, maxEncodeBitrateKbps, isSimulcast) {\n    this.cameraWidth = cameraWidth;\n    this.cameraHeight = cameraHeight;\n    this.cameraFrameRate = cameraFrameRate;\n    this.maxEncodeBitrateKbps = maxEncodeBitrateKbps;\n    this.isSimulcast = isSimulcast;\n  }\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.equal = function (other) {\n    var checkForEqual = other.captureWidth() === this.cameraWidth && other.captureHeight() === this.cameraHeight && other.captureFrameRate() === this.cameraFrameRate && other.encodeBitrates().length === this.encodeBitrates().length && other.encodeWidths().length === this.encodeWidths().length && other.encodeHeights().length === this.encodeHeights().length;\n\n    if (checkForEqual) {\n      for (var i = 0; i < other.encodeWidths().length; i++) {\n        if (other.encodeWidths()[i] !== this.encodeWidths()[i] || other.encodeHeights()[i] !== this.encodeHeights()[i] || other.encodeBitrates()[i] !== this.encodeBitrates()[i]) {\n          checkForEqual = false;\n          return checkForEqual;\n        }\n      }\n    }\n\n    return checkForEqual;\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.clone = function () {\n    return new DefaultVideoCaptureAndEncodeParameter(this.cameraWidth, this.cameraHeight, this.cameraFrameRate, this.maxEncodeBitrateKbps, this.isSimulcast);\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.captureWidth = function () {\n    return this.cameraWidth;\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.captureHeight = function () {\n    return this.cameraHeight;\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.captureFrameRate = function () {\n    return this.cameraFrameRate;\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.encodeBitrates = function () {\n    // TODO: add simulcast layer\n    return [this.maxEncodeBitrateKbps];\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.encodeWidths = function () {\n    return [this.cameraWidth];\n  };\n\n  DefaultVideoCaptureAndEncodeParameter.prototype.encodeHeights = function () {\n    return [this.cameraHeight];\n  };\n\n  return DefaultVideoCaptureAndEncodeParameter;\n}();\n\nexports.default = DefaultVideoCaptureAndEncodeParameter;","map":{"version":3,"sources":["../../src/videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAIA,IAAA,qCAAA;AAAA;AAAA,YAAA;AAEE,WAAA,qCAAA,CACU,WADV,EAEU,YAFV,EAGU,eAHV,EAIU,oBAJV,EAKU,WALV,EAK8B;AAJpB,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,eAAA,GAAA,eAAA;AACA,SAAA,oBAAA,GAAA,oBAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACN;;AAEJ,EAAA,qCAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAAkD;AAChD,QAAI,aAAa,GACf,KAAK,CAAC,YAAN,OAAyB,KAAK,WAA9B,IACA,KAAK,CAAC,aAAN,OAA0B,KAAK,YAD/B,IAEA,KAAK,CAAC,gBAAN,OAA6B,KAAK,eAFlC,IAGA,KAAK,CAAC,cAAN,GAAuB,MAAvB,KAAkC,KAAK,cAAL,GAAsB,MAHxD,IAIA,KAAK,CAAC,YAAN,GAAqB,MAArB,KAAgC,KAAK,YAAL,GAAoB,MAJpD,IAKA,KAAK,CAAC,aAAN,GAAsB,MAAtB,KAAiC,KAAK,aAAL,GAAqB,MANxD;;AAQA,QAAI,aAAJ,EAAmB;AACjB,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,YAAN,GAAqB,MAAzC,EAAiD,CAAC,EAAlD,EAAsD;AACpD,YACE,KAAK,CAAC,YAAN,GAAqB,CAArB,MAA4B,KAAK,YAAL,GAAoB,CAApB,CAA5B,IACA,KAAK,CAAC,aAAN,GAAsB,CAAtB,MAA6B,KAAK,aAAL,GAAqB,CAArB,CAD7B,IAEA,KAAK,CAAC,cAAN,GAAuB,CAAvB,MAA8B,KAAK,cAAL,GAAsB,CAAtB,CAHhC,EAIE;AACA,UAAA,aAAa,GAAG,KAAhB;AACA,iBAAO,aAAP;AACD;AACF;AACF;;AAED,WAAO,aAAP;AACD,GAvBD;;AAyBA,EAAA,qCAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,WAAO,IAAI,qCAAJ,CACL,KAAK,WADA,EAEL,KAAK,YAFA,EAGL,KAAK,eAHA,EAIL,KAAK,oBAJA,EAKL,KAAK,WALA,CAAP;AAOD,GARD;;AAUA,EAAA,qCAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,WAAO,KAAK,WAAZ;AACD,GAFD;;AAIA,EAAA,qCAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAK,YAAZ;AACD,GAFD;;AAIA,EAAA,qCAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,WAAO,KAAK,eAAZ;AACD,GAFD;;AAIA,EAAA,qCAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACE;AACA,WAAO,CAAC,KAAK,oBAAN,CAAP;AACD,GAHD;;AAKA,EAAA,qCAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,WAAO,CAAC,KAAK,WAAN,CAAP;AACD,GAFD;;AAIA,EAAA,qCAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,CAAC,KAAK,YAAN,CAAP;AACD,GAFD;;AAGF,SAAA,qCAAA;AAAC,CArED,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultVideoCaptureAndEncodeParameter = /** @class */ (function () {\n    function DefaultVideoCaptureAndEncodeParameter(cameraWidth, cameraHeight, cameraFrameRate, maxEncodeBitrateKbps, isSimulcast) {\n        this.cameraWidth = cameraWidth;\n        this.cameraHeight = cameraHeight;\n        this.cameraFrameRate = cameraFrameRate;\n        this.maxEncodeBitrateKbps = maxEncodeBitrateKbps;\n        this.isSimulcast = isSimulcast;\n    }\n    DefaultVideoCaptureAndEncodeParameter.prototype.equal = function (other) {\n        var checkForEqual = other.captureWidth() === this.cameraWidth &&\n            other.captureHeight() === this.cameraHeight &&\n            other.captureFrameRate() === this.cameraFrameRate &&\n            other.encodeBitrates().length === this.encodeBitrates().length &&\n            other.encodeWidths().length === this.encodeWidths().length &&\n            other.encodeHeights().length === this.encodeHeights().length;\n        if (checkForEqual) {\n            for (var i = 0; i < other.encodeWidths().length; i++) {\n                if (other.encodeWidths()[i] !== this.encodeWidths()[i] ||\n                    other.encodeHeights()[i] !== this.encodeHeights()[i] ||\n                    other.encodeBitrates()[i] !== this.encodeBitrates()[i]) {\n                    checkForEqual = false;\n                    return checkForEqual;\n                }\n            }\n        }\n        return checkForEqual;\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.clone = function () {\n        return new DefaultVideoCaptureAndEncodeParameter(this.cameraWidth, this.cameraHeight, this.cameraFrameRate, this.maxEncodeBitrateKbps, this.isSimulcast);\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.captureWidth = function () {\n        return this.cameraWidth;\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.captureHeight = function () {\n        return this.cameraHeight;\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.captureFrameRate = function () {\n        return this.cameraFrameRate;\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.encodeBitrates = function () {\n        // TODO: add simulcast layer\n        return [this.maxEncodeBitrateKbps];\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.encodeWidths = function () {\n        return [this.cameraWidth];\n    };\n    DefaultVideoCaptureAndEncodeParameter.prototype.encodeHeights = function () {\n        return [this.cameraHeight];\n    };\n    return DefaultVideoCaptureAndEncodeParameter;\n}());\nexports.default = DefaultVideoCaptureAndEncodeParameter;\n//# sourceMappingURL=DefaultVideoCaptureAndEncodeParameter.js.map"]},"metadata":{},"sourceType":"script"}