{"ast":null,"code":"var _jsxFileName = \"/Users/sykang/Documents/Git/amazon-ivs-chime-web-demo/web-ui/src/components/chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DefaultPromisedWebSocketFactory, DefaultDOMWebSocketFactory, FullJitterBackoff, ReconnectingPromisedWebSocket } from 'amazon-chime-sdk-js';\nimport * as config from '../../config'; // Styles\n\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor() {\n    super();\n\n    this.scrollToBottom = () => {\n      this.messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.handleKeyDown = e => {\n      if (e.keyCode === 13) {\n        // keyCode 13 is carriage return\n        const {\n          message,\n          connection\n        } = this.state;\n        const {\n          username\n        } = this.props;\n\n        if (message) {\n          const data = `{\n          \"message\": \"sendmessage\",\n          \"data\": \"${username}::${message.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\"\n        }`;\n          connection.send(data);\n          this.setState({\n            message: ''\n          });\n        }\n      }\n    };\n\n    this.handleRoomClick = e => {\n      e.stopPropagation();\n      e.preventDefault();\n      const {\n        title\n      } = this.props;\n      const link = `${window.location.origin}${window.location.pathname.replace('meeting', 'index.html')}?action=join&room=${title}`;\n      if (config.DEBUG) console.log(link);\n      this.copyTextToClipboard(encodeURI(link));\n    };\n\n    this.setShowPopup = () => {\n      // show popup message\n      this.setState({\n        showPopup: true\n      }); // hide popup message after 2 seconds\n\n      setTimeout(() => {\n        this.setState({\n          showPopup: false\n        });\n      }, 2000);\n    };\n\n    this.copyTextToClipboard = text => {\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(text).then(() => {\n          this.setShowPopup();\n          if (config.DEBUG) console.log('Room link copied to clipboard');\n        }, err => {\n          if (config.DEBUG) console.log('Could not copy text: ', err);\n        });\n      }\n    };\n\n    this.parseUrls = userInput => {\n      var urlRegExp = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_.~#?&//=]*)/g;\n      let formattedMessage = userInput.replace(urlRegExp, match => {\n        let formattedMatch = match;\n\n        if (!match.startsWith('http')) {\n          formattedMatch = `http://${match}`;\n        }\n\n        return `<a href=${formattedMatch} class=\"chat-line__link\" target=\"_blank\" rel=\"noopener noreferrer\">${match}</a>`;\n      });\n      return formattedMessage;\n    };\n\n    this.renderMessages = () => {\n      const {\n        messages\n      } = this.state;\n      return messages.map(message => {\n        let formattedMessage = this.parseUrls(message.message);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-line\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: message.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: formattedMessage\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, message.timestamp, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this);\n      });\n    };\n\n    this.WEB_SOCKET_TIMEOUT_MS = 10000;\n    this.state = {\n      message: '',\n      messages: [],\n      connection: null,\n      showPopup: false\n    };\n    this.chatRef = /*#__PURE__*/React.createRef();\n    this.messagesEndRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.initChatConnection();\n  }\n\n  async initChatConnection() {\n    const {\n      Meeting,\n      Attendee\n    } = this.props.joinInfo;\n    const messagingUrl = `${config.CHAT_WEBSOCKET}?MeetingId=${Meeting.MeetingId}&AttendeeId=${Attendee.AttendeeId}&JoinToken=${Attendee.JoinToken}`;\n    const connection = new ReconnectingPromisedWebSocket(messagingUrl, [], 'arraybuffer', new DefaultPromisedWebSocketFactory(new DefaultDOMWebSocketFactory()), new FullJitterBackoff(1000, 0, 10000));\n    if (config.DEBUG) console.log(connection);\n    await connection.open(this.WEB_SOCKET_TIMEOUT_MS);\n    connection.addEventListener('message', event => {\n      const messages = this.state.messages;\n      const data = event.data.split('::');\n      const username = data[0];\n      const message = data.slice(1).join('::'); // in case the message contains the separator '::'\n\n      messages.push({\n        timestamp: Date.now(),\n        username,\n        message\n      });\n      this.setState({\n        messages\n      });\n    });\n    this.setState({\n      connection\n    });\n    this.chatRef.current.focus();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    const {\n      message,\n      showPopup\n    } = this.state;\n    const popup = showPopup ? 'show' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat full-height pos-relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__room-link full-width\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"room-link popup\",\n          onClick: this.handleRoomClick,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room-link__label\",\n            children: this.props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"room-link__svg\",\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 20 20\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M3.25033 9.99999C3.25033 8.57499 4.40866 7.41666 5.83366 7.41666H9.16699V5.83333H5.83366C3.53366 5.83333 1.66699 7.69999 1.66699 9.99999C1.66699 12.3 3.53366 14.1667 5.83366 14.1667H9.16699V12.5833H5.83366C4.40866 12.5833 3.25033 11.425 3.25033 9.99999ZM6.66699 10.8333H13.3337V9.16666H6.66699V10.8333ZM14.167 5.83333H10.8337V7.41666H14.167C15.592 7.41666 16.7503 8.57499 16.7503 9.99999C16.7503 11.425 15.592 12.5833 14.167 12.5833H10.8337V14.1667H14.167C16.467 14.1667 18.3337 12.3 18.3337 9.99999C18.3337 7.69999 16.467 5.83333 14.167 5.83333Z\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 135\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `popuptext ${popup}`,\n            id: \"myPopup\",\n            children: \"Room link copied to clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__wrapper full-width pos-relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages pd-x-1 pos-absolute\",\n          children: [this.renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: this.messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"composer chime-web-composer full-width\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.chatRef,\n          type: \"text\",\n          placeholder: \"Say something\",\n          value: message,\n          maxLength: 510,\n          onChange: this.handleChange,\n          onKeyDown: this.handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nChat.propTypes = {\n  chime: PropTypes.object,\n  title: PropTypes.string,\n  username: PropTypes.string,\n  joinInfo: PropTypes.object\n};\nexport default Chat;","map":{"version":3,"sources":["/Users/sykang/Documents/Git/amazon-ivs-chime-web-demo/web-ui/src/components/chat/Chat.jsx"],"names":["React","Component","PropTypes","DefaultPromisedWebSocketFactory","DefaultDOMWebSocketFactory","FullJitterBackoff","ReconnectingPromisedWebSocket","config","Chat","constructor","scrollToBottom","messagesEndRef","current","scrollIntoView","behavior","handleChange","e","setState","message","target","value","handleKeyDown","keyCode","connection","state","username","props","data","replace","send","handleRoomClick","stopPropagation","preventDefault","title","link","window","location","origin","pathname","DEBUG","console","log","copyTextToClipboard","encodeURI","setShowPopup","showPopup","setTimeout","text","navigator","clipboard","writeText","then","err","parseUrls","userInput","urlRegExp","formattedMessage","match","formattedMatch","startsWith","renderMessages","messages","map","__html","timestamp","WEB_SOCKET_TIMEOUT_MS","chatRef","createRef","componentDidMount","initChatConnection","Meeting","Attendee","joinInfo","messagingUrl","CHAT_WEBSOCKET","MeetingId","AttendeeId","JoinToken","open","addEventListener","event","split","slice","join","push","Date","now","focus","componentDidUpdate","render","popup","propTypes","chime","object","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DefaultPromisedWebSocketFactory,\n  DefaultDOMWebSocketFactory,\n  FullJitterBackoff,\n  ReconnectingPromisedWebSocket\n} from 'amazon-chime-sdk-js';\nimport * as config from '../../config';\n\n// Styles\nimport './Chat.css';\n\nclass Chat extends Component {\n  constructor() {\n    super ();\n\n    this.WEB_SOCKET_TIMEOUT_MS = 10000;\n\n    this.state = {\n      message: '',\n      messages: [],\n      connection: null,\n      showPopup: false\n    }\n    this.chatRef = React.createRef();\n    this.messagesEndRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.initChatConnection();\n  }\n\n  async initChatConnection() {\n    const { Meeting, Attendee } = this.props.joinInfo;\n    const messagingUrl = `${config.CHAT_WEBSOCKET}?MeetingId=${Meeting.MeetingId}&AttendeeId=${Attendee.AttendeeId}&JoinToken=${Attendee.JoinToken}`\n    const connection = new ReconnectingPromisedWebSocket(\n      messagingUrl,\n      [],\n      'arraybuffer',\n      new DefaultPromisedWebSocketFactory(new DefaultDOMWebSocketFactory()),\n      new FullJitterBackoff(1000, 0, 10000)\n    );\n\n    if (config.DEBUG) console.log(connection);\n\n    await connection.open(this.WEB_SOCKET_TIMEOUT_MS);\n\n    connection.addEventListener('message', event => {\n      const messages = this.state.messages;\n      const data = event.data.split('::');\n      const username = data[0];\n      const message = data.slice(1).join('::'); // in case the message contains the separator '::'\n\n      messages.push({\n        timestamp: Date.now(),\n        username,\n        message\n      });\n\n      this.setState({ messages });\n    });\n\n    this.setState({ connection });\n\n    this.chatRef.current.focus();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  handleChange = e => {\n    this.setState({ message: e.target.value })\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13) { // keyCode 13 is carriage return\n      const { message, connection } = this.state;\n      const { username } = this.props;\n      if (message) {\n        const data = `{\n          \"message\": \"sendmessage\",\n          \"data\": \"${username}::${message.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\"\n        }`;\n        connection.send(data);\n\n        this.setState({ message: '' });\n      }\n    }\n  }\n\n  handleRoomClick = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { title } = this.props;\n    const link = `${window.location.origin}${window.location.pathname.replace('meeting', 'index.html')}?action=join&room=${title}`;\n    if (config.DEBUG) console.log(link);\n    this.copyTextToClipboard(encodeURI(link));\n  }\n\n  setShowPopup = () => {\n    // show popup message\n    this.setState({ showPopup: true });\n\n    // hide popup message after 2 seconds\n    setTimeout(() => {\n      this.setState({ showPopup: false })\n    }, 2000);\n  }\n\n  copyTextToClipboard = text => {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(text)\n      .then(() => {\n        this.setShowPopup();\n        if (config.DEBUG) console.log('Room link copied to clipboard');\n      }, (err) => {\n        if (config.DEBUG) console.log('Could not copy text: ', err);\n      });\n    }\n  }\n\n  parseUrls = (userInput) => {\n    var urlRegExp = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_.~#?&//=]*)/g;\n    let formattedMessage = userInput.replace(urlRegExp, (match) => {\n      let formattedMatch = match;\n      if (!match.startsWith('http')) {\n        formattedMatch = `http://${match}`;\n      }\n      return `<a href=${formattedMatch} class=\"chat-line__link\" target=\"_blank\" rel=\"noopener noreferrer\">${match}</a>`;\n    });\n    return formattedMessage;\n  }\n\n  renderMessages = () => {\n    const { messages } = this.state;\n    return (\n      messages.map(message => {\n        let formattedMessage = this.parseUrls(message.message);\n        return (\n          <div className=\"chat-line\" key={message.timestamp}>\n            <p><span className=\"username\">{message.username}</span><span dangerouslySetInnerHTML={{__html: formattedMessage}} /></p>\n          </div>\n        )\n      })\n    )\n  }\n\n  render() {\n    const { message, showPopup } = this.state;\n    const popup = showPopup ? 'show' : '';\n    return (\n      <div className=\"chat full-height pos-relative\">\n        <div className=\"chat__room-link full-width\">\n          <button className=\"room-link popup\" onClick={this.handleRoomClick}>\n            <span className=\"room-link__label\">{this.props.title}</span>\n            <svg className=\"room-link__svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.25033 9.99999C3.25033 8.57499 4.40866 7.41666 5.83366 7.41666H9.16699V5.83333H5.83366C3.53366 5.83333 1.66699 7.69999 1.66699 9.99999C1.66699 12.3 3.53366 14.1667 5.83366 14.1667H9.16699V12.5833H5.83366C4.40866 12.5833 3.25033 11.425 3.25033 9.99999ZM6.66699 10.8333H13.3337V9.16666H6.66699V10.8333ZM14.167 5.83333H10.8337V7.41666H14.167C15.592 7.41666 16.7503 8.57499 16.7503 9.99999C16.7503 11.425 15.592 12.5833 14.167 12.5833H10.8337V14.1667H14.167C16.467 14.1667 18.3337 12.3 18.3337 9.99999C18.3337 7.69999 16.467 5.83333 14.167 5.83333Z\" fill=\"white\"/></svg>\n            <span className={`popuptext ${popup}`} id=\"myPopup\">Room link copied to clipboard</span>\n          </button>\n        </div>\n        <div className=\"chat__wrapper full-width pos-relative\">\n          <div className=\"messages pd-x-1 pos-absolute\">\n            {this.renderMessages()}\n            <div ref={this.messagesEndRef} />\n          </div>\n        </div>\n        <div className=\"composer chime-web-composer full-width\">\n          <input\n            ref={this.chatRef}\n            type=\"text\"\n            placeholder=\"Say something\"\n            value={message}\n            maxLength={510}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nChat.propTypes = {\n  chime: PropTypes.object,\n  title: PropTypes.string,\n  username: PropTypes.string,\n  joinInfo: PropTypes.object\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}