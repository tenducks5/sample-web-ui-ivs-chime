{"ast":null,"code":"var _jsxFileName = \"/Users/sykang/Documents/Git/amazon-ivs-chime-web-demo/web-ui/src/components/chimeWeb/Meeting.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as config from '../../config';\nimport { MeetingSessionStatusCode } from 'amazon-chime-sdk-js'; // Components\n\nimport VideoPlayer from '../videoPlayer/VideoPlayer';\nimport Chat from '../chat/Chat';\nimport Controls from './Controls';\nimport Settings from './Settings';\nimport LocalVideo from './LocalVideo';\nimport RemoteVideoGroup from './RemoteVideoGroup';\nimport Error from './Error'; // Styles\n\nimport './ChimeWeb.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Meeting extends Component {\n  constructor() {\n    super();\n    this.state = {\n      meetingStatus: null,\n      // Loading, Success or Failed\n      showSettings: false,\n      showError: false,\n      errorMsg: ''\n    };\n\n    this.openSettings = () => {\n      this.setState({\n        showSettings: true\n      });\n    };\n\n    this.closeSettings = () => {\n      this.setState({\n        showSettings: false\n      });\n    };\n\n    this.handleClick = e => {\n      const {\n        showSettings\n      } = this.state;\n\n      if (showSettings) {\n        let node = e.target;\n        let isModal = false;\n\n        while (node) {\n          if (node && node.classList && node.classList.contains('modal__el')) {\n            isModal = true;\n            break;\n          }\n\n          node = node.parentNode;\n        }\n\n        if (!isModal) {\n          this.setState({\n            showSettings: false\n          });\n        }\n      }\n    };\n\n    this.saveSettings = (playbackURL, currentAudioInputDevice, currentAudioOutputDevice, currentVideoInputDevice) => {\n      this.setState({\n        showSettings: false,\n        currentAudioInputDevice,\n        currentAudioOutputDevice,\n        currentVideoInputDevice\n      });\n    };\n\n    this.setMetadataId = metadataId => {\n      this.setState({\n        metadataId\n      });\n    };\n\n    this.setErrorMsg = errorMsg => {\n      this.setState({\n        errorMsg,\n        showError: true\n      });\n    };\n\n    this.closeError = () => {\n      this.setState({\n        showError: false\n      });\n    };\n\n    this.layout = () => {\n      if (this.state.meetingStatus !== 'Success') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-grid\",\n        onClick: this.handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-stage\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cams pos-relative\",\n            children: [/*#__PURE__*/_jsxDEV(LocalVideo, {\n              chime: this.props.chime,\n              joinInfo: this.joinInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(RemoteVideoGroup, {\n              chime: this.props.chime,\n              joinInfo: this.joinInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            setMetadataId: this.setMetadataId,\n            videoStream: this.playbackURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {\n            chime: this.props.chime,\n            baseHref: this.baseHref,\n            ssName: this.ssName,\n            title: this.title,\n            openSettings: this.openSettings,\n            role: this.role,\n            history: this.props.history,\n            myVideoElement: this.myVideoElement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          chime: this.props.chime,\n          title: this.title,\n          username: this.username,\n          joinInfo: this.joinInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), this.state.showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n          chime: this.props.chime,\n          joinInfo: this.joinInfo,\n          saveSettings: this.saveSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.baseHref = config.BASE_HREF;\n    this.ssName = '';\n    this.audioElementRef = /*#__PURE__*/React.createRef();\n    this.myVideoElement = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const start = async () => {\n      try {\n        const qs = new URLSearchParams(this.props.location.search);\n        const room = qs.get('room');\n        this.ssName = `chime[${room}]`;\n\n        if (!room || !sessionStorage.getItem(this.ssName)) {\n          this.props.history.push(`${this.baseHref}/`);\n        }\n\n        const ssData = JSON.parse(sessionStorage.getItem(this.ssName));\n        if (config.DEBUG) console.log(ssData);\n        this.username = ssData.username;\n        this.title = ssData.title;\n        this.role = ssData.role;\n\n        if (!ssData.joinInfo) {\n          this.joinInfo = await this.props.chime.createRoom(this.role, this.username, this.title, ssData.playbackURL);\n          const data = { ...ssData,\n            joinInfo: this.joinInfo\n          };\n          sessionStorage.setItem(this.ssName, JSON.stringify(data));\n          this.playbackURL = this.joinInfo.PlaybackURL;\n        } else {\n          // Browser refresh\n          this.joinInfo = ssData.joinInfo;\n          this.playbackURL = ssData.joinInfo.PlaybackURL;\n          await this.props.chime.reInitializeMeetingSession(this.joinInfo, this.username);\n        }\n\n        this.setState({\n          meetingStatus: 'Success'\n        });\n        this.props.chime.audioVideo.addObserver({\n          audioVideoDidStop: async sessionStatus => {\n            if (sessionStatus.statusCode() === MeetingSessionStatusCode.AudioCallEnded) {\n              const whereTo = `${this.baseHref}/${this.role === 'host' ? '' : 'end'}`;\n              this.props.chime.leaveRoom(this.role === 'host');\n              this.props.history.push(whereTo);\n            }\n          }\n        });\n        await this.props.chime.joinRoom(this.audioElementRef.current);\n      } catch (error) {\n        // eslint-disable-next-line\n        console.error(error);\n        this.setState({\n          meetingStatus: 'Failed'\n        });\n      }\n    };\n\n    start();\n  }\n  /*\n   * Settings\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: this.audioElementRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), this.layout(), this.state.showError && /*#__PURE__*/_jsxDEV(Error, {\n        closeError: this.closeError,\n        errorMsg: this.state.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMeeting.propTypes = {\n  chime: PropTypes.object\n};\nexport default _c = withRouter(Meeting);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/sykang/Documents/Git/amazon-ivs-chime-web-demo/web-ui/src/components/chimeWeb/Meeting.jsx"],"names":["React","Component","withRouter","PropTypes","config","MeetingSessionStatusCode","VideoPlayer","Chat","Controls","Settings","LocalVideo","RemoteVideoGroup","Error","Meeting","constructor","state","meetingStatus","showSettings","showError","errorMsg","openSettings","setState","closeSettings","handleClick","e","node","target","isModal","classList","contains","parentNode","saveSettings","playbackURL","currentAudioInputDevice","currentAudioOutputDevice","currentVideoInputDevice","setMetadataId","metadataId","setErrorMsg","closeError","layout","props","chime","joinInfo","baseHref","ssName","title","role","history","myVideoElement","username","BASE_HREF","audioElementRef","createRef","componentDidMount","start","qs","URLSearchParams","location","search","room","get","sessionStorage","getItem","push","ssData","JSON","parse","DEBUG","console","log","createRoom","data","setItem","stringify","PlaybackURL","reInitializeMeetingSession","audioVideo","addObserver","audioVideoDidStop","sessionStatus","statusCode","AudioCallEnded","whereTo","leaveRoom","joinRoom","current","error","render","display","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as config from '../../config';\n\nimport {\n  MeetingSessionStatusCode\n} from 'amazon-chime-sdk-js';\n\n// Components\nimport VideoPlayer from '../videoPlayer/VideoPlayer';\nimport Chat from '../chat/Chat';\nimport Controls from './Controls';\nimport Settings from './Settings';\nimport LocalVideo from './LocalVideo';\nimport RemoteVideoGroup from './RemoteVideoGroup';\nimport Error from './Error';\n\n// Styles\nimport './ChimeWeb.css';\n\nclass Meeting extends Component {\n\n  state = {\n    meetingStatus: null, // Loading, Success or Failed\n    showSettings: false,\n\n    showError: false,\n    errorMsg: '',\n  }\n\n  constructor() {\n    super();\n\n    this.baseHref = config.BASE_HREF;\n    this.ssName = '';\n\n    this.audioElementRef = React.createRef();\n    this.myVideoElement = React.createRef();\n  }\n\n  componentDidMount() {\n\n    const start = async () => {\n      try {\n\n        const qs = new URLSearchParams(this.props.location.search);\n        const room = qs.get('room');\n        this.ssName = `chime[${room}]`;\n        if (!room || !sessionStorage.getItem(this.ssName)) {\n          this.props.history.push(`${this.baseHref}/`);\n        }\n\n        const ssData = JSON.parse(sessionStorage.getItem(this.ssName));\n        if (config.DEBUG) console.log(ssData);\n\n        this.username = ssData.username;\n        this.title = ssData.title;\n        this.role = ssData.role;\n\n        if (!ssData.joinInfo) {\n          this.joinInfo = await this.props.chime.createRoom(this.role, this.username, this.title, ssData.playbackURL);\n          const data = {\n            ...ssData,\n            joinInfo: this.joinInfo\n          }\n          sessionStorage.setItem(this.ssName, JSON.stringify(data));\n          this.playbackURL = this.joinInfo.PlaybackURL;\n        } else {\n          // Browser refresh\n          this.joinInfo = ssData.joinInfo;\n          this.playbackURL = ssData.joinInfo.PlaybackURL;\n          await this.props.chime.reInitializeMeetingSession(this.joinInfo, this.username);\n        }\n\n        this.setState({ meetingStatus: 'Success' });\n\n        this.props.chime.audioVideo.addObserver({\n          audioVideoDidStop: async (sessionStatus) => {\n            if (sessionStatus.statusCode() === MeetingSessionStatusCode.AudioCallEnded) {\n              const whereTo = `${this.baseHref}/${this.role === 'host' ? '' : 'end'}`;\n              this.props.chime.leaveRoom(this.role === 'host');\n              this.props.history.push(whereTo);\n            }\n          }\n        });\n\n        await this.props.chime.joinRoom(this.audioElementRef.current);\n      } catch (error) {\n        // eslint-disable-next-line\n        console.error(error);\n        this.setState({ meetingStatus: 'Failed' });\n      }\n    };\n    start();\n  }\n\n  /*\n   * Settings\n   */\n\n  openSettings = () => {\n    this.setState({ showSettings: true });\n  }\n\n  closeSettings = () => {\n    this.setState({ showSettings: false });\n  }\n\n  handleClick = (e) => {\n    const { showSettings } = this.state;\n    if (showSettings) {\n      let node = e.target;\n      let isModal = false;\n      while (node) {\n        if (node && node.classList && node.classList.contains('modal__el')) {\n          isModal = true;\n          break;\n        }\n        node = node.parentNode;\n      }\n      if (!isModal) {\n        this.setState({ showSettings: false });\n      }\n    }\n  }\n\n  saveSettings = (playbackURL, currentAudioInputDevice, currentAudioOutputDevice, currentVideoInputDevice) => {\n    this.setState({\n      showSettings: false,\n      currentAudioInputDevice,\n      currentAudioOutputDevice,\n      currentVideoInputDevice\n    });\n  }\n\n  setMetadataId = (metadataId) => {\n    this.setState({ metadataId });\n  }\n\n  setErrorMsg = errorMsg => {\n    this.setState({ errorMsg, showError: true });\n  }\n\n  closeError = () => {\n    this.setState({ showError: false });\n  }\n\n  layout = () => {\n    if(this.state.meetingStatus !== 'Success') {\n      return;\n    }\n\n    return (\n      <div className=\"app-grid\" onClick={this.handleClick}>\n        <div className=\"main-stage\">\n          <div className=\"cams pos-relative\">\n          <LocalVideo\n            chime={this.props.chime}\n            joinInfo={this.joinInfo}\n          />\n          <RemoteVideoGroup\n            chime={this.props.chime}\n            joinInfo={this.joinInfo}\n          />\n          </div>\n          <VideoPlayer\n            setMetadataId={this.setMetadataId}\n            videoStream={this.playbackURL}\n          />\n          <Controls\n            chime={this.props.chime}\n            baseHref={this.baseHref}\n            ssName={this.ssName}\n            title={this.title}\n            openSettings={this.openSettings}\n            role={this.role}\n            history={this.props.history}\n            myVideoElement={this.myVideoElement}\n          />\n        </div>\n        <Chat\n          chime={this.props.chime}\n          title={this.title}\n          username={this.username}\n          joinInfo={this.joinInfo}\n        />\n        {this.state.showSettings && (\n          <Settings\n            chime={this.props.chime}\n            joinInfo={this.joinInfo}\n            saveSettings={this.saveSettings}\n          />\n        )}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        <audio ref={this.audioElementRef} style={{ display: 'none' }} />\n\n        {this.layout()}\n\n        {this.state.showError && (\n          <Error\n            closeError={this.closeError}\n            errorMsg={this.state.errorMsg}\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nMeeting.propTypes = {\n  chime: PropTypes.object\n};\n\nexport default withRouter(Meeting);\n"]},"metadata":{},"sourceType":"module"}